function init(){
	if(!user)
	{
		$.ajax({
			type: "GET",
			url: "getSavedProjects.php",
			cache: false,
			success: function(data)
			{
				var select = $("#projects");
				var list = [];
				var projects = JSON.parse(data);
				list.push('<option value="none" selected> Nothing</option>');	
				for(i=0; i < projects.length; i++)
				{
					list.push('<option data-subtext="' + projects[i].latest + '" value="' + projects[i].id + '">' + projects[i].title + ' -- /option>');
				}
				select.html(list.join(''));
				select.selectpicker('refresh');
			}
		});
	}

	baseSubWatershed = getBoundaryCR("subwatershed", null, false);
	baseStates = getBoundaryCR('states', null, false);
	baseRegion = getBoundaryCR("region", null, false);
	baseBEA10 = getBoundaryCR("bea10", null, false);
	baseCBSA10 = getBoundaryCR("cbsa10", null, false);
	baseERS10 = getBoundaryCR("ers10", null, false);
	baseERS10Rep = getBoundaryCR("ers10rep", null, false);
	baseMSAs_Grainger = getBoundaryCR("msas_grainger", null, false);
	// baseOpportunityZones = getBoundaryCR("opportunityzones");
	basePEA10 = getBoundaryCR("pea10", null, false);
	baseTP10 = getBoundaryCR("tp10", null, false);
	baseTP10METRO = getBoundaryCR("tp10metro", null, false);
	baseTP10MICRO = getBoundaryCR("tp10micro", null, false);
	baseTribalLand = getBoundaryCR("triballand", null, false);
	baseSchools_CCD = getBoundaryCR("schools_ccd", null, false);
	baseConsumerMarket = getBoundaryCR("consumermarket", null, false);
	baseHSA = getBoundaryCR("hsa", null, false);
	baseHRR = getBoundaryCR("hrr", null, false);
	baseWaterShedRegions = getBoundaryCR("watershedregions", null, false);
	wmsSubWatershed = getWMS("SubWatershed", "subwatershed", "subwatershed", false);

	airport = getFilteredAlbertsons("Airports", "\"type\"='large_airport'");
	airport.set('displayInLayerSwitcher', false);
	airport.setVisible(false);

	enterprisebuildings = getWFSCluster('Enterprise Buildings', 'enterprisebuildings', 30);
	networkbuildings = getWFSCluster('Network Buildings', 'networkbuildings', 30);
	farmer = getWFSCluster('Farmers Markets', 'farmers', $("#clusterIntFarmers").val());
	stores = getWFSCluster('Grocery Stores', 'stores', $("#clusterIntStores").val());
	logo = getWFSCluster('Retailers (sample)', 'logos', $("#clusterIntLogo").val());
	interchange = getWFSCluster('Interchanges', 'interchanges', $("#clusterIntInterchanges").val());
	transStop = getWFSCluster('Transit Stops', 'transitstations', $("#clusterIntTransit").val());
	portFacility = getWFSCluster('Port Facility', 'port_facility', $("#clusterIntPort").val());
	garden = getWFSCluster('Community Gardens', 'gardens', $("#clusterIntGarden").val());
	shelter = getWFSCluster('Homemade Shelters', 'homemade_shelters', $("#clusterIntShelter").val());
	unitsa = getWFSCluster('Units A', 'unitsa', $("#clusterIntShelter").val());
	unitsb = getWFSCluster('Units B', 'unitsb', $("#clusterIntShelter").val());
	potbellytwo = getWFSCluster('Potbelly Two', 'potbellytwo', $("#clusterIntShelter").val());
	hot_springs = getWFSCluster('Hot Springs', 'hot_springs', $("#clusterIntHotSprings").val());
	landbanks = getWFSCluster('Land Banks', 'landbanks', $("#clusterIntHotSprings").val());
	iana = getWFSCluster('Intermodal Site', 'iana', $("#clusterIntIana").val());
	traffic = getWFSCluster('IL Traffic Counts', 'traffic', $("#clusterIntTraffic").val());
	ports = getWFSCluster('Major US Ports', 'ports', $("#clusterIntPorts").val());
	dhl = getWFSCluster('DHL', 'dhl', $("#clusterIntDHL").val());
	fedex = getWFSCluster('Fedex', 'fedex', $("#clusterIntFedex").val());
	ups = getWFSCluster('UPS', 'ups', $("#clusterIntUPS").val());
	amazon = getWFSCluster('Amazon', 'amazon', $("#clusterIntAmazon").val());
	mclane = getWFSCluster('Mclane', 'mclane', $("#clusterIntMclane").val());
	sysco = getWFSCluster('Sysco', 'sysco', $("#clusterIntSysco").val());
	robinsonfresh = getWFSCluster('RobinsonFresh', 'robinsonfresh', $("#clusterIntRobinsonFresh").val());
	kehe = getWFSCluster('KeHE Distributors', 'kehe', $("#clusterIntKeHE").val());
	vistar = getWFSCluster('Vistar', 'vistar', $("#clusterIntVistar").val());
	sygma = getWFSCluster('Sygma', 'sygma', $("#clusterIntSygma").val());
	dmadcs = getWFSCluster('DMA DCs', 'dmadcs', $("#clusterIntDmaDcs").val());
	pfgpfs = getWFSCluster('PFG / PFS', 'pfgpfs', $("#clusterIntPfgpfs").val());
	usf = getWFSCluster('US Foods', 'usfoods', $("#clusterIntUsf").val());
	natural = getWFSCluster('Natural', 'names_natural', $("#clusterIntNatural").val());
	manmade = getWFSCluster('Manmade', 'names_manmade', $("#clusterIntManmade").val());
	manmade_destinations = getWFSCluster('Manmade Destinations', 'manmade_destinations', $("#clusterIntManmade").val());
	manmade_faith = getWFSCluster('Manmade Faith-based', 'manmade_faith', $("#clusterIntManmade").val());
	manmade_govt_places = getWFSCluster('Manmade Government Places', 'manmade_govt_places', $("#clusterIntManmade").val());
	manmade_infrastructure = getWFSCluster('Manmade Infrastructure', 'manmade_infrastructure', $("#clusterIntManmade").val());
	manmade_public_spaces = getWFSCluster('Manmade Public Spaces', 'manmade_public_spaces', $("#clusterIntManmade").val());
	manmade_retail_prices = getWFSCluster('Manmade Retail Places', 'manmade_retail_prices', $("#clusterIntManmade").val());
	freightIntersects = getWFSCluster('Freight Intersects', 'freightintersects', $("#clusterIntFreight").val());
	primary = getWFSCluster('Schools CCD Primary', 'schools_ccd_primary', $("#clusterIntPrimary").val());
	pssprivate = getWFSCluster('Schools PSS Private', 'schools_pss_private', $("#clusterIntPss").val());
	
	banks_2012 = getWFSCluster('Banks 2012', 'banks_2012', $("#clusterIntBank").val());
	banks_2016 = getWFSCluster('Banks 2016', 'banks_2016', $("#clusterIntBank").val());
	banks_2017 = getWFSCluster('Banks 2017', 'banks_2017', $("#clusterIntBank").val());
	edwardjones = getWFSCluster('Edward Jones', 'edwardjones', $("#clusterIntEdwardJones").val());
	creditunions = getWFSCluster('Credit Unions', 'creditunions', $("#clusterIntCreditUnions").val());
	
	agencies = getWFSCluster('Agencies', 'agencies', $("#clusterIntAgencies").val());
	agent_ca = getWFSCluster('Agent Locations - Address Based', 'agent_ca', $("#clusterIntCA").val());
	agent_za = getWFSCluster('Agent Locations - Zip Based', 'agent_za', $("#clusterIntZA").val());

	albertsons = getWFSCluster('Albertsons', 'albertsons', $("#clusterIntAlbertsons").val());
	kroger = getWFSCluster('Kroger', 'kroger', $("#clusterIntKroger").val());
	culver = getWFSCluster('Culver\'s Restaurants', 'culver', $("#clusterIntCulver").val());
	potbelly = getWFSCluster('Potbelly', 'potbelly', $("#clusterIntPotbelly").val());
	starbucks = getWFSCluster('Starbucks', 'starbucks', $("#clusterIntStarbucks").val());
	fiveguys = getWFSCluster('Five Guys', 'fiveguys', $("#clusterIntFiveGuys").val());
	raisingcanes = getWFSCluster('Raising Canes', 'raisingcanes', $("#clusterIntRaisingCanes").val());
	aldiSixteen = getWFSCluster('Aldi Stores (2016)', 'aldi_2016', $("#clusterIntAldi").val());
	aldiSixteenClosed = getWFSCluster('Aldi Stores (Now Closed)', 'aldi_2016_closed', $("#clusterIntAldi").val());
	aldiEighteen = getWFSCluster('Aldi Stores (2018)', 'aldi_2018', $("#clusterIntAldi").val());
	aldiEighteenNew = getWFSCluster('Aldi Stores (Newly Opened)', 'aldi_2018_new', $("#clusterIntAldi").val());
	thornton = getWFSCluster('Thornton', 'thornton', $("#clusterIntThornton").val());
	parkway = getWFSCluster('Parkway', 'parkway', $("#clusterIntBank").val());
	tartan = getWFSCluster('Tartan', 'tartan', $("#clusterIntTartan").val());
	uhaul = getWFSCluster('Uhaul', 'uhaul', $("#clusterIntUhaul").val());
	fortune = getWFSCluster('Fortune', 'fortune', $("#clusterIntFortune").val());
	fairgrounds = getWFSCluster('Fairgrounds', 'fairgrounds', $("#clusterIntFairgrounds").val());
	paca = getWFSCluster('PACA Operators', 'paca', $("#clusterIntPACA").val());
	poultryfacilities = getWFSCluster('Poultry', 'poultryfacilities', $("#clusterIntPoultry").val());
	dicks = getWFSCluster('Dicks', 'dicks', $("#clusterIntDicks").val());
	keef = getWFSCluster('Keef', 'keef', $("#clusterIntKeef").val());
	ethanol = getWFSCluster('Ethanol', 'ethanol_plants', $("#clusterIntEthanol").val());
	tapetro = getWFSCluster('TA Petro', 'tapetro', $("#clusterIntTAPetro").val());
	biodieselplants = getWFSCluster('Biodiesel Plants', 'biodiesel_plants', $("#clusterIntBiodieselplants").val());
	oilrefineries = getWFSCluster('Oil Refineries', 'oil_refineries', $("#clusterIntOilrefineries").val());
	grainger = getWFSCluster('Grainger', 'grainger', $("#clusterIntGrainger").val());
	brownfields = getWFSCluster('Brownfields', 'brownfields', $("#clusterIntBrownfields").val());
	publix = getWFSCluster('Publix', 'publix', $("#clusterIntPublix").val());
	gianteagle = getWFSCluster('Giant Eagle', 'gianteagle', $("#clusterIntGiantEagle").val());
	traderjoes = getWFSCluster('Trader Joe\'s', 'traderjoes', $("#clusterIntTraderJoes").val());
	wholefoods = getWFSCluster('Whole Foods', 'wholefoods', $("#clusterIntWholeFoods").val());
	shoppingcenter = getWFSCluster('Shopping Centers', 'shoppingcenter', $("#clusterIntShopping").val());
	foodplants = getWFSCluster('Tyson Food Plants', 'foodplants', $("#clusterIntTyson").val());
	hydroponics = getWFSCluster('Hydroponics', 'hydroponic_growers', $("#clusterIntHydroponics").val());
	ngpoperators = getWFSCluster('NGP Operators', 'strcentroids', $("#clusterIntHydroponics").val());
	closings = getWFSCluster('Sears', 'closings', $("#clusterIntSears").val());
	toysrus = getWFSCluster('Toys R Us', 'toysrus', $("#clusterIntToys").val());
	gymboree = getWFSCluster('Gymboree', 'gymboree', $("#clusterIntGymboree").val());
	distributor = getWFSCluster('Distributor', 'distributor', $("#clusterIntDistributor").val());
	ranchesandfarms = getWFSCluster('Ranches & Farms', 'ranchesandfarms', $("#clusterIntRanches").val());
	dma = getWFSCluster('DMA', 'dma', $("#clusterIntDMA").val());
	
	primaryHealth = getWFSCluster('Primary Care', 'primaryfacilities', 30);
	dentalHealth = getWFSCluster('Dental Health', 'dentalfacilities', 30);
	mentalHealth = getWFSCluster('Mental Health', 'mentalfacilities', 30);
	ascHealth = getWFSCluster('Ambulatory Surgical Centers', 'asc', 30);
	dermasoloHealth = getWFSCluster('Derma Solo', 'dermasolo', 30);
	dermagroupHealth = getWFSCluster('Derma Group', 'dermagroup', 30);
	plasticsurgerysoloHealth = getWFSCluster('Plastic Surgery Solo', 'plasticsurgerysolo', 30);
	plasticsurgerygroupHealth = getWFSCluster('Plastic Surgery Group', 'plasticsurgerygroup', 30);
	providersHealth = getWFSCluster('Providers', 'providers', 30);
	
	corn = getWFSCluster('Corn', 'corn', '30');
	cbrands = getWFSCluster('Constellation Brands', 'cbrands', '30');
	
	tstops = getWFSCluster('Transit Stations', 'ntm_tstops', '30');

	refrigeratedlocations = getWFSCluster('R&F Locations', 'refrigeratedlocations', $("#clusterIntRefri").val());
	wfsHrr = getBoundary("Hospital Referral Regions (HRRs)","hrr");
	wfsASB = getBoundary("Agency Service Bounds","ntm_asb");
	wfsAG = getBoundary("AG Districts","ag_districts_merged");
	wfsMPO = getBoundary("Metropolitan Planning Organizations","ntm_mpo");
	wfsHsa = getBoundary("Hospital Service Areas (HSAs)","hsa");
	wfsPcsa = getBoundary("Primary Care Service Areas (PCSAs)","pcsa");
	wfsRegion = getBoundary("Geographic (Regions)","region");
	wfsStates = getBoundary("States","states");
	wfsDistricts = getBoundary("Districts","districts");
	wfsCities = getBoundary("Cities","cities");
	wfsCounties = getBoundary("Counties","counties");
	wfsUrbanRural = getBoundary("","UrbanRural_2013");
	wfsNeighbors = getBoundary("Neighborhoods","neighbourcities");
	wfsRFF = getBoundary("Refrigerated","rff");
	wfsCulturalRegions = getBoundary("Cultural Regions","cultural_reg");
	wfsSTD5 = getBoundary("Food Regions (5)","std5");
	wfsSTD10 = getBoundary("Food Regions (10)","std10");
	wfsTriballand = getBoundary("Tribal Nation Lands (US)","triballand");
	wfsMsas = getBoundary("MSAs","msas");
	wfsCMB = getBoundary("Consumer Market Boundaries","consumermarketboundaries");
	wfsActiveCoverage = getBoundary("ActiveCoverage","active_coverage");
	wfsReducedCoverage = getBoundary("ReducedCoverage","reduced_coverage");
	wfsTotalCoverage = getBoundary("TotalCoverage","total_coverage");
	wfsBEA10 = getBoundary("BEA10","bea10");
	wfsCBSA10 = getBoundary("CBSA10","cbsa10");
	wfsERS10 = getBoundary("ERS10","ers10");
	wfsERS10Rep = getBoundary("ERS10REP","ers10rep");
	wfsPEA10 = getBoundary("PEA10","pea10");
	wfsTP10 = getBoundary("TP10","tp10");
	wfsTP10Metro = getBoundary("TP10METRO","tp10metro");
	wfsTP10Micro = getBoundary("TP10MICRO","tp10micro");
	wfsCFS = getBoundary("Shipments (FAF)","cfs_area");
	wfsCommuterRegions = getBoundary("","commuters_reg");
	wfsMegaregion = getBoundary("Megaregion","megareg");
	wfsZips = getBoundary("Zip Codes","zip");
	wfsSTRCoverage = getBoundary("STR Coverage","str_coverage");
	wfsCCD = getBoundary("Primary School Districts","schools_ccd");
	wfsSCSD = getBoundary("School Districts","scsd");
	
	wfsSubwatershed = getBoundary("Sub Watershed Boundaries - HUC12","subwatershed");
	wfsSubbasin = getBoundary("Sub Basin Boundaries - HUC8","subbasinsimple");
	wfsSubregions = getBoundary("Watershed Sub Region Boundaries - HUC4","watershedsubregions");
	wfsRegions = getBoundary("Watershed Region Boundaries - HUC2","watershedregions");

	if (window.location.hash !== '') {
		var hash = window.location.hash.replace('#map=', '');
		var parts = hash.split('/');
		if (parts.length === 5) {
			// zoom = parseInt(parts[0], 10);
			// center = [
				// parseFloat(parts[1]),
				// parseFloat(parts[2])
			// ];
			// rotation = parseFloat(parts[3]);
				base = parts[4];
		}
		if (base == "aerial") {
			$('#selBaseMap').selectpicker('val', 'aerial');
			bingAerial.setVisible(true);
			bingRoads.setVisible(false);
			terrainStamen.setVisible(false);
			osmLight.setVisible(false);
		} else if (base == "terrain") {
			$('#selBaseMap').selectpicker('val', 'terrain');
			bingAerial.setVisible(false);
			terrainStamen.setVisible(true);
			bingRoads.setVisible(false);
			osmLight.setVisible(false);
		} else if (base == "roads") {
			$('#selBaseMap').selectpicker('val', 'streets');
			bingAerial.setVisible(false);
			terrainStamen.setVisible(false);
			bingRoads.setVisible(true);
			osmLight.setVisible(false);
		} else if (base == "osm") {
			$('#selBaseMap').selectpicker('val', 'osm');
			bingAerial.setVisible(false);
			terrainStamen.setVisible(false);
			bingRoads.setVisible(false);
			osmLight.setVisible(true);
		}
	}
	container = document.getElementById('popup');
	content = document.getElementById('popup-content');
	closer = document.getElementById('popup-closer');
	var mousePositionControl = new ol.control.MousePosition({
		coordinateFormat: ol.coordinate.createStringXY(4),
		projection: 'EPSG:4326',
		className: 'custom-mouse-position',
		target: document.getElementById('mouse-position'),
		undefinedHTML: 'Lat, Long'
	});
	var overviewMapControl = new ol.control.OverviewMap({
		layers: [
			ovLayer
		],
		collapsed: true
	});
	overlay = new ol.Overlay( /** @type {olx.OverlayOptions} */ ({
		element: container,
		autoPan: true,
		autoPanAnimation: {
			duration: 250
		}
	}));
	closer.onclick = function() {
		overlay.setPosition(undefined);
		closer.blur();
		return false;
	};
	
	if (window.location.hash !== '') {
		var hash = window.location.hash.replace('#map=', '');
		var parts = hash.split('/');
		if (parts.length === 5) {
			zoom = parseInt(parts[0], 10);
			center = [
				parseFloat(parts[1]),
				parseFloat(parts[2])
			];
			rotation = parseFloat(parts[3]);
		}
	}

	map = new ol.Map({
		target: 'map',
		controls: ol.control.defaults({
			attributionOptions: ({
				collapsible: true
			})
		}).extend([
			overviewMapControl,
			mousePositionControl,
			new ol.control.ZoomSlider(),
			new ol.control.ScaleLine({
				'units': 'us'
			})
		]),
		interactions: [
			dragInteraction,
			new ol.interaction.DragRotateAndZoom(),
			new ol.interaction.MouseWheelZoom(),
			new ol.interaction.DragPan(),
			new ol.interaction.DoubleClickZoom(),
			hoverInteraction,
			new ol.interaction.PinchZoom({
				constrainResolution: false
			})
		],
		layers: [
			/* Base Maps*/
			bingAerial,
			terrainStamen,
			bingRoads,
			osmLight,
			/* Raster Datasets*/
			wmsOneSix,
			wmsNeOneTwo,
			wmsNeOneThree,
			wmsNeOneFour,
			wmsNeOneFive,
			wmsNeOneSix,
			wmsNeOneSeven,
			wmsCAOneSevenCustom,
			wmsGAOneSevenCustom,
			wmsFLOneSevenCustom,
			wmsNCOneSevenCustom,
			wmsSCOneSevenCustom,
			wmsCaliZE,
			wmsCaliOS,
			/* Polygon Datasets*/
			birds,
			fish,
			mammals,
			reptiles,
			trees,
			popuWMSMW,
			incomeWMSMW,
			densityWMSMW,
			hhWMSMW,
			vacancyWMS,
			wmsUrbanRural,
			primaryeconomictype,
			tapestry,
			ptrrWMSOS,
			naicsest,
			naicsap,
			naicsgrainger,
			cattle,
			cattlemasked,
			cattletop,
			ethanol_production,
			dataCenters,
			ffr,
			ffrchange,
			ffrpopu,
			ffrpopuchange,
			fsr,
			fsrchange,
			fsrpopu,
			fsrpopuchange,
			farmermarket,
			farmermarketchange,
			dsf,
			ngp,
			dsfchange,
			hydroponic_growers_county,
			noofstores,
			job_gravity,
			retail_gravity,
			nooforganicgrowers,
			noofestt,
			noofjobs,
			percentjobs,
			wdpa,
			eqi,
			drought,
			droughtmonitor,
			aquifer,
			majorsoilresource,
			alluvialandglacial,
			dni,
			ghi,
			lalit,
			phm,
			phmzip,
			cornno,
			foodaccess,
			households,
			avg_hh_size_renters,
			avg_hh_size_owners,
			avg_hh_size,
			gross_hh_density,
			job_density_simple,
			retail_density_simple,
			refri,
			aldiDivisions,
			bankzip2012,
			bankzip2016,
			bankzip2017,
			bankcountydep2012,
			bankcountydep2016,
			bankcountydep2017,
			bankcountyasset2012,
			bankcountyasset2016,
			bankcountyasset2017,
			bankcountydepchangeone,
			bankcountydepchangeoneper,
			bankcountydepchangefive,
			bankcountydepchangefiveper,
			bankcountyasschangeone,
			bankcountyasschangeoneper,
			bankcountyasschangefive,
			bankcountyasschangefiveper,
			healthCond,
			muap,
			lowincomet,
			la1and10,
			latracts_h,
			latracts20,
			lilatracts,
			primaryeconomictypetwo,
			naics,
			buildings,
			opportunityzones,
			emipc,
			emipcstate,
			emitl,
			emitlstate,
			fdipc,
			fdipcstate,
			ftpc,
			ftpcstate,
			ihpc,
			ihpcstate,
			ihtl,
			ihtlstate,
			mtpc,
			mtpcstate,
			mttl,
			mttlstate,
			ctxstate,
			emx,
			emxstate,
			fdx,
			fdxstate,
			mhbx,
			mhbxstate,
			mtx,
			mtxstate,
			tlx,
			tlxstate,
			wdx,
			wdxstate,
			owner_occupied_hu,
			renter_occupied_hu,
			pct_renters,
			pct_renter_occupied_hu,
			pct_hu_1_detached,
			employment,
			unemployment,
			median_smoc_mortgage,
			median_gross_rent,
			avg_h_cost,
			commuters_per_hh,
			median_hh_income,
			median_commute,
			agsum,
			agr17,
			agr18,
			potbellyfranchise,
			dieseltaxrates,
			solidbiomass,
			AviationNoise,
			RoadNoise,
			crops_production,
			housingconditions,
			/* Isochrone Layer*/
			trafficRaster,
			isoChroneLayer,
			freightWMS,
			highwayWMS,
			railwayWMS,
			naturalgasWMS,
			transNetWMS,
			portBoundaryWMS,
			metrobackboneWMS,
			metrolateralWMS,
			longhaulnetworkWMS,
			canadalonghaulnetworkWMS,
			ownedlonghaulnetworkWMS,
			mappingLayer,
			sqlJoinLayer,
			txtSearchLayer,
			txtSearchLayerRegion,
			heatMap,
			analysisLayer,
			radiusLayer,
			storeLayer,
			densityLayer,
			vacancyLayer,
			gardenLayer,
			searchLayer,
			markerLayer,
			/* Boundary Datasets*/
			wmsNeighbors,
			wfsNeighbors,
			wmsTriballand,
			wfsTriballand,
			wmsRFF,
			wfsRFF,
			wmsCulturalRegions,
			wfsCulturalRegions,
			wmsSTD5,
			wfsSTD5,
			wmsSTD10,
			wfsSTD10,
			padus,
			wmsMsas,
			wfsMsas,
			wmsCommuterRegions,
			wfsCommuterRegions,
			wmsMegaregion,
			wfsMegaregion,
			wmsCounties,
			wfsCounties,
			wmsCities,
			wfsCities,
			wmsDistricts,
			wfsDistricts,
			wmsStates,
			wfsStates,
			wmsRegion,
			wfsRegion,
			wmsActiveCoverage,
			wfsActiveCoverage,
			wmsReducedCoverage,
			wfsReducedCoverage,
			wmsTotalCoverage,
			wfsTotalCoverage,
			wmsBEA10,
			wfsBEA10,
			wmsCBSA10,
			wfsCBSA10,
			wmsERS10,
			wfsERS10,
			wmsERS10Rep,
			wfsERS10Rep,
			wmsPEA10,
			wfsPEA10,
			wmsTP10,
			wfsTP10,
			wmsTP10Metro,
			wfsTP10Metro,
			wmsTP10Micro,
			wfsTP10Micro,
			wmsCFS,
			wfsCFS,
			wmsCMB,
			wfsCMB,
			wmsPcsa,
			wfsPcsa,
			wmsMPO,
			wfsMPO,
			wmsASB,
			wfsASB,
			wmsAG,
			wfsAG,
			wmsHsa,
			wfsHsa,
			wmsHrr,
			wfsHrr,
			wmsSCSD,
			wfsSCSD,
			wmsCCD,
			wfsCCD,
			wmsZips,
			wfsZips,
			wmsSTRCoverage,
			wfsSTRCoverage,
			coastalline,
			subwatershed,
			wfsSubwatershed,
			watershedsubbasin,
			wfsSubbasin,
			watershedsubregions,
			wfsSubregions,
			watershedregions,
			wfsRegions,
			fr,
			scr,
			rr,
			br,
			surfacewater,
			/* Pinpoint Datasets*/
			natural,
			manmade,
			manmade_retail_prices,
			manmade_public_spaces,
			manmade_infrastructure,
			manmade_govt_places,
			manmade_faith,
			manmade_destinations,
			ups,
			logo,
			traffic,
			radiusPortsLayer,
			ports,
			garden,
			fedex,
			dhl,
			enterprisebuildings,
			networkbuildings,
			tstops,
			/* Housing Zones*/
			SantaBarbara_County_CA,
			Riverside_County_CA,
			MiamiDade_County_FL,
			Howard_County_MD,
			Fresno_County_CA,
			Clark_County_NV,
			Baltimore_County_MD,
			Albuquerque_NM,
			Alexandria_VA,
			Amarillo_TX,
			Anaheim_CA,
			Arlington_TX,
			Atlanta_GA,
			Aurora_CO,
			Austin_TX,
			Bakersfield_CA,
			Baltimore_MD,
			BatonRouge_LA,
			Boston_MA,
			Brownsville_TX,
			Cambridge_MA,
			Charlotte_NC,
			Chattanooga_TN,
			Chesapeake_VA,
			Chicago_IL,
			Cincinnati_OH,
			Cleveland_OH,
			Columbus_OH,
			Dallas_TX,
			Dayton_OH,
			Denver_CO,
			DesMoines_IA,
			Detroit_MI,
			Durham_NC,
			ElPaso_TX,
			Fargo_ND,
			Flint_MI,
			FortWayne_IN,
			Fremont_CA,
			Glendale_AZ,
			Glendale_CA,
			Hartford_CT,
			Henderson_NV,
			Hialeah_FL,
			HuntingtonBeach_CA,
			Huntsville_AL,
			Indianapolis_IN,
			Irvine_CA,
			KansasCity_MO,
			Kent_WA,
			Laredo_TX,
			LasCruces_NM,
			LasVegas_NV,
			Lexington_KY,
			Lincoln_NE,
			LongBeach_CA,
			LosAngeles_CA,
			Lowell_MA,
			Madison_WI,
			Memphis_TN,
			Milwaukee_WI,
			Minneapolis_MN,
			NewOrleans_LA,
			NewYorkCity_NY,
			Newark_NJ,
			NewportBeach_CA,
			Norfolk_VA,
			NorthLasVegas_NV,
			Oakland_CA,
			Omaha_NE,
			Orlando_FL,
			Philadelphia_PA,
			Phoenix_AZ,
			Pittsburgh_PA,
			Plano_TX,
			Portland_ME,
			Portland_OR,
			Providence_RI,
			Raleigh_NC,
			Richmond_VA,
			Rochester_NY,
			Sacramento_CA,
			SaltLakeCity_UT,
			SanDiego_CA,
			SanFrancisco_CA,
			SanJose_CA,
			SantaRosa_CA,
			Seattle_WA,
			SimiValley_CA,
			Somerville_MA,
			SouthBurlington_VT,
			StLouis_MO,
			Stockton_CA,
			Tacoma_WA,
			Tallahassee_FL,
			Tampa_FL,
			Toledo_OH,
			Tucson_AZ,
			Tulsa_OK,
			VirginiaBeach_VA,
			Washington_DC,
			Wichita_KS,
			WinstonSalem_NC,
			Worcester_MA,
			/* Retail Datasets*/
			voronoiPolygons,
			voronoiPoints,
			distributor,
			ranchesandfarms,
			corn,
			cbrands,
			pssprivate,
			banks_2012,
			banks_2016,
			banks_2017,
			edwardjones,
			radiusEdwardJonesLayer,
			creditunions,
			radiusCreditUnionsLayer,
			agencies,
			radiusAgenciesLayer,
			agent_ca,
			radiusCALayer,
			agent_za,
			radiusZALayer,
			primary,
			measureLayer,
			voronoiHospitals,
			radiusInterchangesLayer,
			interchange,
			radiusUsfLayer,
			usf,
			radiusTransitstopLayer,
			transStop,
			radiusRobinsonFreshLayer,
			robinsonfresh,
			radiusKeHELayer,
			kehe,
			radiusPFGPSFLayer,
			pfgpfs,
			radiusSygmaLayer,
			sygma,
			radiusDmaDcsLayer,
			dmadcs,
			radiusVistarLayer,
			vistar,
			radiusSyscoLayer,
			sysco,
			radiusStoresLayer,
			stores,
			radiusPortfacilityLayer,
			portFacility,
			radiusIanaLayer,
			iana,
			radiusShelterLayer,
			shelter,
			radiusUnitsALayer,
			unitsa,
			radiusUnitsBLayer,
			unitsb,
			potbellytwo,
			radiusLandBanksLayer,
			landbanks,
			radiusHotSpringsLayer,
			hot_springs,
			radiusFreightIntLayer,
			freightIntersects,
			radiusFarmerLayer,
			farmer,
			radiusAmazonLayer,
			amazon,
			radiusMclaneLayer,
			mclane,
			radiusAirportLayer,
			airport,
			radiusAlbertsonsLayer,
			albertsons,
			radiusKrogerLayer,
			kroger,
			radiusStarBucksLayer,
			starbucks,
			radiusFiveGuysLayer,
			fiveguys,
			radiusRaisingCanesLayer,
			raisingcanes,
			radiusCulverLayer,
			culver,
			radiusPotbellyLayer,
			potbelly,
			radiusAldiSixteenLayer,
			aldiSixteen,
			radiusAldiSixteenClosedLayer,
			aldiSixteenClosed,
			radiusAldiEighteenLayer,
			aldiEighteen,
			radiusAldiEighteenNewLayer,
			aldiEighteenNew,
			radiusThorntonLayer,
			thornton,
			radiusDicksLayer,
			dicks,
			radiusKeefLayer,
			keef,
			radiusEthanolLayer,
			ethanol,
			radiusGraingerLayer,
			grainger,
			radiusBrownFieldsLayer,
			brownfields,
			radiusWholeFoodsLayer,
			wholefoods,
			radiusTraderJoesLayer,
			traderjoes,
			radiusPublixLayer,
			publix,
			radiusGiantEagleLayer,
			gianteagle,
			radiusShoppingLayer,
			shoppingcenter,
			radiusFoodplantsLayer,
			foodplants,
			radiusHydroponicsLayer,
			hydroponics,
			ngpoperators,
			radiusClosingsLayer,
			closings,
			radiusToysrusLayer,
			toysrus,
			radiusGymboreeLayer,
			gymboree,
			radiusDMALayer,
			dma,
			radiusParkwayLayer,
			parkway,
			radiusTartanLayer,
			tartan,
			radiusUhaulLayer,
			uhaul,
			radiusPACALayer,
			paca,
			radiusPoultryLayer,
			poultryfacilities,
			radiusFairgroundLayer,
			fairgrounds,
			radiusFortuneLayer,
			fortune,
			radiusTAPetroLayer,
			tapetro,
			radiusBiodieselLayer,
			biodieselplants,
			radiusOilrefineriesLayer,
			oilrefineries,
			radiusRefriLayer,
			refrigeratedlocations,
			radiusPrimaryHealth,
			primaryHealth,
			radiusDentalHealthLayer,
			dentalHealth,
			radiusMentalHealthLayer,
			mentalHealth,
			radiusAscHealthLayer,
			ascHealth,
			radiusDermaSoloHealthLayer,
			dermasoloHealth,
			radiusDermaGroupHealthLayer,
			dermagroupHealth,
			radiusPSSoloHealthLayer,
			plasticsurgerysoloHealth,
			radiusPSGroupHealthLayer,
			plasticsurgerygroupHealth,
			radiusProvidersHealthLayer,
			providersHealth,
			wmsSubWatershed,
			baseStates,
			baseSubWatershed,
			baseRegion,
			baseBEA10,
			baseCBSA10,
			baseERS10,
			baseERS10Rep,
			baseMSAs_Grainger,
			basePEA10,
			baseTP10,
			baseTP10METRO,
			baseTP10MICRO,
			baseTribalLand,
			baseWaterShedRegions
		],
		overlays: [overlay],
		view: new ol.View({
			center: mapCenter != null ? mapCenter : center,
			zoom: mapZoom != null ? mapCenter : zoom,
			rotation: mapRotation != null ? mapRotation : 0
		})
	});

	var shouldUpdate = true;
	var view = map.getView();
	updatePermalink = function() {
		if (!shouldUpdate) {
			shouldUpdate = true;
			return;
		}
		var base = '';
		switch ($("#selBaseMap").val()) {
			case 'aerial':
				base = 'aerial';
				break;
			case 'terrain':
				base = 'terrain';
				break;
			case 'streets':
				base = 'roads';
				break;
			case 'osm':
				base = 'osm';
				break;
			default:
				break;
		}
		var center = view.getCenter();
		var hash = '#map=' +
			view.getZoom() + '/' +
			Math.round(center[0] * 100) / 100 + '/' +
			Math.round(center[1] * 100) / 100 + '/' +
			view.getRotation() + '/' + base;
		var state = {
			zoom: view.getZoom(),
			center: view.getCenter(),
			rotation: view.getRotation()
		};
		window.history.pushState(state, 'map', hash);
			updateRadius();

		try{updateResourceOnGS(banks_2012, "banks_2012", ol.proj.transformExtent(map.getView().calculateExtent(map.getSize()), 'EPSG:3857', 'EPSG:4326'));}catch(e){}
		try{updateResourceOnGS(banks_2016, "banks_2016", ol.proj.transformExtent(map.getView().calculateExtent(map.getSize()), 'EPSG:3857', 'EPSG:4326'));}catch(e){}
		try{updateResourceOnGS(banks_2017, "banks_2017", ol.proj.transformExtent(map.getView().calculateExtent(map.getSize()), 'EPSG:3857', 'EPSG:4326'));}catch(e){}
		try{updateResourceOnGS(albertsons, "albertsons", ol.proj.transformExtent(map.getView().calculateExtent(map.getSize()), 'EPSG:3857', 'EPSG:4326'));}catch(e){}
		try{updateResourceOnGS(kroger, "kroger", ol.proj.transformExtent(map.getView().calculateExtent(map.getSize()), 'EPSG:3857', 'EPSG:4326'));}catch(e){}
		try{updateResourceOnGS(airport, "airports", ol.proj.transformExtent(map.getView().calculateExtent(map.getSize()), 'EPSG:3857', 'EPSG:4326'));}catch(e){}
		try{updateResourceOnGS(dma, "dma", ol.proj.transformExtent(map.getView().calculateExtent(map.getSize()), 'EPSG:3857', 'EPSG:4326'));}catch(e){}
		try{updateResourceOnGS(refrigeratedlocations, "refrigeratedlocations", ol.proj.transformExtent(map.getView().calculateExtent(map.getSize()), 'EPSG:3857', 'EPSG:4326'));}catch(e){}
	};

	map.on('moveend', updatePermalink);
	map.on('zoomend', removePopup);

	changeBaseMap();

	div = d3.select("body").append("div")
		.attr("class", "tooltip")
		.style("opacity", 0);

	map.on('pointermove', function(evt) {
		if (evt.dragging) {
			return;
		}
		var pixel = map.getEventPixel(evt.originalEvent);
		var hit = map.forEachLayerAtPixel(pixel, function(layer) {
			var source = layer.getSource();
			if (source instanceof ol.source.TileWMS || source instanceof ol.source.Vector) {
				return layer;
			}
		});
		map.getTargetElement().style.cursor = hit ? 'pointer' : '';
	});

	map.on('singleclick', onMouseClick);

	var contextmenu_items = [{
			text: 'Delete Last Vertex',
			classname: 'bold',
			icon: 'images/context/clean.png',
			callback: removeVertex
		},
		'-'
	];

	var contextmenu = new ContextMenu({
		width: 180,
		// items: contextmenu_items
	});

	// map.addControl(contextmenu);

	window.addEventListener('popstate', function(event) {
		if (event.state === null) {
			return;
		}
		map.getView().setCenter(event.state.center);
		map.getView().setZoom(event.state.zoom);
		map.getView().setRotation(event.state.rotation);
		shouldUpdate = false;
	});

	$('.nav-tabs a[href="#menu3"]').tab('show');
	$('.nav-tabs a[href="#tab3"]').tab('show');
	$('.nav-tabs a[href="#menu1"]').tab('show');
	$('.nav-tabs a[href="#tab1"]').tab('show');

	geocoder = new Geocoder('nominatim', {
		provider: 'osm',
		countrycodes: 'US',
		limit: 10,
		autoComplete: true,
		keepOpen: true
	});
	map.addControl(geocoder);

	geocoder.on('addresschosen', function(evt) {
		window.setTimeout(function() {
			var coords = ol.proj.transform(evt.coordinate, 'EPSG:3857', 'EPSG:4326');
			content.innerHTML = "<h4 style='color:#0072BC'>" + evt.address.original.details.city + "<br>" + evt.address.original.details.state + "</h4>" +
			"<h4 style='color:#0072BC'>" + evt.address.original.details.county + "</h4>" +
			"<h4>Some Rank</h4>" +
			"<h4>Population Count</h4><br>" +
			"About: <a target='_blank' href='#'>Link</a><br>" +
			"<a href='javascript:zoomToFeature(" + coords[1] + "<br>" + coords[0] + ",13,false);'>Zoom</a>" + "<div tyle='float:right;'><a target='_blank' href=''>City Profile</a>";
			overlay.setPosition(evt.coordinate);
		}, 3000);
	});

	map.getInteractions().getArray().forEach(function(interaction) {
		if (interaction instanceof ol.interaction.DoubleClickZoom) {
			interaction.setActive(false);
		}
	});

	map.once('precompose', function() {
		projection = init_ol_d3(this);
	});

	wfsMsas.set('selectable', true);
	wfsStates.set('selectable', true);
			
	map.on('pointermove', pointerMoveHandler);
		
	ol.style.FillPattern.addPattern ("copy (char pattern)", { char:"©" });
	ol.style.FillPattern.addPattern ("bug (fontawesome)", { char:'\uf188', size:12, font:"10px FontAwesome" });
	ol.style.FillPattern.addPattern ("smiley (width angle)", { char:'\uf118', size:20, angle:true, font:"15px FontAwesome" });

	$("#select").click(function()
	{	
		$("#pselect").toggle();
	});
		
	pat = "hatch";
	spattern = $("#pselect");
	for (var i in ol.style.FillPattern.prototype.patterns)
	{	var p = new ol.style.FillPattern({ pattern:i });
		$("<div>").attr('title',i)
				.css("background-image",'url("'+p.getImage().toDataURL()+'")')
				.click(function(){ pat = $(this).attr("title"); refresh(); })
				.appendTo(spattern);
	}
	var p = new ol.style.FillPattern({ image: new ol.style.Icon({ src : imgFile }) });
	$("<div>").attr('title','Image (PNG)')
		.css("background-image",'url("'+imgFile+'")')
		.click(function(){ pat = $(this).attr("title"); refresh(); })
		.appendTo(spattern);
	refresh = function()
	{	
		$("#pselect").hide();
		try{mappingSource.changed();}catch(ex){}
		try{radiusSource.changed();}catch(ex){}
		if ( $.inArray(pat,["hatch","cross","dot","circle","square","tile"]) < 0 )
		{	$("#size").prop("disabled",true);
			$("#spacing").prop("disabled",true);
			$("#angle").prop("disabled",true);
			$("#angle").next().text("");
		}
		else
		{	
			$("#size").prop("disabled",false);
			$("#spacing").prop("disabled",false);
			$("#angle").prop("disabled",false);
			if (pat=="hatch") 
				$("#angle").next().text("(deg)");
			else 
				$("#angle").next().text("(bool)");
		}
		var p = new ol.style.FillPattern(
		{	
			pattern: pat,
			image: (pat=='Image (PNG)') ? new ol.style.Icon({ src : imgFile }) : undefined,
			ratio: 2,
			color: "#000",
			size: Number($("#size").val()),
			spacing: Number($("#spacing").val()),
			angle: Number($("#angle").val())
		});
		$("#select").css('background-image', 'url('+p.getImage().toDataURL()+')');
	};
		
	refresh();
		
	$("#popup").show();
		
	var switcher = new ol.control.LayerSwitcher({	
		target:$(".layerSwitcher").get(0),
		show_progress:false,
		extent: false,
		trash: false
	});

	map.addControl(switcher);
		
	$('body').addClass('hideOpacity');
		
	changeTimeDist('active');
		
	dragInteraction.setActive(false);

	map.on('singleclick', function(evt) {
		var options = {
			bbox: extentVoronoi
		};
		var turfFeatures = [];
		var features;
		var addedFeature;
		var voronoi;
		var fc;
		var coordinate = evt.coordinate;
		coord = ol.proj.transform(coordinate, 'EPSG:3857', 'EPSG:4326');
		if (add == true) {
			var addedFeature = voronoiPointsSource.getFeatures()[0].S.features[0].clone();
			addedFeature.setGeometry(new ol.geom.Point(ol.proj.transform(coord, 'EPSG:4326', 'EPSG:3857')));
			if(ol.extent.containsExtent(extentVoronoi, addedFeature.getGeometry().getExtent()))
				voronoiPointsSource.addFeature(addedFeature);
			else
				return;
			features = voronoiPointsSource.getFeatures();
			for (i = 0; i < features.length; i++){
				turfFeatures.push(turf.point(features[i].getGeometry().getCoordinates()))
			}
			fc = turf.featureCollection(turfFeatures);
			voronoi = turf.voronoi(fc, options);

			voronoiPointsSource.clear();
			voronoiPolygonsSource.clear();
				
			voronoiPolygonsSource = new ol.source.Vector({
				features: (new ol.format.GeoJSON()).readFeatures(voronoi)
			});
			voronoiPointsSource.addFeatures(features);
			showRespectiveOpts(false);
		}
		else if (del == true) {
			try
			{
				var feature = map.forEachFeatureAtPixel(evt.pixel, function(feature, layer) {
					if(layer.get('name') == "Voronoi Pins")
						return feature;
					else
						return;
				});
				voronoiPointsSource.removeFeature(feature);
				features = voronoiPointsSource.getFeatures();
					
				for (i = 0; i < features.length; i++){
					turfFeatures.push(turf.point(features[i].getGeometry().getCoordinates()))
				}
				fc = turf.featureCollection(turfFeatures);
				voronoi = turf.voronoi(fc, options);
			
				voronoiPointsSource.clear();
				voronoiPolygonsSource.clear();
						
				voronoiPolygonsSource = new ol.source.Vector({
					features: (new ol.format.GeoJSON()).readFeatures(voronoi)
				});
				voronoiPointsSource.addFeatures(features);
				
				showRespectiveOpts(false);
			}catch(ex){}
		}
	});
	dragInteraction.on('translating',function(e){
		if(modify == true)
		{
			if(ol.extent.containsExtent(extentVoronoi, e.features.a[0].getGeometry().getExtent()))
			{
				var options = {
					bbox: extentVoronoi
				};
				var turfFeatures = [];
				var features = voronoiPoints.getSource().getFeaturesInExtent(extentVoronoi);
				for (i = 0; i < features.length; i++){
					turfFeatures.push(turf.point(features[i].getGeometry().getCoordinates()))
				}
				var fc = turf.featureCollection(turfFeatures);
				var voronoi = turf.voronoi(fc, options);
				voronoiPolygonsSource.clear();
				
				voronoiPolygonsSource = new ol.source.Vector({
					features: (new ol.format.GeoJSON()).readFeatures(voronoi)
				});
					
				showRespectiveOpts(false);
			}
			else
				return;
		}
	});
		
	addStatesVoro('US','us', true);
	
	var dims = {
		a0: [1189, 841],
		a1: [841, 594],
		a2: [594, 420],
		a3: [420, 297],
		a4: [297, 210],
		a5: [210, 148],
		letter: [215.9, 279.4],
		legal: [216, 356],
		tabloid: [279.4, 431.8]
	};

	map.once('postcompose', function(event) {
		canvas = event.context.canvas;
	});
	if (window.location.hash !== '') {
		var hash = window.location.hash.replace('#map=', '');
		var parts = hash.split('/');
		if (parts.length === 5) {
			base = parts[4];
		}
		if (base == "aerial") {
			raster = bingAerial;
		} else if (base == "terrain") {
			raster = terrainStamen;
		} else if (base == "roads") {
			raster = bingRoads;
		} else if (base == "osm") {
			raster = osmLight;
		}
	}

	// var loading = 0;
	// var requestedTiles = {};
	// var canvas;
	// var onTilesLoaded = null;

	// var tileLoadStart = function(ev) {
		// ++loading;
		// /*
			// if (requestedTiles[ev.tile.l])
				// console.warn("double request", ev.tile.l)
			// requestedTiles[ev.tile.l]=1;  
			// console.info("requesting tile", ev.tile.l)
		// */
	// };

	// var tileLoadEnd = function(ev) {
		// --loading;
		// /*
		// if (!requestedTiles[ev.tile.l])
			// console.warn("missing tile", ev.tile.l)
		// delete requestedTiles[ev.tile.l];  
		// */
		// if (loading < 0)
		// if (loading === 0 && onTilesLoaded){
			// onTilesLoaded();  
			// onTilesLoaded = null;
		// }
	// }

	// var tileLoadError = function(ev) {
		// tileLoadEnd(ev);
	// }
	// try{
	// var source = raster.getSource();
	// source.on('tileloadstart', tileLoadStart);
	// source.on('tileloadend', tileLoadEnd);
	// source.on('tileloaderror', tileLoadError);
	// }catch(e){}
	var exportButton = document.getElementById('export-pdf');

	exportButton.addEventListener('click', function() {
		exportButton.disabled = true;
		document.body.style.cursor = 'progress';

		var format = document.getElementById('format').value;
		var resolution = document.getElementById('resolution').value;
		var dim = dims[format];
		var width = Math.round(dim[0] * resolution / 25.4);
		var height = Math.round(dim[1] * resolution / 25.4);
		var size = /** @type {ol.Size} */ (map.getSize());
		var extent = map.getView().calculateExtent(size);

		var exportPdf = function(){
			// console.debug("exporting pdf", loading);
			var data = canvas.toDataURL('image/png');
			var pdf = new jsPDF('landscape', undefined, format);
			pdf.addImage(data, 'JPEG', 0, 0, dim[0], dim[1]);
			pdf.save('Ari-Map.pdf');
			loading = 0;
			map.setSize(size);
			map.getView().fit(extent, size);
			map.renderSync();
			exportButton.disabled = false;
			document.body.style.cursor = 'auto';
		};
	  
		map.setSize([width, height]);
		map.getView().fit(extent, /** @type {ol.Size} */ (map.getSize()));
		map.renderSync();
		window.setTimeout(function() { 
			if (loading === 0) {	
				exportPdf();    
			} else {
				onTilesLoaded = exportPdf;
			}
		}, 100);
	}, false);
	
	// window.setTimeout(function() {
		// try{loadDroughtShp();}catch(e){}
	// }, 500);
	
	// window.setTimeout(function() {
		// try{loadDroughtOutlookShp();}catch(e){}
	// }, 5000);
}

function loadDroughtOutlookShp(){
	$.ajax({
		type: "GET",
		url: "latestDO.php",
		cache: false,
		success: function(data)
		{
			loadshp({
				url: "Drought/Outlook/sdo_polygons_" + data + ".zip",
				EPSG: 4326,
				encoding: 'big5'	
			}, function(data) {
				sourceDroughtOutlook.addFeatures(parserDroughtOutlook.readFeatures(data));
			});
			drought.setSource(sourceDroughtOutlook);
		}
	});
}

function filterDroughtOutlook(nom, math) {
	filteredDroughtOutlook.clear();
    sourceDroughtOutlook.getFeatures().forEach(function(feature){
		if (feature.get('FID_persis') == 1) {
			if($('#FID_persis').is(":checked"))
				filteredDroughtOutlook.addFeature(feature);
		}
		if (feature.get('FID_improv') == 1) {
			if($('#FID_improv').is(":checked"))
				filteredDroughtOutlook.addFeature(feature);
		}
		if (feature.get('FID_Remove') == 1) {
			if($('#FID_Remove').is(":checked"))
				filteredDroughtOutlook.addFeature(feature);
		}
		if (feature.get('FID_dev') == 1) {
			if($('#FID_dev').is(":checked"))
				filteredDroughtOutlook.addFeature(feature);
		}
    });
	drought.setSource(filteredDroughtOutlook);
}

function loadDroughtShp(req){
	$.ajax({
		type: "GET",
		url: "latestDM.php",
		cache: false,
		success: function(data)
		{
			loadshp({
				url: "Drought/Monitor/USDM_" + data + "_M.zip",
				EPSG: 4326,
				encoding: 'big5'	
			}, function(data) {
				sourceDrought.addFeatures(parserDrought.readFeatures(data));
			});
			droughtmonitor.setSource(sourceDrought);
		}
	});
}

function filterDrought (nom, math) {
	filteredDrought.clear();
    sourceDrought.getFeatures().forEach(function(feature){
		if (feature.get('DM') == 0) {
			if($('#0').is(":checked"))
				filteredDrought.addFeature(feature);
		}
		else if (feature.get('DM') == 1) {
			if($('#1').is(":checked"))
				filteredDrought.addFeature(feature);
		}
		else if (feature.get('DM') == 2) {
			if($('#2').is(":checked"))
				filteredDrought.addFeature(feature);
		}
		else if (feature.get('DM') == 3) {
			if($('#3').is(":checked"))
				filteredDrought.addFeature(feature);
		}
		else if (feature.get('DM') == 4) {
			if($('#4').is(":checked"))
				filteredDrought.addFeature(feature);
		}
    });
	droughtmonitor.setSource(filteredDrought);
}

function displayFeatureInfo(pixel) {
	info.style.left = pixel[0] + 'px';
	info.style.top = (pixel[1] - 50) + 'px';
	var feature = map.forEachFeatureAtPixel(pixel, function(feature, layer) {
		return feature;
	});
	if (feature) {
		var text = feature.get('name');
		info.style.display = 'none';
		info.innerHTML = text;
		info.style.display = 'block';
		target.style.cursor = "pointer";
	} else {
		info.style.display = 'none';
		target.style.cursor = "";
	}
}
	
function loadProject(){
	$.ajax({
		type: "GET",
		url: "getProjectDetails.php",
		data: 'id=' + $("#projects").val(),
		cache: false,
		success: function(data)
		{
			window.location.href = "main.php";
		}
	});	
}

function apply() {
    var string = '';
    var arrayLength = filters.getValue().length;
    for (var i = 0; i < arrayLength; i++) {
        string += filters.getValue()[i].toLowerCase() + "='Y' AND ";
    }
    if (string == "") {
        string = null;

    } else {
        string = string.substring(0, string.length - 4);
    }
    farmer.getSource().updateParams({
        'LAYERS': 'Farmer:farmers',
        'cql_filter': string
    });
    farmer.setVisible(true);
    $('#primaryData').selectpicker('val', 'farmers');
}

function zoomToFeature(lat, log, zoom, flag) {
    removePopup();
    map.getView().animate({
        center: ol.proj.transform([log, lat], 'EPSG:4326', 'EPSG:3857'),
        zoom: zoom,
        duration: 1000
    });
}

function markerFunction() {
    return [
        new ol.style.Style({
            image: new ol.style.Icon({
                anchor: [0.5, 46],
                anchorXUnits: 'fraction',
                anchorYUnits: 'pixels',
                src: 'images/icon.png'
            })
        })
    ];
}

function drawCircleInMeter(map, featureGeom, rad, id, source, serial) {
    var view = map.getView();
    var projection = view.getProjection();
    var resolutionAtEquator = view.getResolution();
    var pointResolution = ol.proj.getPointResolution(projection, resolutionAtEquator, featureGeom);
    var resolutionFactor = resolutionAtEquator / pointResolution;
    var radius = (rad / ol.proj.METERS_PER_UNIT.m) * resolutionFactor;

    var circle = new ol.geom.Circle(featureGeom, rad * 1.35);
    var circleFeature = new ol.Feature(circle);
	circleFeature.set('serial',serial);
	circleFeature.set('radius',id);

    var style;
	var p = pat;
	
    if (id == 3) {
        fetchExtent = ol.extent.applyTransform(circleFeature.getGeometry().getExtent(), ol.proj.getTransform("EPSG:3857", "EPSG:4326"));
        wmsFetchExtent = circleFeature.getGeometry().getExtent();
        updateLayers(fetchExtent);

        maskFeature = new ol.Feature(new ol.geom.Polygon.fromCircle(circleFeature.getGeometry()));
        maskFilter = new ol.filter.Mask({
            feature: maskFeature,
            inner: false,
            fill: new ol.style.Fill({
                color: [0, 0, 0, 0.4]
            })
        });
    }
    circleFeature.setStyle(style);
    source.addFeature(circleFeature);
}

function caliCropsFunction(status) {
    if (status == "dull") {
        if ($('#activateSwipe').is(":checked")) {
            $('#activateSwipe').trigger('click');
        }
		swipe = new ol.control.Swipe();
        map.addControl(swipe);
        
		$('#ownData').selectpicker('val', 'cropsCalifornia');
        map.getView().animate({
			center: [-13359052.47, 4485711.06],
			zoom: 6,
            duration: 2500
		});
        wmsCaliOS.setVisible(true);
        wmsCaliZE.setVisible(true);

        swipe.addLayer(wmsCaliOS);
        swipe.addLayer(wmsCaliZE, true);

        $("#labelOrientation").css("display", "block");
        $("#orientation").css("display", "block");
    } else if (status == "active") {
			try{
				map.removeControl(swipe);
            $('#ownData').selectpicker('val', 'layer');

            wmsCaliOS.setVisible(false);
            wmsCaliZE.setVisible(false);

            map.getView().animate({
                center: ol.proj.fromLonLat([-89.3985, 39.7901]),
                zoom: 4,
                duration: 2500
            });
			}catch(e){}
        $("#labelOrientation").css("display", "none");
        $("#orientation").css("display", "none");
    }
}

function addSwipe(status) {
    if (status == "dull") {
        if ($('#activateSwipeCrops').is(":checked")) {
            $('#activateSwipeCrops').trigger('click');
        }

        swipe = new ol.control.Swipe();
        map.addControl(swipe);

        switch ($("#selBaseMap").val()) {
            case 'aerial':
                swipe.addLayer(bingAerial);
                break;
            case 'terrain':
                swipe.addLayer(terrainStamen);
                break;
            default:
                break;
        }
        bingRoads.setVisible(true);
        swipe.addLayer(bingRoads, true);
        swipeAlter = false;

        $("#labelOrientation").css("display", "block");
        $("#orientation").css("display", "block");

    } else if (status == "active") {
        $('.selectpicker').selectpicker('val', 'layer');

        bingRoads.setVisible(false);
        map.removeControl(swipe);

        $("#labelOrientation").css("display", "none");
        $("#orientation").css("display", "none");
    }

}

function showOpts(value) {
    try {
        $("#popup-closer").click();
    } catch (ex) {}
    if (value == "dull") {
        $("#divType").show();
    } else if (value == "active") {
        $("#divType").hide();
        mappingSource.clear();
        map.removeInteraction(draw);
    }
}

function drawIsoChrone(value) {
    if (value == "dull") {
        addInteraction('Point');
    } else if (value == "active") {
        try {
            map.removeInteraction(draw);
        } catch (ex) {}
        try {
            isoChroneSource.clear();
        } catch (ex) {}
        $("#isoTrans").hide();
        try {
            isoChroneLayer.setVisible(false);
        } catch (ex) {}
        $("#isochroneLegend").remove();
    }
}

function showSiteArea(value) {
    clearOutAll();

    if (value == "dull") {
        addInteraction('Polygon');
    } else if (value == "active") {
        siteClick = false;
    }
}

function drawAOI(value) {
    turnLayersAndLegendOff();
    try {
        $("#divMask").hide();
        maskFilter.set('active', false);
    } catch (ex) {}

    if (value == "active") {
        siteClick = false;
        mappingSource.clear();
        return;
    }

    if ($("#drawType").val() == "None") {
        map.removeInteraction(draw);
        mappingSource.clear();
        toastr.info("Please select the shape to draw");
        return;
    }

    try {
        mappingSource.clear();
    } catch (ex) {}
    addInteraction($("#drawType").val());
}

function turnMultipleIso(value) {
    if (value == "dull") {
        addInteraction('Point');
    } else if (value == "active") {
        try {
            map.removeInteraction(draw);
        } catch (ex) {}
    }
}

function addInteraction(value) {
    var newValue = value;
    if (value !== 'None') {
        var geometryFunction;
        if (value === 'Polygon' || value === "Point") {
            draw = new ol.interaction.Draw({
                source: mappingSource,
                type: value
            });
        } else {
            if (value === 'Box') {
                newValue = 'Circle';
                geometryFunction = ol.interaction.Draw.createBox();
            }
            draw = new ol.interaction.Draw({
                source: mappingSource,
                type: /** @type {ol.geom.GeometryType} */ (newValue),
                geometryFunction: geometryFunction
            });
        }

        draw.on('drawstart',
            function(evt) {
                whileDraw = true;
                selectedRadiusLoct = null;
            });

        draw.on('drawend',
            function(evt) {
                whileDraw = false;
                map.removeInteraction(draw);
                if ($("#selSelectionOptions").val() == "cas") {
                    if (!cas) {
                        fetchExtent = ol.extent.applyTransform(evt.feature.getGeometry().getExtent(), ol.proj.getTransform("EPSG:3857", "EPSG:4326"));
                        wmsFetchExtent = evt.feature.getGeometry().getExtent();
                        updateLayers(fetchExtent);

                        if (value == "Circle") {
                            maskFeature = new ol.Feature(new ol.geom.Polygon.fromCircle(evt.feature.getGeometry()));
                        }
                        if (value == "Polygon") {
                            maskFeature = evt.feature;
                        }
                        if (value == "Box") {
                            maskFeature = new ol.Feature(new ol.geom.Polygon.fromExtent(evt.feature.getGeometry().getExtent()));
                        }
                        maskFilter = new ol.filter.Mask({
                            feature: maskFeature,
                            inner: false,
                            fill: new ol.style.Fill({
                                color: [0, 0, 0, 0.4]
                            })
                        });
                        map.addFilter(maskFilter);
                        $("#divMask").show();

                        reportDialog = $("#modal").dialog({
                            autoOpen: false,
                            height: 500,
                            width: 450,
                            modal: true,
                            buttons: {
                                "Cancel": function() {
                                    reportDialog.dialog("close");
                                },
                                "Submit": clipLayers,
                            },
                            close: function() {}
                        });
                        reportDialog.dialog("open");

                        mappingSource.once('change', function(e) {
                            cas = true;
                            map.getView().fit(mappingSource.getExtent(), map.getSize());
                        });
                        return;
                    }
                }

                if ($("#selSelectionOptions").val() == "radius") {
                    selectedRadiusLoct = evt.feature.getGeometry().getCoordinates();
                    dialogTwo = $("#radiusModal").dialog({
                        autoOpen: false,
                        height: 300,
                        width: 300,
                        modal: true,
                        buttons: {
                            "Cancel": function() {
                                dialogTwo.dialog("close");
                                clearRadius();
                                $('#selSelectionOptions').selectpicker('val', 'none');
                            },
                            "Submit": showReportModal,
                        },
                        close: function() {}
                    });
                    dialogTwo.dialog("open");
                    return;
                }

                if ($("#selSelectionOptions").val() == "timedist") {
                    selectedRadiusLoct = ol.proj.transform(evt.feature.getGeometry().getCoordinates(), 'EPSG:3857', 'EPSG:4326');
                    dialogTwo = $("#isochroneModal").dialog({
                        autoOpen: false,
                        height: 300,
                        width: 330,
                        modal: true,
                        buttons: {
                            "Cancel": function() {
                                dialogTwo.dialog("close");
                                mappingSource.clear();
                                $('#selSelectionOptions').selectpicker('val', 'none');
                            },
                            "Submit": getIso,
                        },
                        close: function() {}
                    });
					if ($('#isochrone').is(":checked"))
						$('#isochrone').click();
                    dialogTwo.dialog("open");
                    return;
                }

                if ($('#isochrone').is(":checked")) {
                    isoDrawnCoord = ol.proj.transform(evt.feature.getGeometry().getCoordinates(), 'EPSG:3857', 'EPSG:4326');

                    if (siteClick) {
                        maskFilter = new ol.filter.Mask({
                            feature: evt.feature,
                            inner: false,
                            fill: new ol.style.Fill({
                                color: [0, 0, 0, 0.4]
                            })
                        });
                        map.addFilter(maskFilter);
                        return;
                    }

                    isoDialog = $("#isoModal").dialog({
                        closeOnEscape: false,
                        autoOpen: false,
                        height: 415,
                        width: 350,
                        modal: true,
                        buttons: {
                            "Cancel": function() {
                                if ($('#isochrone').is(":checked")) {
                                    $('#isochrone').trigger('click');
                                }
                                isoDialog.dialog("close");
                                mappingSource.clear();
                                if ($('#cbMultiIso').is(":checked")) {
                                    addInteraction('Point');
                                }
                            },
                            "Submit": drawIso
                        },
                        close: function() {}
                    });
                    isoDialog.dialog("open");
                    return;
                }

                if ($('#cbVoronoi').is(":checked") || $('#cbDCVoronoi').is(":checked") || $('#cbRefVoronoi').is(":checked") || $('#cbFoodAwayVoronoi').is(":checked") || $('#cbFoodHomeVoronoi').is(":checked") || $('#cbFoodSuperMarketVoronoi').is(":checked") || $('#cbFoodVoronoi').is(":checked") || $('#cbBeveragesVoronoi').is(":checked") || $('#cbPrimaryVoronoi').is(":checked") || $('#cbEnergyVoronoi').is(":checked") || $('#cbOwnVoronoi').is(":checked") || $('#cbTptVoronoi').is(":checked") || $('#cbSchoolsVoronoi').is(":checked") || $('#cbBanksVoronoi').is(":checked") || $('#cbHealthFacilitiesVoronoi').is(":checked") || $('#cbFinVoronoi').is(":checked")) {
					state=null;
					extentVoronoi = evt.feature.getGeometry().getExtent();
					var options = {
						bbox: extentVoronoi
					};
					var turfFeatures = [];
					var features = getFeaturesInSelection(evt.feature.getGeometry().getExtent());
					for (j = 0; j < features.length; j++){
						for (i = 0; i < features[j].length; i++){
							turfFeatures.push(turf.point(features[j][i].getGeometry().getCoordinates(),features[j][i].S));
						}
						voronoiPointsSource.addFeatures(features[j]);
					}

					var fc = turf.featureCollection(turfFeatures);
					var voronoi = turf.voronoi(fc, options);
						
					voronoiPolygonsSource = new ol.source.Vector({
						features: (new ol.format.GeoJSON()).readFeatures(voronoi)
					});
					selectedExtentForVoronoi = extentVoronoi;
                    countiesExtent = extentVoronoi;
					
					mappingSource.once('change', function(e) {
						map.getView().fit(extentVoronoi);
					});

					showRespectiveOpts(false);
				}
                mappingSource.once('change', function(e) {
                    map.getView().fit(mappingSource.getExtent(), map.getSize());
                });
                if (value == "Circle") {
                    maskFeature = new ol.Feature(new ol.geom.Polygon.fromCircle(evt.feature.getGeometry()));
                }
                if (value == "Polygon") {
                    siteClick = true;
                    
					maskFeature = evt.feature;					
                    fetchExtent = ol.extent.applyTransform(evt.feature.getGeometry().getExtent(), ol.proj.getTransform("EPSG:3857", "EPSG:4326"));
                    wmsFetchExtent = evt.feature.getGeometry().getExtent();
                    updateLayers(fetchExtent);
                }
                if (value == "Box") {
                    maskFeature = new ol.Feature(new ol.geom.Polygon.fromExtent(evt.feature.getGeometry().getExtent()));
                }

                maskFilter = new ol.filter.Mask({
                    feature: maskFeature,
                    inner: false,
                    fill: new ol.style.Fill({
                        color: [0, 0, 0, 0]
                    })
                });
                map.addFilter(maskFilter);
                $("#divMask").show();
            }, this);
        map.addInteraction(draw);
        mappingLayer.setVisible(true);
    }
}

function addPrimaryData() {
    $('#storesLegend').remove();
    $('#brownLegend').remove();
    $('#logosLegend').remove();
	$("#enterprisebuildingsLegend").remove();
	$("#networkbuildingsLegend").remove();
    $('#dicksLegend').remove();
    $('#keefLegend').remove();
    $('#parkwayLegend').remove();
    $('#tartanLegend').remove();
    $('#uhaulLegend').remove();
    $('#fortuneLegend').remove();
    $('#fairgroundsLegend').remove();
    $('#graingerLegend').remove();
    $('#shoppingLegend').remove();
    // $('#toysrusLegend').remove();
    // $('#closingsLegend').remove();

    $("#closingsDataDiv").hide();
    $("#gymboreeBrandsDiv").hide();
    $("#gymboreeBrandsTypeDiv").hide();
    $("#optDataFiberBuildings").hide();
    try {
        $("#popup-closer").click();
    } catch (ex) {}

    // closings.setVisible(false);
    // toysrus.setVisible(false);
    logo.setVisible(false);
    enterprisebuildings.setVisible(false);
    networkbuildings.setVisible(false);
    dicks.setVisible(false);
    keef.setVisible(false);
    parkway.setVisible(false);
    tartan.setVisible(false);
    uhaul.setVisible(false);
    fortune.setVisible(false);
    fairgrounds.setVisible(false);
    grainger.setVisible(false);
    shoppingcenter.setVisible(false);
    brownfields.setVisible(false);
    stores.setVisible(false);

	// closings.set('displayInLayerSwitcher', false);
    // toysrus.set('displayInLayerSwitcher', false);
    logo.set('displayInLayerSwitcher', false);
    dicks.set('displayInLayerSwitcher', false);
    enterprisebuildings.set('displayInLayerSwitcher', false);
    networkbuildings.set('displayInLayerSwitcher', false);
    keef.set('displayInLayerSwitcher', false);
    parkway.set('displayInLayerSwitcher', false);
    tartan.set('displayInLayerSwitcher', false);
    uhaul.set('displayInLayerSwitcher', false);
    fortune.set('displayInLayerSwitcher', false);
    fairgrounds.set('displayInLayerSwitcher', false);
    grainger.set('displayInLayerSwitcher', false);
    shoppingcenter.set('displayInLayerSwitcher', false);
    brownfields.set('displayInLayerSwitcher', false);
	stores.set('displayInLayerSwitcher', false);
	
    $("#logosPrimary").hide();
    $("#radiusPrimary").hide();
    $("#divVorPrimary").hide();

    if ($('#switchRadiusPrimary').prop('checked'))
        changePrimaryRadius('active');
	if ($('#cbPrimaryVoronoi').is(":checked")) 
		toggleClusterVor('WFS','Primary'); 

    var len = 0;
    try {
        len = $("#primaryData").val().length;
    } catch (ex) {}
    if (len > 0) {
		if ($('#chkLogo').is(":checked") || $('#chkIcon').is(":checked")) {
			$("#logosPrimary").show();
			$("#radiusPrimary").show();
		}
		if ($('#chkVoronoi').is(":checked")) {
			$("#divVorPrimary").show();
		}
        for (i = 0; i < len; i++) {
			if($("#primaryData").val().indexOf("datafiberbuildings") !== -1)
			{
				$("#optDataFiberBuildings").show();
				// $("#gymboreeBrandsDiv").show();
				// $("#gymboreeBrandsTypeDiv").show();
			}
			if($("#primaryData").val().indexOf("closings") !== -1){
				$("#closingsDataDiv").show();
			}
            switch ($("#primaryData").val()[i]) {
                case 'brownfields':
                    if ($('#switchRadiusPrimary').prop('checked'))
                        radiusBrownFieldsLayer.setVisible(true);
					
					brownfields.setVisible(true);
                    addLegendContent('<div id="brownLegend"><table><tr><td><a id="brownImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="brown" onchange="handleLegend($(this));" checked/></td><td><img height="35px" width="40px" src="images/Icons/brownfields.png" /></td><td>Brownfields</td></tr></table></div>', true, "legendData");
					brownfields.set('displayInLayerSwitcher', true);
                    break;

                case 'logos':
					logo.setVisible(true);
                    addLegendContent('<div id="logosLegend"><table><tr><td><a id="logosImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="logos" onchange="handleLegend($(this));" checked/></td><td><img height="45px" width="45px" src="images/Icons/logosIL/marker.png" /></td><td>Stores Logos</td></tr></table></div>', true, "legendData");
					logo.set('displayInLayerSwitcher', true);
                    break;

                case 'datafiberbuildings':
					filterDataFiberBuildings();
					
                    break;

                case 'dicks':
                    if ($('#switchRadiusPrimary').prop('checked'))
                        radiusDicksLayer.setVisible(true);
					dicks.setVisible(true);
                    addLegendContent('<div id="dicksLegend"><table><tr><td><a id="dicksImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="dicks" onchange="handleLegend($(this));" checked/></td><td><img height="35px" width="80px" src="images/Icons/retail/dicks.png" /></td><td>Dicks Sporting Goods</td></tr></table></div>', true, "legendData");
					dicks.set('displayInLayerSwitcher', true);
                    break;

                case 'keef':
                    if ($('#switchRadiusPrimary').prop('checked'))
                        radiusKeefLayer.setVisible(true);
					keef.setVisible(true);
                    addLegendContent('<div id="keefLegend"><table><tr><td><a id="keefImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="keef" onchange="handleLegend($(this));" checked/></td><td><img height="45px" width="45px" src="images/Icons/keef.png" /></td><td>Keef Brands</td></tr></table></div>', true, "legendData");
					keef.set('displayInLayerSwitcher', true);
                    break;

                case 'grainger':
                    if ($('#switchRadiusPrimary').prop('checked'))
                        radiusGraingerLayer.setVisible(true);
					grainger.setVisible(true);
					addLegendContent('<div id="graingerLegend"><table><tr><td><a id="graingerImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="grainger" onchange="handleLegend($(this));" checked/></td><td><img height="30px" width="110px" src="images/Icons/grainger.png" /></td><td>Grainger</td></tr></table></div>', true, "legendData");
					grainger.set('displayInLayerSwitcher', true);
                    break;

                case 'parkway':
                    if ($('#switchRadiusPrimary').prop('checked'))
                        radiusParkwayLayer.setVisible(true);
					parkway.setVisible(true);
                    addLegendContent('<div id="parkwayLegend"><table><tr><td><a id="parkwayImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="parkway" onchange="handleLegend($(this));" checked/></td><td><img height="45px" width="45px" src="images/Icons/Banks/parkway.png" /></td><td>Parkway Banks</td></tr></table></div>', true, "legendData");
					parkway.set('displayInLayerSwitcher', true);
                    break;

                case 'tartan':
                    if ($('#switchRadiusPrimary').prop('checked'))
                        radiusTartanLayer.setVisible(true);
					tartan.setVisible(true);
                    addLegendContent('<div id="tartanLegend"><table><tr><td><a id="tartanImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="tartan" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/tartanlogo.png" /></td><td>Tartan Current Listings</td></tr></table></div>', true, "legendData");
					tartan.set('displayInLayerSwitcher', true);
                    break;

                case 'uhaul':
                    if ($('#switchRadiusPrimary').prop('checked'))
                        radiusUhaulLayer.setVisible(true);
					uhaul.setVisible(true);
                    addLegendContent('<div id="uhaulLegend"><table><tr><td><a id="uhaulImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="uhaul" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="75px" src="images/Icons/uhaul.png" /></td><td>Uhaul</td></tr></table></div>', true, "legendData");
					uhaul.set('displayInLayerSwitcher', true);
                    break;

                case 'fortune':
                    if ($('#switchRadiusPrimary').prop('checked'))
                        radiusFortuneLayer.setVisible(true);
					fortune.setVisible(true);
                    addLegendContent('<div id="fortuneLegend"><table><tr><td><a id="fortuneImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="fortune" onchange="handleLegend($(this));" checked/></td><td><img height="40px" width="35px" src="images/Icons/fortune.png" /></td><td>Fortune</td></tr></table></div>', true, "legendData");
					fortune.set('displayInLayerSwitcher', true);
                    break;

                case 'fairgrounds':
                    if ($('#switchRadiusPrimary').prop('checked'))
                        radiusFairgroundLayer.setVisible(true);
					fairgrounds.setVisible(true);
                    addLegendContent('<div id="fairgroundsLegend"><table><tr><td><a id="fairgroundsImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="fairgrounds" onchange="handleLegend($(this));" checked/></td><td><img height="40px" width="35px" src="images/Icons/fairgrounds.png" /></td><td>Fairgrounds</td></tr></table></div>', true, "legendData");
					fairgrounds.set('displayInLayerSwitcher', true);
                    break;

                case 'shopping':
                    if ($('#switchRadiusPrimary').prop('checked'))
                        radiusShoppingLayer.setVisible(true); 
					shoppingcenter.setVisible(true);
                    addLegendContent('<div id="shoppingLegend"><table><tr><td><a id="shoppingImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="shopping" onchange="handleLegend($(this));" checked/></td><td><img height="30px" width="30px" src="images/Icons/retail/shoppingcenter.png" /></td><td>Shopping Centers</td></tr></table></div>', true, "legendData");
					shoppingcenter.set('displayInLayerSwitcher', true);
                    break;

                case 'stores':
                    if ($('#switchRadiusFoodHome').prop('checked'))
                        radiusStoresLayer.setVisible(true);
					stores.setVisible(true);
                    addLegendContent('<div id="storesLegend"><table><tr><td><a id="storesImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="stores" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/store.png" /></td><td>Grocery Stores</td></tr></table></div>', true, "legendData");
					stores.set('displayInLayerSwitcher', true);
                    break;

                case 'closings':
                    break;

                default:
                    break;
            }
        }
    } else {
        if ($('#switchRadiusPrimary').prop('checked'))
            $("#switchRadiusPrimary").click();
    }
}

function addOL() {
    $('#poultryfacilitiesLegend').remove();
    $('#pacaLegend').remove();
    $('#ranchesLegend').remove();
    $('#foodplantsLegend').remove();
    $('#hydroponicsLegend').remove();
    $('#ngpoperatorsLegend').remove();

    try {
        $("#popup-closer").click();
    } catch (ex) {}
	
    paca.setVisible(false);
    poultryfacilities.setVisible(false);
    foodplants.setVisible(false);
    hydroponics.setVisible(false);
    ngpoperators.setVisible(false);
    ranchesandfarms.setVisible(false);
	
    paca.set('displayInLayerSwitcher', false);
    poultryfacilities.set('displayInLayerSwitcher', false);
    foodplants.set('displayInLayerSwitcher', false);	
    hydroponics.set('displayInLayerSwitcher', false);	
    ngpoperators.set('displayInLayerSwitcher', false);	
    ranchesandfarms.set('displayInLayerSwitcher', false);
	
    radiusFoodplantsLayer.setVisible(false);
    radiusHydroponicsLayer.setVisible(false);
	
    $("#logosOL").hide();
    $("#radiusOL").hide();

    if ($('#switchRadiusOL').prop('checked'))
        changeOLRadius('active');

    var len = 0;
    try {
        len = $("#olSelect").val().length;
    } catch (ex) {}
    if (len > 0) {
		if ($('#chkLogo').is(":checked") || $('#chkIcon').is(":checked")) {
			$("#logosOL").show();
			$("#radiusOL").show();
		}
        for (i = 0; i < len; i++) {
            switch ($("#olSelect").val()[i]) {                
                case 'poultryfacilities':
                    if ($('#switchRadiusPrimary').prop('checked'))
                        radiusPoultryLayer.setVisible(true);
					poultryfacilities.setVisible(true);
                    addLegendContent('<div id="poultryfacilitiesLegend"><table><tr><td><a id="poultryfacilitiesImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="poultryfacilities" onchange="handleLegend($(this));" checked/></td><td><img height="40px" width="35px" src="images/Icons/poultry.png" /></td><td>Poultry Facilities</td></tr></table></div>', true, "legendData");
					poultryfacilities.set('displayInLayerSwitcher', true);
                    break;

                case 'paca':
                    if ($('#switchRadiusPrimary').prop('checked'))
                        radiusPACALayer.setVisible(true);
					paca.setVisible(true);
                    addLegendContent('<div id="pacaLegend"><table><tr><td><a id="pacaImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="paca" onchange="handleLegend($(this));" checked/></td><td><img height="40px" width="35px" src="images/Icons/paca.png" /></td><td>PACA Operators</td></tr></table></div>', true, "legendData");
					paca.set('displayInLayerSwitcher', true);
                    break;

                case 'foodplants':
                    if ($('#switchRadiusFood').prop('checked'))
                        radiusFoodplantsLayer.setVisible(true);  
					foodplants.setVisible(true);
                    addLegendContent('<div id="foodplantsLegend"><table><tr><td><a id="foodplantsImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="foodplants" onchange="handleLegend($(this));" checked/></td><td><img height="40px" width="45px" src="images/Icons/retail/tyson.png" /></td><td>Food Plants & Offices</td></tr></table></div>', true, "legendData");
					foodplants.set('displayInLayerSwitcher', true);
                    break;

                case 'hydroponics':
                    if ($('#switchRadiusFood').prop('checked'))
                        radiusHydroponicsLayer.setVisible(true);  
					hydroponics.setVisible(true);
                    addLegendContent('<div id="hydroponicsLegend"><table><tr><td><a id="hydroponicsImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="hydroponics" onchange="handleLegend($(this));" checked/></td><td colspan="2">Hydroponics</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/pin-red.png" /></td><td>Branch</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/pin-blue.png" /></td><td>Headquarter</td></tr></table></div>', true, "legendData");
					hydroponics.set('displayInLayerSwitcher', true);
                    break;

                case 'ngpoperators':
					ngpoperators.setVisible(true);
                    addLegendContent('<div id="ngpoperatorsLegend"><table><tr><td><a id="ngpoperatorsImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="ngpoperators" onchange="handleLegend($(this));" checked/></td><td><img height="30px" width="40px" src="images/Icons/ngpoperators.png" /></td><td>NGP Operators</td></tr></table></div>', true, "legendData");
					ngpoperators.set('displayInLayerSwitcher', true);
                    break;

                case 'ranchesandfarms':
					ranchesandfarms.setVisible(true);
                    addLegendContent('<div id="ranchesLegend"><table><tr><td><a id="ranchesImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="ranches" onchange="handleLegend($(this));" checked/></td><td><img height="30px" width="40px" src="images/Icons/ranches.png" /></td><td>Ranches & Farms</td></tr></table></div>', true, "legendData");
					ranchesandfarms.set('displayInLayerSwitcher', true);
                    break;
            }
        }
    } else {
        if ($('#switchRadiusPrimary').prop('checked'))
            $("#switchRadiusPrimary").click();
    }
}

function addEnergyData() {
    $('#biodieselplantsLegend').remove();
    $('#oilrefineriesLegend').remove();
    $('#tapetroLegend').remove();
    $('#ethanolPlantsLegend').remove();
    $('#naturalgasLegend').remove();
    try {
        $("#popup-closer").click();
    } catch (ex) {}

    tapetro.setVisible(false);
    ethanol.setVisible(false);
    biodieselplants.setVisible(false);
    oilrefineries.setVisible(false);
    naturalgasWMS.setVisible(false);
	
    tapetro.set('displayInLayerSwitcher', false);
    ethanol.set('displayInLayerSwitcher', false);
    biodieselplants.set('displayInLayerSwitcher', false);
    oilrefineries.set('displayInLayerSwitcher', false);
    naturalgasWMS.set('displayInLayerSwitcher', false);
	
    $("#logosEnergy").hide();
    $("#radiusEnergy").hide();
	$("#divVorEnergy").hide();

    if ($('#switchRadiusEnergy').prop('checked'))
        changeEnergyRadius('active');
	if ($('#cbEnergyVoronoi').is(":checked")) 
		toggleClusterVor('WFS','Energy'); 

    var len = 0;
    try {
        len = $("#energyData").val().length;
    } catch (ex) {}
    if (len > 0) {
		if ($('#chkLogo').is(":checked") || $('#chkIcon').is(":checked")) {
			$("#logosEnergy").show();
			$("#radiusEnergy").show();
		}
		if ($('#chkVoronoi').is(":checked")) {
			$("#divVorEnergy").show();
		}
        for (i = 0; i < len; i++) {
            switch ($("#energyData").val()[i]) {
                case 'ethanol':
                    if ($('#switchRadiusEnergy').prop('checked'))
                        radiusEthanolLayer.setVisible(true);
					ethanol.setVisible(true);
                    addLegendContent('<div id="ethanolPlantsLegend"><table><tr><td><a id="ethanolPlantsImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="ethanolPlants" onchange="handleLegend($(this));" checked/></td><td><img height="45px" width="32px" src="images/Icons/ethanol.png" /></td><td>Ethanol Plants</td></tr></table></div>', true, "legendData");
					ethanol.set('displayInLayerSwitcher', true);
                    break;

                case 'tapetro':
                    if ($('#switchRadiusEnergy').prop('checked'))
                        radiusTAPetroLayer.setVisible(true);
					tapetro.setVisible(true);
                    addLegendContent('<div id="tapetroLegend"><table><tr><td><a id="tapetroImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="tapetro" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="40px" src="images/Icons/tapetro.png" /></td><td>TA Petro</td></tr></table></div>', true, "legendData");
					tapetro.set('displayInLayerSwitcher', true);
                    break;

                case 'biodieselplants':
                    if ($('#switchRadiusEnergy').prop('checked'))
                        radiusBiodieselLayer.setVisible(true);
					biodieselplants.setVisible(true);
                    addLegendContent('<div id="biodieselplantsLegend"><table><tr><td><a id="biodieselplantsImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="biodieselplants" onchange="handleLegend($(this));" checked/></td><td><img height="30px" width="20px" src="images/Icons/biodieselplants.png" /></td><td>Biodiesel Plants</td></tr></table></div>', true, "legendData");
					biodieselplants.set('displayInLayerSwitcher', true);
                    break;

                case 'oilrefineries':
                    if ($('#switchRadiusEnergy').prop('checked'))
                        radiusOilrefineriesLayer.setVisible(true);
					oilrefineries.setVisible(true);
                    addLegendContent('<div id="oilrefineriesLegend"><table><tr><td><a id="oilrefineriesImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="oilrefineries" onchange="handleLegend($(this));" checked/></td><td><img height="30px" width="30px" src="images/Icons/oilrefineries.png" /></td><td>Oil Refineries</td></tr></table></div>', true, "legendData");
					oilrefineries.set('displayInLayerSwitcher', true);
                    break;

                case 'naturalgaspipelines':
					naturalgasWMS.setVisible(true);
                    addLegendContent('<div id="naturalgasLegend"><table><tr><td><a id="naturalgasImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="naturalgas" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="40px" src="images/Legend/ownedlonghaulnetwork.png" /></td><td>Natural Gas Pipelines</td></tr></table></div>', true, "legendData");
					naturalgasWMS.set('displayInLayerSwitcher', true);
                    break;
            }
        }
    } else {
        if ($('#switchRadiusEnergy').prop('checked'))
            $("#switchRadiusEnergy").click();
    }
}

function addClosingsData() {
	// $("#divVorPrimary").hide();
    $('#closingsLegend').remove();
    $('#toysrusLegend').remove();
    $('#gymboreeLegend').remove();
    try {
        $("#popup-closer").click();
    } catch (ex) {}
	
	$("#gymboreeBrandsDiv").hide();
	$("#gymboreeBrandsTypeDiv").hide();

    radiusToysrusLayer.setVisible(false);
    radiusGymboreeLayer.setVisible(false);
    radiusClosingsLayer.setVisible(false);

    closings.setVisible(false);
    toysrus.setVisible(false);
    gymboree.setVisible(false);

    if ($('#switchRadiusPrimary').prop('checked'))
        changePrimaryRadius('active');
	if ($('#cbPrimaryVoronoi').is(":checked")) 
		toggleClusterVor('WFS','Primary');  

    var len = 0;
    try {
        len = $("#closingsData").val().length;
    } catch (ex) {}
    if (len > 0) {
		if ($('#chkLogo').is(":checked") || $('#chkIcon').is(":checked")) {
			$("#logosPrimary").show();
			$("#radiusPrimary").show();
		}
		if ($('#chkVoronoi').is(":checked")) {
			$("#divVorPrimary").show();
		}
        for (i = 0; i < len; i++) {
			if($("#closingsData").val().indexOf("gymboree") !== -1)
			{
				$("#gymboreeBrandsDiv").show();
				$("#gymboreeBrandsTypeDiv").show();
			}
            switch ($("#closingsData").val()[i]) {
                case 'gymboree':
                    if ($('#switchRadiusPrimary').prop('checked'))
                        radiusGymboreeLayer.setVisible(true);
					gymboree.setVisible(true);
                    addLegendContent('<div id="gymboreeLegend"><table><tr><td><a id="gymboreeImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="gymboree" onchange="handleLegend($(this));" checked/></td><td><img height="20px" width="80px" src="images/Icons/retail/gymboree.png" /></td><td>Gymboree</td></tr></table></div>', true, "legendData");
					gymboree.set('displayInLayerSwitcher', true);
                    break;
                case 'toys':
                    if ($('#switchRadiusPrimary').prop('checked'))
                        radiusToysrusLayer.setVisible(true);
					toysrus.setVisible(true);
                    addLegendContent('<div id="toysrusLegend"><table><tr><td><a id="toysrusImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="toysrus" onchange="handleLegend($(this));" checked/></td><td><img height="40px" width="75px" src="images/Icons/retail/toysrus.png" /></td><td>Toys-R-Us</td></tr></table></div>', true, "legendData");
					toysrus.set('displayInLayerSwitcher', true);
                    break;

                case 'sears':
                    if ($('#switchRadiusPrimary').prop('checked'))
                        radiusClosingsLayer.setVisible(true);
					closings.setVisible(true);
                    addLegendContent('<div id="closingsLegend"><table><tr><td><a id="closingsImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="closings" onchange="handleLegend($(this));" checked/></td><td><img height="40px" width="45px" src="images/Icons/retail/searsfull.png" /></td><td>Sears</td></tr></table></div>', true, "legendData");
					closings.set('displayInLayerSwitcher', true);
                    break;

                default:
                    break;
            }
        }
    } else {
        if ($('#switchRadiusPrimary').prop('checked'))
            $("#switchRadiusPrimary").click();
    }
}

function filterDataFiber() {
	$("#datafiberLegend").remove();
	metrobackboneWMS.setVisible(false);
	metrolateralWMS.setVisible(false);
	longhaulnetworkWMS.setVisible(false);
	canadalonghaulnetworkWMS.setVisible(false);
	ownedlonghaulnetworkWMS.setVisible(false);
					
	metrobackboneWMS.set('displayInLayerSwitcher', false);
	metrolateralWMS.set('displayInLayerSwitcher', false);
	longhaulnetworkWMS.set('displayInLayerSwitcher', false);
	canadalonghaulnetworkWMS.set('displayInLayerSwitcher', false);
	ownedlonghaulnetworkWMS.set('displayInLayerSwitcher', false);
	
    var legend = '<div id="datafiberLegend"><table><tr><td><a id="datafiberImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="datafiber" onchange="handleLegend($(this));" checked/></td><td colspan="2">Data Fiber</td></tr>';
	
	var len = 0;
    try {
        len = $("#datafiberFilter").val().length;
    } catch (ex) {}
    if (len > 0) {
        for (i = 0; i < len; i++) {
            switch ($("#datafiberFilter").val()[i]) {

                case 'metrobackbone':
					metrobackboneWMS.set('displayInLayerSwitcher', true);
                    metrobackboneWMS.setVisible(true);
					
					legend += '<tr><td colspan="2"><td><img height="5px" width="19px" src="images/Legend/metrobackbone.png" /></td><td>Metro Backbone</td></tr>';
                    break;

                case 'metrolateral':
					metrolateralWMS.set('displayInLayerSwitcher', true);
                    metrolateralWMS.setVisible(true);
					
					legend += '<tr><td colspan="2"><td><img height="5px" width="19px" src="images/Legend/metrolateral.png" /></td><td>Metro Lateral</td></tr>';
                    break;

                case 'canadalonghaulnetwork':
					canadalonghaulnetworkWMS.set('displayInLayerSwitcher', true);
                    canadalonghaulnetworkWMS.setVisible(true);
					
					legend += '<tr><td colspan="2"><td><img height="5px" width="19px" src="images/Legend/canadalonghaulnetwork.png" /></td><td>Canada Longhaul Network</td></tr>';
                    break;

                case 'longhaulnetwork':
					longhaulnetworkWMS.set('displayInLayerSwitcher', true);
                    longhaulnetworkWMS.setVisible(true);
					
					legend += '<tr><td colspan="2"><td><img height="5px" width="19px" src="images/Legend/longhaulnetwork.png" /></td><td>IRU Longhaul Network</td></tr>';
                    break;

                case 'ownedlonghaulnetwork':
					ownedlonghaulnetworkWMS.set('displayInLayerSwitcher', true);
                    ownedlonghaulnetworkWMS.setVisible(true);
					
					legend += '<tr><td colspan="2"><td><img height="5px" width="19px" src="images/Legend/ownedlonghaulnetwork.png" /></td><td>Owned Longhaul Network</td></tr>';
                    break;

                default:
                    break;
            }
        }
    }
	legend += '</table></div>';
    addLegendContent(legend, true, "legendData");
}

function filterDataFiberBuildings() {
	$("#enterprisebuildingsLegend").remove();
	$("#networkbuildingsLegend").remove();
	enterprisebuildings.setVisible(false);
	networkbuildings.setVisible(false);
					
	enterprisebuildings.set('displayInLayerSwitcher', false);
	networkbuildings.set('displayInLayerSwitcher', false);
	
	var len = 0;
    try {
        len = $("#datafiberBuildingsFilter").val().length;
    } catch (ex) {}
    if (len > 0) {
        for (i = 0; i < len; i++) {
            switch ($("#datafiberBuildingsFilter").val()[i]) {

                case 'enterprisebuildings':
					enterprisebuildings.set('displayInLayerSwitcher', true);
                    enterprisebuildings.setVisible(true);
					
                    addLegendContent('<div id="enterprisebuildingsLegend"><table><tr><td><a id="enterprisebuildingsImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="enterprisebuildings" onchange="handleLegend($(this));" checked/></td><td><img height="40px" width="30px" src="images/Icons/enterprisebuildings.png" /></td><td>Enterprise Buildings</td></tr></table></div>', true, "legendData");
                    break;

                case 'networkbuildings':
					networkbuildings.set('displayInLayerSwitcher', true);
                    networkbuildings.setVisible(true);
					
                    addLegendContent('<div id="networkbuildingsLegend"><table><tr><td><a id="networkbuildingsImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="networkbuildings" onchange="handleLegend($(this));" checked/></td><td><img height="40px" width="30px" src="images/Icons/networkbuildings.png" /></td><td>Network Buildings</td></tr></table></div>', true, "legendData");
					interchange.set('displayInLayerSwitcher', true);
                    break;

                default:
                    break;
            }
        }
    }
}

function addOwnData() {
    $("#gardenLegend").remove();
    $("#shelterLegend").remove();
    $("#unitsaLegend").remove();
    $("#unitsbLegend").remove();
    $("#potbellytwoLegend").remove();
    $("#hotspringsLegend").remove();
    $("#landbanksLegend").remove();
    $("#popup-closer").click();

    $("#naturalDiv").hide();
    $("#manmadeDiv").hide();
    $("#potbellytwoDiv").hide();
    $("#logosOwn").hide();
	$("#divVorOwn").hide();
    $("#radiusOwn").hide();

    garden.setVisible(false);
    shelter.setVisible(false);
    unitsa.setVisible(false);
    unitsb.setVisible(false);
    potbellytwo.setVisible(false);
    hot_springs.setVisible(false);
    landbanks.setVisible(false);
    natural.setVisible(false);
	
    garden.set('displayInLayerSwitcher', false);
    shelter.set('displayInLayerSwitcher', false);
    unitsa.set('displayInLayerSwitcher', false);
    unitsb.set('displayInLayerSwitcher', false);
    potbellytwo.set('displayInLayerSwitcher', false);
    hot_springs.set('displayInLayerSwitcher', false);
    landbanks.set('displayInLayerSwitcher', false);
    natural.set('displayInLayerSwitcher', false);
	
    radiusHotSpringsLayer.setVisible(false);
    radiusLandBanksLayer.setVisible(false);
    radiusShelterLayer.setVisible(false);
    radiusUnitsALayer.setVisible(false);
    radiusUnitsBLayer.setVisible(false);

    $("#destinationsLegend").remove();
    $("#faithLegend").remove();
    $("#govtLegend").remove();
    $("#infrastructureLegend").remove();
    $("#publicLegend").remove();
    $("#retailLegend").remove();
    $("#popup-closer").click();

    manmade_destinations.setVisible(false);
    manmade_faith.setVisible(false);
    manmade_govt_places.setVisible(false);
    manmade_infrastructure.setVisible(false);
    manmade_public_spaces.setVisible(false);
    manmade_retail_prices.setVisible(false);
	
	if ($('#cbOwnVoronoi').is(":checked")) 
		toggleClusterVor('WFS','Own'); 
    var len = 0;
    try {
        len = $("#ownData").val().length;
    } catch (ex) {}
    if (len > 0) {
		if ($('#chkLogo').is(":checked") || $('#chkIcon').is(":checked")) {
			$("#logosOwn").show();
			$("#radiusOwn").show();
		}
		if ($('#chkVoronoi').is(":checked")) {
			$("#divVorOwn").show();
		}
        for (i = 0; i < len; i++) {
			if(len==1 && $("#ownData").val().indexOf("manmade") !== -1){
				$("#manmadeDiv").show();
				$("#divVorOwn").hide();
			}
			if(len==1 && $("#ownData").val().indexOf("potbellytwo") !== -1){
				$("#potbellytwoDiv").show();
			}
            switch ($("#ownData").val()[i]) {
                case 'gardens':
					garden.setVisible(true);
                    addLegendContent('<div id="gardenLegend"><table><tr><td><a id="gardenImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="garden" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/garden.png" /></td><td>Gardens</td></tr></table></div>', true, "legendData");
					garden.set('displayInLayerSwitcher', true);
                    break;
                case 'shelter':
                    if ($('#switchRadiusOwn').prop('checked'))
                        radiusShelterLayer.setVisible(true);
					shelter.setVisible(true);
                    addLegendContent('<div id="shelterLegend"><table><tr><td><a id="shelterImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="shelter" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/shelter.png" /></td><td>Shelter</td></tr></table></div>', true, "legendData");
					shelter.set('displayInLayerSwitcher', true);
                    break;
                case 'unitsa':
                    if ($('#switchRadiusOwn').prop('checked'))
                        radiusUnitsALayer.setVisible(true);
					unitsa.setVisible(true);
                    addLegendContent('<div id="unitsaLegend"><table><tr><td><a id="unitsaImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="unitsa" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/unitsa.png" /></td><td>Units A</td></tr></table></div>', true, "legendData");
					unitsa.set('displayInLayerSwitcher', true);
                    break;
                case 'unitsb':
                    if ($('#switchRadiusOwn').prop('checked'))
                        radiusUnitsBLayer.setVisible(true);
					unitsb.setVisible(true);
                    addLegendContent('<div id="unitsbLegend"><table><tr><td><a id="unitsbImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="unitsb" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/unitsb.png" /></td><td>Units B</td></tr></table></div>', true, "legendData");
					unitsb.set('displayInLayerSwitcher', true);
                    break;
                case 'potbellytwo':
                    // if ($('#switchRadiusOwn').prop('checked'))
                        // radiusShelterLayer.setVisible(true);
					potbellytwo.setVisible(true);
                    addLegendContent('<div id="potbellytwoLegend"><table><tr><td><a id="potbellytwoImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="potbellytwo" onchange="handleLegend($(this));" checked/></td><td>Distance Analysis</td></tr><tr><td><input type="checkbox" id="1" onchange="handlecohort(\'potbellytwo\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#00FF00"></div></td><td>Potbelly locations that are closest to DMA by at least 12 miles</td></tr><tr><td><input type="checkbox" id="2" onchange="handlecohort(\'potbellytwo\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#0000FF;"></div></td><td>Potbelly locations that are less than 12 miles (to DMA) to 40 miles to Sysco</td></tr><tr><td><input type="checkbox" id="3" onchange="handlecohort(\'potbellytwo\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#FFA500;"></div></td><td>Potbelly locations that are at least 40 miles closer to Sysco</td></tr><tr><td><input type="checkbox" id="4" onchange="handlecohort(\'potbellytwo\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#FF0000;"></div></td><td>Potbelly locations that are BOTH at least 100 miles from DMA and at least 50 miles closer to Sysco</td></tr></table></div>', true, "legendData");
					potbellytwo.set('displayInLayerSwitcher', true);
                    break;
                case 'hot_springs':
                    hot_springs.setVisible(true);
                    addLegendContent('<div id="hotspringsLegend"><table><tr><td><a id="hotspringsImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="hotsprings" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/hotsprings.png" /></td><td>Hot Springs</td></tr></table></div>', true, "legendData");
					hot_springs.set('displayInLayerSwitcher', true);
                    break;
                case 'landbanks':
                    landbanks.setVisible(true);
                    addLegendContent('<div id="landbanksLegend"><table><tr><td><a id="landbanksImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="landbanks" onchange="handleLegend($(this));" checked/></td><td><img height="30px" width="40px" src="images/Icons/landbanks.png" /></td><td>Land Banks</td></tr></table></div>', true, "legendData");
					landbanks.set('displayInLayerSwitcher', true);
                    break;

                case 'natural':  
					natural.setVisible(true);
                    addLegendContent('<div id="naturalLegend"><table><tr><td><a id="naturalImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="natural" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/natural.png" /></td><td>Natural</td></tr></table></div>', true, "legendData");
					natural.set('displayInLayerSwitcher', true);
                    break;

                case 'manmade':
                    $("#manmadeDiv").show();
                    break;

                default:
                    break;
            }
        }
    }
}

function addManmadeData() {
	$("#divVorOwn").hide();
    $("#destinationsLegend").remove();
    $("#faithLegend").remove();
    $("#govtLegend").remove();
    $("#infrastructureLegend").remove();
    $("#publicLegend").remove();
    $("#retailLegend").remove();
    $("#popup-closer").click();

    manmade_destinations.setVisible(false);
    manmade_faith.setVisible(false);
    manmade_govt_places.setVisible(false);
    manmade_infrastructure.setVisible(false);
    manmade_public_spaces.setVisible(false);
    manmade_retail_prices.setVisible(false);
    
	manmade_destinations.set('displayInLayerSwitcher', false);
	manmade_faith.set('displayInLayerSwitcher', false);
    manmade_govt_places.set('displayInLayerSwitcher', false);
    manmade_infrastructure.set('displayInLayerSwitcher', false);
    manmade_public_spaces.set('displayInLayerSwitcher', false);
    manmade_retail_prices.set('displayInLayerSwitcher', false);
	
	if ($('#cbOwnVoronoi').is(":checked")) 
		toggleClusterVor('WFS','Own');

    var len = 0;
    try {
        len = $("#manmadeData").val().length;
    } catch (ex) {}
    if (len > 0) {
        for (i = 0; i < len; i++) {
			$("#divVorOwn").show();
            switch ($("#manmadeData").val()[i]) {
                case 'destinations':  
					manmade_destinations.setVisible(true);
                    addLegendContent('<div id="destinationsLegend"><table><tr><td><a id="destinationsImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="destinations" onchange="handleLegend($(this));" checked/></td><td colspan="2">Destinations</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/arena.png" /></td><td>Arena</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/beach.png" /></td><td>Beach</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/camp.png" /></td><td>Camp</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/castle.png" /></td><td>Castle</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/cave.png" /></td><td>Cave</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/club.png" /></td><td>Club</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/complex.png" /></td><td>Complex</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/farm.png" /></td><td>Farm</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/golf course.png" /></td><td>Golf Course</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/landmark.png" /></td><td>Landmark</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/lodge.png" /></td><td>Lodge</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/monument.png" /></td><td>Monument</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/museum.png" /></td><td>Museum</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/observatory.png" /></td><td>Observatory</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/orchard.png" /></td><td>Orchard</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/pool.png" /></td><td>Pool</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/racetrack.png" /></td><td>Racetrack</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/ranch.png" /></td><td>Ranch</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/resort.png" /></td><td>Resort</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/retreat.png" /></td><td>Retreat</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/ruins.png" /></td><td>Ruins</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/site.png" /></td><td>Site</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/speedway.png" /></td><td>Speedway</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/stadium.png" /></td><td>Stadium</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/winery.png" /></td><td>Winery</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/yacht.png" /></td><td>yacht</td></tr></table></div>', true, "legendData");
					manmade_destinations.set('displayInLayerSwitcher', true);
                    break;

                case 'faith':
					manmade_faith.setVisible(true);
                    addLegendContent('<div id="faithLegend"><table><tr><td><a id="faithImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="faith" onchange="handleLegend($(this));" checked/></td><td colspan="2">Faith</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/cemetery.png" /></td><td>Cemetery</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/chapel.png" /></td><td>Chapel</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/church.png" /></td><td>Church</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/monastery.png" /></td><td>Monastery</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/shrine.png" /></td><td>Shrine</td></tr></table></div>', true, "legendData");
					manmade_faith.set('displayInLayerSwitcher', true);
                    break;

                case 'govt':
					manmade_govt_places.setVisible(true);
                    addLegendContent('<div id="govtLegend"><table><tr><td><a id="govtImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="govt" onchange="handleLegend($(this));" checked/></td><td colspan="2">Government Places</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/civil.png" /></td><td>Civil</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/military.png" /></td><td>Military</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/post office.png" /></td><td>Post Office</td></tr></table></div>', true, "legendData");
					manmade_govt_places.set('displayInLayerSwitcher', true);
                    break;

                case 'infrastructure':
					manmade_infrastructure.setVisible(true);
                    addLegendContent('<div id="infrastructureLegend"><table><tr><td><a id="infrastructureImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="infrastructure" onchange="handleLegend($(this));" checked/></td><td colspan="2">Infrastructure</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/crossing.png" /></td><td>Crossing</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/dam.png" /></td><td>Dam</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/facility.png" /></td><td>Facility</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/ferry.png" /></td><td>Ferry</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/furnance.png" /></td><td>Furnance</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/junction.png" /></td><td>Junction</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/laboratory.png" /></td><td>Laborator</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/landfill.png" /></td><td>Landfill</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/plant.png" /></td><td>Plant</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/port.png" /></td><td>Port</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/station.png" /></td><td>Station</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/substation.png" /></td><td>Substation</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/switch.png" /></td><td>Switch</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/terminal.png" /></td><td>Terminal</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/treatment.png" /></td><td>Treatment</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/underpass.png" /></td><td>Underpass</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/well.png" /></td><td>Well</td></tr></table></div>', true, "legendData");
					manmade_infrastructure.set('displayInLayerSwitcher', true);
                    break;

                case 'public':
					manmade_public_spaces.setVisible(true);
                    addLegendContent('<div id="publicLegend"><table><tr><td><a id="publicImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="public" onchange="handleLegend($(this));" checked/></td><td colspan="2">Public Places</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/bay.png" /></td><td>Bay</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/court.png" /></td><td>Court</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/forest.png" /></td><td>Forest</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/harbor.png" /></td><td>Harbor</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/island.png" /></td><td>Island</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/lake.png" /></td><td>Lake</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/landing.png" /></td><td>Landing</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/lookout.png" /></td><td>Lookout</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/marina.png" /></td><td>Marina</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/meadow.png" /></td><td>Meadow</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/mountain.png" /></td><td>Mountain</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/park.png" /></td><td>Park</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/pier.png" /></td><td>Pier</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/plaza.png" /></td><td>Plaza</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/pond.png" /></td><td>Pond</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/reservation.png" /></td><td>Reservation</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/shelter.png" /></td><td>Manmade Public</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/square.png" /></td><td>Square</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/trail.png" /></td><td>Trail</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/valley.png" /></td><td>Valley</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/view.png" /></td><td>View</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/wharf.png" /></td><td>Wharf</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/woods.png" /></td><td>Woods</td></tr></table></div>', true, "legendData");
					manmade_public_spaces.set('displayInLayerSwitcher', true);
                    break;
                case 'retail':
					manmade_retail_prices.setVisible(true);
                    addLegendContent('<div id="retailLegend"><table><tr><td><a id="retailImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="retail" onchange="handleLegend($(this));" checked/></td><td colspan="2">Retail Places</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/emporium.png" /></td><td>Emporium</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/mall.png" /></td><td>Mall</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/market.png" /></td><td>Market</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/mart.png" /></td><td>Mart</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/shop.png" /></td><td>Shop</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/store.png" /></td><td>Store</td></tr></table></div>', true, "legendData");
					manmade_retail_prices.set('displayInLayerSwitcher', true);
                    break;

                default:
                    break;
            }
        }
    }
}

function addTptData() {
    $("#logosTpt").hide();
	$("#divVorTpt").hide();
    $("#radiusTpt").hide();
    $("#divTrans").hide();
    $('#airportLegend').remove();
    $('#freightLegend').remove();
    $('#railwayLegend').remove();
    $('#highwayLegend').remove();
    $('#freightIntLegend').remove();
    $('#ianaLegend').remove();
    $('#portsLegend').remove();
    $('#transStopLegend').remove();
    $('#transNetLegend').remove();
    $('#portFacLegend').remove();
    $('#portBoundaryLegend').remove();
    $('#interchangeLegend').remove();
    $('#trafficLegend').remove();
    $("#heatOpts").hide();
	$("#datafiberLegend").remove();
	
    $("#optFreight").hide();
    $("#optAirports").hide();
    $("#optDataFiber").hide();
    try {
        $("#popup-closer").click();
    } catch (ex) {}

    airport.setVisible(false);
    freightWMS.setVisible(false);
    portFacility.setVisible(false);
    railwayWMS.setVisible(false);
    highwayWMS.setVisible(false);
	metrobackboneWMS.setVisible(false);
	metrolateralWMS.setVisible(false);
	longhaulnetworkWMS.setVisible(false);
	canadalonghaulnetworkWMS.setVisible(false);
	ownedlonghaulnetworkWMS.setVisible(false);
    interchange.setVisible(false);
    transStop.setVisible(false);
    transNetWMS.setVisible(false);
    iana.setVisible(false);
    traffic.setVisible(false);
    trafficRaster.setVisible(false);
    ports.setVisible(false);
    portBoundaryWMS.setVisible(false);
    freightIntersects.setVisible(false);

    airport.set('displayInLayerSwitcher', false);
    freightWMS.set('displayInLayerSwitcher', false);
    portFacility.set('displayInLayerSwitcher', false);
    railwayWMS.set('displayInLayerSwitcher', false);
    highwayWMS.set('displayInLayerSwitcher', false);
	metrobackboneWMS.set('displayInLayerSwitcher', false);
	metrolateralWMS.set('displayInLayerSwitcher', false);
	longhaulnetworkWMS.set('displayInLayerSwitcher', false);
	canadalonghaulnetworkWMS.set('displayInLayerSwitcher', false);
	ownedlonghaulnetworkWMS.set('displayInLayerSwitcher', false);
    interchange.set('displayInLayerSwitcher', false);
    transStop.set('displayInLayerSwitcher', false);
    transNetWMS.set('displayInLayerSwitcher', false);
    iana.set('displayInLayerSwitcher', false);
    traffic.set('displayInLayerSwitcher', false);
    trafficRaster.set('displayInLayerSwitcher', false);
    ports.set('displayInLayerSwitcher', false);
    portBoundaryWMS.set('displayInLayerSwitcher', false);
    freightIntersects.set('displayInLayerSwitcher', false);

    radiusAirportLayer.setVisible(false);
    radiusFreightIntLayer.setVisible(false);
    radiusInterchangesLayer.setVisible(false);
    radiusIanaLayer.setVisible(false);
    radiusPortsLayer.setVisible(false);
    radiusTransitstopLayer.setVisible(false);
    radiusPortfacilityLayer.setVisible(false);

	if ($('#cbTptVoronoi').is(":checked")) 
		toggleClusterVor('WFS','Tpt'); 
					
    var len = 0;
    try {
        len = $("#tptData").val().length;
    } catch (ex) {}
    if (len > 0) {
		if ($('#chkLogo').is(":checked") || $('#chkIcon').is(":checked")) {
			if($("#tptData").val().indexOf("airports") !== -1 || $("#tptData").val().indexOf("flag") !== -1 || $("#tptData").val().indexOf("freightnetwork") !== -1 || $("#tptData").val().indexOf("traffic") !== -1 || $("#tptData").val().indexOf("interchange") !== -1 || $("#tptData").val().indexOf("iana") !== -1 || $("#tptData").val().indexOf("ports") !== -1 || $("#tptData").val().indexOf("transStops") !== -1 || $("#tptData").val().indexOf("portFacility") !== -1)
			{
				$("#logosTpt").show();
				$("#radiusTpt").show();
			}
		}
		else if ($('#chkVoronoi').is(":checked")) {
			if($("#tptData").val().indexOf("airports") !== -1 || $("#tptData").val().indexOf("flag") !== -1 || $("#tptData").val().indexOf("freightnetwork") !== -1 || $("#tptData").val().indexOf("traffic") !== -1 || $("#tptData").val().indexOf("interchange") !== -1 || $("#tptData").val().indexOf("iana") !== -1 || $("#tptData").val().indexOf("ports") !== -1 || $("#tptData").val().indexOf("transStops") !== -1 || $("#tptData").val().indexOf("portFacility") !== -1)
			{
				$("#divVorTpt").show();
			}
		}
        for (i = 0; i < len; i++) {
            switch ($("#tptData").val()[i]) {
                case 'airports':
                    if ($('#switchRadiusTpt').prop('checked'))
                        radiusAirportLayer.setVisible(true); 
					airport.setVisible(true);
                    addLegendContent('<div id="airportLegend"><table><tr><td><a id="airportImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="airport" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/Airports/medium.png" /></td><td>Airfields</td></tr></table></div>', true, "legendData");
					airport.set('displayInLayerSwitcher', true);
                    $("#optAirports").show();
                    break;
                case 'freight':
                    if ($('#switchRadiusTpt').prop('checked'))
                        radiusFreightIntLayer.setVisible(true);
                    freightWMS.setVisible(true);
                    $("#optFreight").show();
                    // addLegendContent('<div id="freightLegend"><table><tr><td><a id="freightnetworkImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="freightnetwork" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/freight.png" /></td><td>Freight Network</td></tr></table></div>', true, "legendData");
					freightWMS.set('displayInLayerSwitcher', true);
					filterCompanies();
                    break;
                case 'railway':
                    railwayWMS.setVisible(true);
                    addLegendContent('<div id="railwayLegend"><table><tr><td><a id="railwayImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="railway" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/railway.png" /></td><td>Railways</td></tr></table></div>', true, "legendData");
					railwayWMS.set('displayInLayerSwitcher', true);
                    break;

                case 'datafiber':
					metrobackboneWMS.setVisible(true);
					metrolateralWMS.setVisible(true);
					longhaulnetworkWMS.setVisible(true);
					canadalonghaulnetworkWMS.setVisible(true);
					ownedlonghaulnetworkWMS.setVisible(true);
					
                    addLegendContent('<div id="datafiberLegend"><table><tr><td><a id="datafiberImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="datafiber" onchange="handleLegend($(this));" checked/></td><td colspan="2">Data Fiber</td></tr><tr><td colspan="2"><td><img height="5px" width="19px" src="images/Legend/metrobackbone.png" /></td><td>Metro Backbone</td></tr><tr><td colspan="2"><td><img height="5px" width="19px" src="images/Legend/metrolateral.png" /></td><td>Metro Lateral</td></tr><tr><td colspan="2"><td><img height="5px" width="19px" src="images/Legend/canadalonghaulnetwork.png" /></td><td>Canada Longhaul Network</td></tr><tr><td colspan="2"><td><img height="5px" width="19px" src="images/Legend/longhaulnetwork.png" /></td><td>IRU Longhaul Network</td></tr><tr><td colspan="2"><td><img height="5px" width="19px" src="images/Legend/ownedlonghaulnetwork.png" /></td><td>Owned Longhaul Network</td></tr></table></div>', true, "legendData");
					
					metrobackboneWMS.set('displayInLayerSwitcher', true);
					metrolateralWMS.set('displayInLayerSwitcher', true);
					longhaulnetworkWMS.set('displayInLayerSwitcher', true);
					canadalonghaulnetworkWMS.set('displayInLayerSwitcher', true);
					ownedlonghaulnetworkWMS.set('displayInLayerSwitcher', true);
					
					$("#optDataFiber").show();
                    break;

                case 'highway':
                    highwayWMS.setVisible(true);
                    addLegendContent('<div id="highwayLegend"><table><tr><td><a id="highwaynetworkImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="highwaynetwork" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/highway.png" /></td><td>Highways</td></tr></table></div>', true, "legendData");
					highwayWMS.set('displayInLayerSwitcher', true);
                    break;

                case 'interchange':
                    if ($('#switchRadiusTpt').prop('checked'))
                        radiusInterchangesLayer.setVisible(true);
					interchange.setVisible(true);
                    addLegendContent('<div id="interchangeLegend"><table><tr><td><a id="interchangeImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="interchange" onchange="handleLegend($(this));" checked/></td><td><img src="images/Icons/crossing.png" /></td><td>Interchanges</td></tr></table></div>', true, "legendData");
					interchange.set('displayInLayerSwitcher', true);
                    break;

                case 'flag':
                    addLegendContent('<div id="freightIntLegend"><table><tr><td><a id="freightIntImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="freightInt" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/freight.png" /></td><td>Freight Intersections</td></tr></table></div>', true, "legendData");
                    freightIntersects.setVisible(true);
					freightIntersects.set('displayInLayerSwitcher', true);
                    break;

                case 'ports':
                    if ($('#switchRadiusTpt').prop('checked'))
                        radiusPortsLayer.setVisible(true);
                    addLegendContent('<div id="portsLegend"><table><tr><td><a id="portsImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="ports" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/ship.png" /></td><td>Major US Ports</td></tr></table></div>', true, "legendData");
					ports.set('displayInLayerSwitcher', true);
					ports.setVisible(true);
                    break;

                case 'iana':
                    if ($('#switchRadiusTpt').prop('checked'))
                        radiusIanaLayer.setVisible(true);
                    addLegendContent('<div id="ianaLegend"><table><tr><td><a id="ianaImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="iana" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/iana.png" /></td><td>IANA</td></tr></table></div>', true, "legendData");
					iana.set('displayInLayerSwitcher', true);
					iana.setVisible(true);
                    break;

                case 'transStops':
                    if ($('#switchRadiusTpt').prop('checked'))
                        radiusTransitstopLayer.setVisible(true);
                    addLegendContent('<div id="transStopLegend"><table><tr><td><a id="transStopsImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="transStops" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/transit.png" /></td><td>Transit Stops</td></tr></table></div>', true, "legendData");
					transStop.set('displayInLayerSwitcher', true);
					transStop.setVisible(true);
                    break;

                case 'traffic':
					traffic.set('displayInLayerSwitcher', true);
					traffic.setVisible(true);
                    break;

                case 'trafficRaster':
					$("#logosTpt").hide();
					$("#radiusTpt").hide();
                    trafficRaster.setVisible(true);
					trafficRaster.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="trafficLegend"><table><tr><td><a id="trafficImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="traffic" onchange="handleLegend($(this));" checked/></td><td>IL Traffic Heatmap</td><td>&nbsp;</td></tr></table><table id="tableInsideTable"><tr><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#08306b;"></div></td><td>35,738 - 41,000</td></tr><tr><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#0d58a1;"></div></td><td>31,340 - 35,738</td></tr><tr><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#2879b9;"></div></td><td>26,942 - 31,340</td></tr><tr><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#4a97c9;"></div></td><td>22,544 - 26,942</td></tr><tr><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#73b3d8;"></div></td><td>18,145 - 22,544</td></tr><tr><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#a3cce3;"></div></td><td>13,747 - 18,145</td></tr><tr><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#c8ddf0;"></div></td><td>9,349 - 13,747</td></tr><tr><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#dfecf8;"></div></td><td>4,951 - 9,349</td></tr><tr><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#f7fbff;"></div></td><td>553 - 4,951</td></tr></table></div>', true, "legendConditions");
                    break;

                case 'transNetwork':
                    addLegendContent('<div id="transNetLegend"><table><tr><td><a id="transNetworkImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="transNetwork" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/transit.png" /></td><td>Transit Network</td></tr></table></div>', true, "legendData");
                    transNetWMS.setVisible(true);
					transNetWMS.set('displayInLayerSwitcher', true);
                    break;

                case 'portFacility':
                    if ($('#switchRadiusTpt').prop('checked'))
                        radiusPortfacilityLayer.setVisible(true);
					portFacility.setVisible(true);
                    addLegendContent('<div id="portFacLegend"><table><tr><td><a id="portfacilityImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="portfacility" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/port.png" /></td><td>Port Facility</td></tr></table></div>', true, "legendData");
					portFacility.set('displayInLayerSwitcher', true);
                    break;

                case 'portBoundary':
                    addLegendContent('<div id="portBoundaryLegend"><table><tr><td><a id="portBoundImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="portBound" onchange="handleLegend($(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border: 1px solid #55FFFF; background-color:#FFFFFF;"></div></td><td>Port Boundary</td></tr></table></div>', true, "legendData");
					portBoundaryWMS.set('displayInLayerSwitcher', true);
                    portBoundaryWMS.setVisible(true);
                    break;
            }
        }
		if($("#tptData").val().indexOf("airports") !== -1)
			filterAirport();
    }
}

function filterAirport() {
    var len = 0,
        result = '';
    try {
        len = $("#airportFilter").val().length;
    } catch (ex) {
        airport.setVisible(false);
        return;
    }

    for (i = 0; i < $("#airportFilter").val().length; i++) {
        result += "\"type\"='" + $("#airportFilter").val()[i] + "' or ";
    }
    result = result.substring(0, result.length - 3);
    map.removeLayer(airport);
    airport = getFilteredAlbertsons("Airports", result);
    map.getLayers().insertAt(251, airport);

	if ($('#switchLabelsTpt').is(":checked"))
		changeLabelsTpt('active');
	
	else
		changeLabelsTpt('dull');
}

function addTransitData() {
    $("#tstopsLegend").remove();
    $("#frLegend").remove();
    $("#scrLegend").remove();
    $("#rrLegend").remove();
    $("#brLegend").remove();
    try {
        $("#popup-closer").click();
    } catch (ex) {}
	
	$("#logosTransit").hide();
    
	tstops.setVisible(false);
	fr.setVisible(false);
	scr.setVisible(false);
	rr.setVisible(false);
	br.setVisible(false);
    
	tstops.set('displayInLayerSwitcher', false);
	fr.set('displayInLayerSwitcher', false);
	scr.set('displayInLayerSwitcher', false);
	rr.set('displayInLayerSwitcher', false);
	br.set('displayInLayerSwitcher', false);
    
	var len = 0;
    try {
        len = $("#transitData").val().length;
    } catch (ex) {}
    if (len > 0) {
		if ($('#chkLogo').is(":checked") || $('#chkIcon').is(":checked")) {
			$("#logosTransit").show();
		}
        for (i = 0; i < len; i++) {
            switch ($("#transitData").val()[i]) {
                case 'tstops':
                    tstops.setVisible(true);
                    addLegendContent('<div id="tstopsLegend"><table><tr><td><a id="tstopsImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="tstops" onchange="handleLegend($(this));" checked/></td><td><img height="20px" width="20px" src="images/Icons/tstops.png" /></td><td>Transit Stops</td></tr></table></div>', true, "legendData");
					tstops.set('displayInLayerSwitcher', true);
                    break;
                case 'fr':
					fr.setVisible(true);
                    addLegendContent('<div id="frLegend"><table><tr><td><a id="frImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="fr" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/fr.png" /></td><td>Ferry Routes</td></tr></table></div>', true, "legendDisplayBoundaries");
					fr.set('displayInLayerSwitcher', true);
                    break;
                case 'scr':
					scr.setVisible(true);
                    addLegendContent('<div id="scrLegend"><table><tr><td><a id="scrImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="scr" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/scr.png" /></td><td>Street Car Routes</td></tr></table></div>', true, "legendDisplayBoundaries");
					scr.set('displayInLayerSwitcher', true);
                    break;
                case 'rr':
					rr.setVisible(true);
                    addLegendContent('<div id="rrLegend"><table><tr><td><a id="rrImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="rr" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/railway.png" /></td><td>Rail Routes</td></tr></table></div>', true, "legendDisplayBoundaries");
					rr.set('displayInLayerSwitcher', true);
                    break;
                case 'br':
					br.setVisible(true);
                    addLegendContent('<div id="brLegend"><table><tr><td><a id="brImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="br" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/br.png" /></td><td>Bus Routes</td></tr></table></div>', true, "legendDisplayBoundaries");
					br.set('displayInLayerSwitcher', true);
                    break;
            }
        }
    }
}

function addSchoolData() {
    $("#pssPrivateLegend").remove();
    try {
        $("#popup-closer").click();
    } catch (ex) {}
	
	$("#logosSchools").hide();
	$("#divVorSchools").hide();
    
    primary.setVisible(false);
    pssprivate.setVisible(false);
	
    primary.set('displayInLayerSwitcher', false);
    pssprivate.set('displayInLayerSwitcher', false);

	if ($('#cbSchoolsVoronoi').is(":checked")) 
		toggleClusterVor('WFS','Schools');  
    
	var len = 0;
    try {
        len = $("#schoolData").val().length;
    } catch (ex) {}
    if (len > 0) {
		if ($('#chkLogo').is(":checked") || $('#chkIcon').is(":checked")) {
			if($("#schoolData").val().indexOf("primary") !== -1 || $("#schoolData").val().indexOf("private") !== -1)
				$("#logosSchools").show();
		}
		if ($('#chkVoronoi').is(":checked")) {
			if($("#schoolData").val().indexOf("primary") !== -1 || $("#schoolData").val().indexOf("private") !== -1)
				$("#divVorSchools").show();
		}
        for (i = 0; i < len; i++) {
            switch ($("#schoolData").val()[i]) {
                case 'primary':
					primary.setVisible(true);
                    addLegendContent('<div id="ccdPrimaryLegend"><table><tr><td><a id="ccdPrimaryImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="ccdPrimary" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/schools/primary.png" /></td><td>Schools CCD Primary</td></tr></table></div>', true, "legendData");
					primary.set('displayInLayerSwitcher', true);
                    break;
                case 'private':
					pssprivate.setVisible(true);
                    addLegendContent('<div id="pssPrivateLegend"><table><tr><td><a id="pssPrivateImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="pssPrivate" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/schools/private.png" /></td><td>Schools PSS Private</td></tr></table></div>', true, "legendData");
					pssprivate.set('displayInLayerSwitcher', true);
                    break;
            }
        }
    }
}

function addBanksData() {
    $('#bankFilter').find('[value=none]').prop('selected', true);
	$('#bankFilter').selectpicker('refresh');
	$("#optBanks").hide();
	$("#logosBanks").hide();
	$("#radiusBanks").hide();
    $("#bankTable").hide();
	$("#divVorBanks").hide();
	
    $("#banks2012Legend").remove();
    $("#banks2016Legend").remove();
    $("#banks2017Legend").remove();
    $("#creditunionsLegend").remove();
    try {
        $("#popup-closer").click();
    } catch (ex) {}

    banks_2012.setVisible(false);
    banks_2016.setVisible(false);
    banks_2017.setVisible(false);
    creditunions.setVisible(false);
	
    banks_2012.set('displayInLayerSwitcher', false);
    banks_2016.set('displayInLayerSwitcher', false);
    banks_2017.set('displayInLayerSwitcher', false);
    creditunions.set('displayInLayerSwitcher', false);
	
	if ($('#cbBanksVoronoi').is(":checked")) 
		toggleClusterVor('WFS','Banks'); 
					
    var len = 0;
    try {
        len = $("#bankData").val().length;
    } catch (ex) {}
    if (len > 0) {
		if ($('#chkVoronoi').is(":checked")) {
			$("#divVorBanks").show();
		}
        for (i = 0; i < len; i++) {
			$("#optBanks").show();
			$("#bankTable").show();
            switch ($("#bankData").val()[i]) {
                case '2012':
					filterBanks();
					// banks_2012.setVisible(true);
                    addLegendContent('<div id="banks2012Legend"><table><tr><td><a id="banks2012Img" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="banks2012" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/Banks/banks2012.png" /></td><td>Banks 2012</td></tr></table></div>', true, "legendData");
					// banks_2012.set('displayInLayerSwitcher', true);
                    break;
                case '2016':
					filterBanks();
					// banks_2016.setVisible(true);
                    addLegendContent('<div id="banks2016Legend"><table><tr><td><a id="banks2016Img" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="banks2016" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/Banks/banks2016.png" /></td><td>Banks 2016</td></tr></table></div>', true, "legendData");
					// banks_2016.set('displayInLayerSwitcher', true);
                    break;
                case '2017':
					filterBanks();
					// banks_2017.setVisible(true);
                    addLegendContent('<div id="banks2017Legend"><table><tr><td><a id="banks2017Img" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="banks2017" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/Banks/banks2017.png" /></td><td>Banks 2017</td></tr></table></div>', true, "legendData");
					// banks_2017.set('displayInLayerSwitcher', true);
                    break;
                case 'creditunions':
					$("#optBanks").hide();
					$("#bankTable").hide();
					$("#logosBanks").show();
					$("#radiusBanks").show();
					creditunions.setVisible(true);
                    addLegendContent('<div id="creditunionsLegend"><table><tr><td><a id="creditunionsImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="creditunions" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/creditunions.png" /></td><td>Credit Unions</td></tr></table></div>', true, "legendData");
					creditunions.set('displayInLayerSwitcher', true);
                    if ($('#switchRadiusBanks').prop('checked'))
                        radiusCreditUnionsLayer.setVisible(true);
                    break;
            }
        }
    }
}

function addFinData() {
	$("#logosFin").hide();
	$("#radiusFin").hide();
	$("#divVorFin").hide();

    $("#agenciesLegend").remove();
    $("#agent_zaLegend").remove();
    $("#agent_caLegend").remove();
    $("#edwardjonesLegend").remove();
    try {
        $("#popup-closer").click();
    } catch (ex) {}

    agencies.setVisible(false);
    agent_za.setVisible(false);
    agent_ca.setVisible(false);
    edwardjones.setVisible(false);

    agencies.set('displayInLayerSwitcher', false);
    agent_za.set('displayInLayerSwitcher', false);
    agent_ca.set('displayInLayerSwitcher', false);
    edwardjones.set('displayInLayerSwitcher', false);
	
    radiusAgenciesLayer.setVisible(false);
    radiusCALayer.setVisible(false);
    radiusZALayer.setVisible(false);
    radiusEdwardJonesLayer.setVisible(false);

	if ($('#cbFinVoronoi').is(":checked")) 
		toggleClusterVor('WFS','Finance'); 
					
    var len = 0;
    try {
        len = $("#finData").val().length;
    } catch (ex) {}
    if (len > 0) {
		if ($('#chkVoronoi').is(":checked")) {
			$("#divVorFin").show();
		}
		if ($('#chkIcon').is(":checked") || $('#chkLogo').is(":checked")) {			
			$("#logosFin").show();
			$("#radiusFin").show();
		}
        for (i = 0; i < len; i++) {
            switch ($("#finData").val()[i]) {
                case 'agencies':
					agencies.setVisible(true);
                    addLegendContent('<div id="agenciesLegend"><table><tr><td><a id="agenciesImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="agencies" onchange="handleLegend($(this));" checked/></td><td><img height="30px" width="20px" src="images/Icons/agencies.png" /></td><td>Agencies</td></tr></table></div>', true, "legendData");
					agencies.set('displayInLayerSwitcher', true);
                    if ($('#switchRadiusFin').prop('checked'))
                        radiusAgenciesLayer.setVisible(true);
                    break;
                case 'agent_ca':
					agent_ca.setVisible(true);
                    addLegendContent('<div id="agent_caLegend"><table><tr><td><a id="agent_caImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="agent_ca" onchange="handleLegend($(this));" checked/></td><td><img height="30px" width="20px" src="images/Icons/agent_ca.png" /></td><td>Agent Locations - Address Based</td></tr></table></div>', true, "legendData");
					agent_ca.set('displayInLayerSwitcher', true);
                    if ($('#switchRadiusFin').prop('checked'))
                        radiusCALayer.setVisible(true);
                    break;
                case 'agent_za':
					agent_za.setVisible(true);
                    addLegendContent('<div id="agent_zaLegend"><table><tr><td><a id="agent_zaImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="agent_za" onchange="handleLegend($(this));" checked/></td><td><img height="30px" width="20px" src="images/Icons/agent_za.png" /></td><td>Agent Locations - Zip Based</td></tr></table></div>', true, "legendData");
					agent_za.set('displayInLayerSwitcher', true);
                    if ($('#switchRadiusFin').prop('checked'))
                        radiusZALayer.setVisible(true);
                    break;
                case 'edwardjones':
					$("#optBanks").hide();
					$("#bankTable").hide();
					$("#logosBanks").show();
					$("#radiusBanks").show();
					edwardjones.setVisible(true);
                    addLegendContent('<div id="edwardjonesLegend"><table><tr><td><a id="edwardjonesImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="edwardjones" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/edwardjones.png" /></td><td>Edward Jones</td></tr></table></div>', true, "legendData");
					edwardjones.set('displayInLayerSwitcher', true);
                    if ($('#switchRadiusBanks').prop('checked'))
                        radiusEdwardJonesLayer.setVisible(true);
                    break;
            }
        }
    }
}

function addSurfaceWaterData() {
    $("#surfacewaterLegend").remove();
    try {
        $("#popup-closer").click();
    } catch (ex) {}
    $("#surfaceWaterDiv").hide();
    surfacewater.setVisible(false);

    surfacewater.set('displayInLayerSwitcher', false);
					
    var len = 0;
    try {
        len = $("#surfaceWaterData").val().length;
    } catch (ex) {}
    if (len > 0) {
		$("#surfaceWaterDiv").show();
        for (i = 0; i < len; i++) {
            switch ($("#surfaceWaterData").val()[i]) {
                case 'surfacewater':
					surfacewater.setVisible(true);
					surfacewater.set('displayInLayerSwitcher', true);
                    addLegendContent('<div id="surfacewaterLegend"><table><tr><td><a id="surfacewaterImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="surfacewater" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Legend/coastalline.png" /></td><td>Surface Water</td></tr></table></div>', true, "legendData");
                    break;
            }
        }
    }
}

function filterBanks() {
	var query;
    switch ($("#bankFilter").val()) {
        case 'all':
            query = "bkmo='0' or bkmo='1'";
            break;
        case 'hq':
            query = "bkmo='1'";
            break;
        case 'branches':
            query = "bkmo='0'";
            break;
    }
    
	if($('#bankData').find('[value=2012]').prop('selected'))
	{
		map.removeLayer(banks_2012);
		banks_2012 = getFilteredAlbertsons("Banks 2012", query);
		map.getLayers().insertAt(210, banks_2012);
	}
    
	else if($('#bankData').find('[value=2016]').prop('selected'))
	{
		map.removeLayer(banks_2016);
		banks_2016 = getFilteredAlbertsons("Banks 2016", query);
		map.getLayers().insertAt(211, banks_2016);
	}
    
	else if($('#bankData').find('[value=2017]').prop('selected'))
	{
		map.removeLayer(banks_2017);
		banks_2017 = getFilteredAlbertsons("Banks 2017", query);
		map.getLayers().insertAt(212, banks_2017);
	}
	
    updateResourceOnGS(banks_2012, "banks_2012", ol.proj.transformExtent(map.getView().calculateExtent(map.getSize()), 'EPSG:3857', 'EPSG:4326'));
	updateResourceOnGS(banks_2016, "banks_2016", ol.proj.transformExtent(map.getView().calculateExtent(map.getSize()), 'EPSG:3857', 'EPSG:4326'));
    updateResourceOnGS(banks_2017, "banks_2017", ol.proj.transformExtent(map.getView().calculateExtent(map.getSize()), 'EPSG:3857', 'EPSG:4326'));
}

function turnCondLegendOff() {
    $("#popup-closer").click();
    $("#aquiferLegend").remove();
    $("#majorsoilresourceLegend").remove();
    $("#alluvialandglacialLegend").remove();
    $("#birdsLegend").remove();
    $("#fishLegend").remove();
    $("#mammalsLegend").remove();
    $("#reptilesLegend").remove();
    $("#treesLegend").remove();
    $("#dniLegend").remove();
    $("#ghiLegend").remove();
    $("#lalitLegend").remove();
    $("#phmLegend").remove();
    $("#phmzipLegend").remove();
    $("#eqiLegend").remove();
    $("#urbanRuralLegend").remove();
    $("#lalowi10shLegend").remove();
    $("#lalowi10Legend").remove();
    $("#lapop10shaLegend").remove();
    $("#lapop10Legend").remove();
    $("#lalowi1shaLegend").remove();
    $("#lalowi1Legend").remove();
    $("#lapop1sharLegend").remove();
    $("#lapop1Legend").remove();
    $("#bankzip2012Legend").remove();
    $("#bankzip2016Legend").remove();
    $("#bankzip2017Legend").remove();
    $("#bankcountyDeposit2012Legend").remove();
    $("#bankcountyDeposit2016Legend").remove();
    $("#bankcountyDeposit2017Legend").remove();
    $("#bankcountyAsset2012Legend").remove();
    $("#bankcountyAsset2016Legend").remove();
    $("#bankcountyAsset2017Legend").remove();
    $("#bankcountydepchangeoneLegend").remove();
    $("#bankcountydepchangeoneperLegend").remove();
    $("#bankcountydepchangefiveLegend").remove();
    $("#bankcountydepchangefiveperLegend").remove();
    $("#bankcountyasschangeoneLegend").remove();
    $("#bankcountyasschangeoneperLegend").remove();
    $("#bankcountyasschangefiveLegend").remove();
    $("#bankcountyasschangefiveperLegend").remove();
    $("#tractsnapLegend").remove();
    $("#tractlowiLegend").remove();
    $("#medianfamiLegend").remove();
    $("#tracthispaLegend").remove();
    $("#tractasianLegend").remove();
    $("#tractblackLegend").remove();
    $("#tractwhiteLegend").remove();
    $("#tractsenioLegend").remove();
    $("#tractkidsLegend").remove();
    $("#povertyratLegend").remove();
    $("#ohu2010Legend").remove();
    $("#pop2010Legend").remove();
    $("#householdsLegend").remove();
    $("#avg_hh_size_rentersLegend").remove();
    $("#avg_hh_size_ownersLegend").remove();
    $("#avg_hh_sizeLegend").remove();
    $("#gross_hh_densityLegend").remove();
    $("#job_density_simpleLegend").remove();
    $("#retail_density_simpleLegend").remove();
    $("#ffrLegend").remove();
    $("#ffrchangeLegend").remove();
    $("#ffrpopuLegend").remove();
    $("#ffrpopuchangeLegend").remove();
    $("#fsrLegend").remove();
    $("#fsrchangeLegend").remove();
    $("#fsrpopuLegend").remove();
    $("#fsrpopuchangeLegend").remove();
    $("#farmermarketLegend").remove();
    $("#farmermarketchangeLegend").remove();
    $("#dsfLegend").remove();
    $("#ngpLegend").remove();
    $("#dsfchangeLegend").remove();
	
    $("#emipcLegend").remove();
    $("#emipcstateLegend").remove();
    $("#emitlLegend").remove();
    $("#emitlstateLegend").remove();
    $("#fdipcLegend").remove();
    $("#fdipcstateLegend").remove();
    $("#ftpcLegend").remove();
    $("#ftpcstateLegend").remove();
    $("#ihpcLegend").remove();
    $("#ihpcstateLegend").remove();
    $("#ihtlLegend").remove();
    $("#ihtlstateLegend").remove();
    $("#mtpcLegend").remove();
    $("#mtpcstateLegend").remove();
    $("#mttlLegend").remove();
    $("#mttlstateLegend").remove();
    $("#ctxstateLegend").remove();
    $("#emxLegend").remove();
    $("#emxstateLegend").remove();
    $("#fdxLegend").remove();
    $("#fdxstateLegend").remove();
    $("#mhbxLegend").remove();
    $("#mhbxstateLegend").remove();
    $("#mtxLegend").remove();
    $("#mtxstateLegend").remove();
    $("#tlxLegend").remove();
    $("#tlxstateLegend").remove();
    $("#wdxLegend").remove();
    $("#wdxstateLegend").remove();
    $("#owner_occupied_huLegend").remove();
    $("#renter_occupied_huLegend").remove();
    $("#pct_rentersLegend").remove();
    $("#pct_renter_occupied_huLegend").remove();
    $("#pct_hu_1_detachedLegend").remove();
    $("#potbellyfranchiseLegend").remove();

    frameBorder = '#000000';
}

function turnAllLayersOff() {
	aquiferSelected = 0;
	$("#aquifersType").hide();
	
	if($("#graingerSelect").val() == "none")
		$("#graingerGroupsType").hide();
	
	$('#cohortOptsEcono').prop('disabled', false);
	$('#cohortOptsEcono').selectpicker('refresh');
	$("#econoCohortsOpts").prop( "disabled", false );
	$("#econoCohortsOpts").show();
	$("#framesEco").show();
	$("#flipEconoCohorts").html("Flip Cohorts");
			
	$('#cohortOptsEnviro').prop('disabled', false);
	$('#cohortOptsEnviro').selectpicker('refresh');
	$("#enviroCohortsOpts").prop( "disabled", false );
	$("#enviroCohortsOpts").hide();
	$("#framesEnviro").hide();
			
	$("#flipEnviroCohorts").html("Flip Cohorts");
	
    $("#popup-closer").click();
	
	ffr.set('displayInLayerSwitcher', false);
	ffrchange.set('displayInLayerSwitcher', false);
	ffrpopu.set('displayInLayerSwitcher', false);
	ffrpopuchange.set('displayInLayerSwitcher', false);
	fsr.set('displayInLayerSwitcher', false);
	fsrchange.set('displayInLayerSwitcher', false);
	fsrpopu.set('displayInLayerSwitcher', false);
	fsrpopuchange.set('displayInLayerSwitcher', false);
	farmermarket.set('displayInLayerSwitcher', false);
	farmermarketchange.set('displayInLayerSwitcher', false);
	dsf.set('displayInLayerSwitcher', false);
	ngp.set('displayInLayerSwitcher', false);
	dsfchange.set('displayInLayerSwitcher', false);
	
	emipc.set('displayInLayerSwitcher', false);
	emipcstate.set('displayInLayerSwitcher', false);
	emitl.set('displayInLayerSwitcher', false);
	emitlstate.set('displayInLayerSwitcher', false);
	fdipc.set('displayInLayerSwitcher', false);
	fdipcstate.set('displayInLayerSwitcher', false);
	ftpc.set('displayInLayerSwitcher', false);
	ftpcstate.set('displayInLayerSwitcher', false);
	ihpc.set('displayInLayerSwitcher', false);
	ihpcstate.set('displayInLayerSwitcher', false);
	ihtl.set('displayInLayerSwitcher', false);
	ihtlstate.set('displayInLayerSwitcher', false);
	mtpc.set('displayInLayerSwitcher', false);
	mtpcstate.set('displayInLayerSwitcher', false);
	mttl.set('displayInLayerSwitcher', false);
	ctxstate.set('displayInLayerSwitcher', false);
	emx.set('displayInLayerSwitcher', false);
	emxstate.set('displayInLayerSwitcher', false);
	fdx.set('displayInLayerSwitcher', false);
	fdxstate.set('displayInLayerSwitcher', false);
	mhbx.set('displayInLayerSwitcher', false);
	mhbxstate.set('displayInLayerSwitcher', false);
	mtx.set('displayInLayerSwitcher', false);
	mtxstate.set('displayInLayerSwitcher', false);
	tlx.set('displayInLayerSwitcher', false);
	tlxstate.set('displayInLayerSwitcher', false);
	wdx.set('displayInLayerSwitcher', false);
	wdxstate.set('displayInLayerSwitcher', false);
	owner_occupied_hu.set('displayInLayerSwitcher', false);
	renter_occupied_hu.set('displayInLayerSwitcher', false);
	pct_renters.set('displayInLayerSwitcher', false);
	pct_renter_occupied_hu.set('displayInLayerSwitcher', false);
	pct_hu_1_detached.set('displayInLayerSwitcher', false);
	potbellyfranchise.set('displayInLayerSwitcher', false);
		
	cattletop.set('displayInLayerSwitcher', false);
	cattle.set('displayInLayerSwitcher', false);
	cattlemasked.set('displayInLayerSwitcher', false);
	ethanol_production.set('displayInLayerSwitcher', false);
	dataCenters.set('displayInLayerSwitcher', false);
	naicsap.set('displayInLayerSwitcher', false);
	naicsest.set('displayInLayerSwitcher', false);
	
	naicsgrainger.set('displayInLayerSwitcher', false);
	
	bankzip2012.set('displayInLayerSwitcher', false);
	bankzip2016.set('displayInLayerSwitcher', false);
	bankzip2017.set('displayInLayerSwitcher', false);
	bankcountydep2012.set('displayInLayerSwitcher', false);
	bankcountydep2016.set('displayInLayerSwitcher', false);
	bankcountydep2017.set('displayInLayerSwitcher', false);
	bankcountyasset2012.set('displayInLayerSwitcher', false);
	bankcountyasset2016.set('displayInLayerSwitcher', false);
	bankcountyasset2017.set('displayInLayerSwitcher', false);
	bankcountydepchangeone.set('displayInLayerSwitcher', false);
	bankcountydepchangeoneper.set('displayInLayerSwitcher', false);
	bankcountydepchangefive.set('displayInLayerSwitcher', false);
	bankcountydepchangefiveper.set('displayInLayerSwitcher', false);
	bankcountyasschangeone.set('displayInLayerSwitcher', false);
	bankcountyasschangeoneper.set('displayInLayerSwitcher', false);
	bankcountyasschangefive.set('displayInLayerSwitcher', false);
	bankcountyasschangefiveper.set('displayInLayerSwitcher', false);
	
	ptrrWMSOS.set('displayInLayerSwitcher', false);
	
	foodaccess.set('displayInLayerSwitcher', false);
	households.set('displayInLayerSwitcher', false);
	avg_hh_size_renters.set('displayInLayerSwitcher', false);
	avg_hh_size_owners.set('displayInLayerSwitcher', false);
	avg_hh_size.set('displayInLayerSwitcher', false);
	gross_hh_density.set('displayInLayerSwitcher', false);
	job_density_simple.set('displayInLayerSwitcher', false);
	retail_density_simple.set('displayInLayerSwitcher', false);
	potbellyfranchise.set('displayInLayerSwitcher', false);

	aquifer.set('displayInLayerSwitcher', false);
	majorsoilresource.set('displayInLayerSwitcher', false);
	alluvialandglacial.set('displayInLayerSwitcher', false);
	eqi.set('displayInLayerSwitcher', false);
	
	birds.set('displayInLayerSwitcher', false);
	fish.set('displayInLayerSwitcher', false);
	mammals.set('displayInLayerSwitcher', false);
	reptiles.set('displayInLayerSwitcher', false);
	trees.set('displayInLayerSwitcher', false);
	
	dni.set('displayInLayerSwitcher', false);
	ghi.set('displayInLayerSwitcher', false);
	lalit.set('displayInLayerSwitcher', false);
	phm.set('displayInLayerSwitcher', false);
	phmzip.set('displayInLayerSwitcher', false);

    foodaccess.setVisible(false);
	households.setVisible(false);
	avg_hh_size_renters.setVisible(false);
	avg_hh_size_owners.setVisible(false);
	avg_hh_size.setVisible(false);
	gross_hh_density.setVisible(false);
	job_density_simple.setVisible(false);
	retail_density_simple.setVisible(false);
	// dieseltaxrates.setVisible(false);
	// solidbiomass.setVisible(false);
    refri.setVisible(false);

    ffr.setVisible(false);
    ffrchange.setVisible(false);
    ffrpopu.setVisible(false);
    ffrpopuchange.setVisible(false);
    fsr.setVisible(false);
    fsrchange.setVisible(false);
    fsrpopu.setVisible(false);
    fsrpopuchange.setVisible(false);
    farmermarket.setVisible(false);
    farmermarketchange.setVisible(false);
    dsf.setVisible(false);
    ngp.setVisible(false);
    dsfchange.setVisible(false);
	
	emipc.setVisible(false);
	emipcstate.setVisible(false);
	emitl.setVisible(false);
	emitlstate.setVisible(false);
	fdipc.setVisible(false);
	fdipcstate.setVisible(false);
	ftpc.setVisible(false);
	ftpcstate.setVisible(false);
	ihpc.setVisible(false);
	ihpcstate.setVisible(false);
	ihtl.setVisible(false);
	ihtlstate.setVisible(false);
	mtpc.setVisible(false);
	mtpcstate.setVisible(false);
	mttl.setVisible(false);
	mttlstate.setVisible(false);
	ctxstate.setVisible(false);
	emx.setVisible(false);
	emxstate.setVisible(false);
	fdx.setVisible(false);
	fdxstate.setVisible(false);
	mhbx.setVisible(false);
	mhbxstate.setVisible(false);
	mtx.setVisible(false);
	mtxstate.setVisible(false);
	tlx.setVisible(false);
	tlxstate.setVisible(false);
	wdx.setVisible(false);
	wdxstate.setVisible(false);
	owner_occupied_hu.setVisible(false);
	renter_occupied_hu.setVisible(false);
	pct_renters.setVisible(false);
	pct_renter_occupied_hu.setVisible(false);
	pct_hu_1_detached.setVisible(false);
	potbellyfranchise.setVisible(false);

    cattle.setVisible(false);
    cattlemasked.setVisible(false);
    cattletop.setVisible(false);
    ethanol_production.setVisible(false);
    dataCenters.setVisible(false);
    naicsap.setVisible(false);
    naicsgrainger.setVisible(false);
    naicsest.setVisible(false);

    ptrrWMSOS.setVisible(false);
	
    bankzip2012.setVisible(false);
    bankzip2016.setVisible(false);
    bankzip2017.setVisible(false);
	
    bankcountydep2012.setVisible(false);
    bankcountydep2016.setVisible(false);
    bankcountydep2017.setVisible(false);
    bankcountyasset2012.setVisible(false);
    bankcountyasset2016.setVisible(false);
    bankcountyasset2017.setVisible(false);
	
    bankcountydepchangeone.setVisible(false);
    bankcountydepchangeoneper.setVisible(false);
    bankcountydepchangefive.setVisible(false);
    bankcountydepchangefiveper.setVisible(false);
    bankcountyasschangeone.setVisible(false);
    bankcountyasschangeoneper.setVisible(false);
    bankcountyasschangefive.setVisible(false);
    bankcountyasschangefiveper.setVisible(false);

    aquifer.setVisible(false);
    majorsoilresource.setVisible(false);
    alluvialandglacial.setVisible(false);
    eqi.setVisible(false);
	
	birds.setVisible(false);
	fish.setVisible(false);
	mammals.setVisible(false);
	reptiles.setVisible(false);
	trees.setVisible(false);
	
	dni.setVisible(false);
	ghi.setVisible(false);
	lalit.setVisible(false);
	phm.setVisible(false);
	phmzip.setVisible(false);

    foodaccess.setOpacity(1);
	households.setOpacity(1);
	avg_hh_size_renters.setOpacity(1);
	avg_hh_size_owners.setOpacity(1);
	avg_hh_size.setOpacity(1);
	gross_hh_density.setOpacity(1);
	job_density_simple.setOpacity(1);
	retail_density_simple.setOpacity(1);
	// dieseltaxrates.setOpacity(1);
	// solidbiomass.setOpacity(1);

    ffr.setOpacity(1);
    ffrchange.setOpacity(1);
    ffrpopu.setOpacity(1);
    ffrpopuchange.setOpacity(1);
    fsr.setOpacity(1);
    fsrchange.setOpacity(1);
    fsrpopu.setOpacity(1);
    fsrpopuchange.setOpacity(1);
    farmermarket.setOpacity(1);
    farmermarketchange.setOpacity(1);
    dsf.setOpacity(1);
    ngp.setOpacity(1);
    dsfchange.setOpacity(1);
	
	emipc.setOpacity(1);
	emipcstate.setOpacity(1);
	emitl.setOpacity(1);
	emitlstate.setOpacity(1);
	fdipc.setOpacity(1);
	fdipcstate.setOpacity(1);
	ftpc.setOpacity(1);
	ftpcstate.setOpacity(1);
	ihpc.setOpacity(1);
	ihpcstate.setOpacity(1);
	ihtl.setOpacity(1);
	ihtlstate.setOpacity(1);
	mtpc.setOpacity(1);
	mtpcstate.setOpacity(1);
	mttl.setOpacity(1);
	mttlstate.setOpacity(1);
	ctxstate.setOpacity(1);
	emx.setOpacity(1);
	emxstate.setOpacity(1);
	fdx.setOpacity(1);
	fdxstate.setOpacity(1);
	mhbx.setOpacity(1);
	mhbxstate.setOpacity(1);
	mtx.setOpacity(1);
	mtxstate.setOpacity(1);
	tlx.setOpacity(1);
	tlxstate.setOpacity(1);
	wdx.setOpacity(1);
	wdxstate.setOpacity(1);
	owner_occupied_hu.setOpacity(1);
	renter_occupied_hu.setOpacity(1);
	pct_renters.setOpacity(1);
	pct_renter_occupied_hu.setOpacity(1);
	pct_hu_1_detached.setOpacity(1);
	potbellyfranchise.setOpacity(1);

	cattle.setOpacity(1);
	cattlemasked.setOpacity(1);
	cattletop.setOpacity(1);
	ethanol_production.setOpacity(1);
	dataCenters.setOpacity(1);
    naicsap.setOpacity(1);
    naicsgrainger.setOpacity(1);
    naicsest.setOpacity(1);

    ptrrWMSOS.setOpacity(1);
	
    bankzip2012.setOpacity(1);
    bankzip2016.setOpacity(1);
    bankzip2017.setOpacity(1);
	
    bankcountydep2012.setOpacity(1);
    bankcountydep2016.setOpacity(1);
    bankcountydep2017.setOpacity(1);
    bankcountyasset2012.setOpacity(1);
    bankcountyasset2016.setOpacity(1);
    bankcountyasset2017.setOpacity(1);
	
    bankcountydepchangeone.setOpacity(1);
    bankcountydepchangeoneper.setOpacity(1);
    bankcountydepchangefive.setOpacity(1);
    bankcountydepchangefiveper.setOpacity(1);
    bankcountyasschangeone.setOpacity(1);
    bankcountyasschangeoneper.setOpacity(1);
    bankcountyasschangefive.setOpacity(1);
    bankcountyasschangefiveper.setOpacity(1);

    aquifer.setOpacity(1);
    majorsoilresource.setOpacity(1);
    alluvialandglacial.setOpacity(1);
    eqi.setOpacity(1);
	
	birds.setOpacity(1);
	fish.setOpacity(1);
	mammals.setOpacity(1);
	reptiles.setOpacity(1);
	trees.setOpacity(1);
	
	dni.setOpacity(1);
	ghi.setOpacity(1);
	lalit.setOpacity(1);
	phm.setOpacity(1);
	phmzip.setOpacity(1);

    $("#divTransRefri").hide();
    $("#divTransSocial").hide();
    $("#divTransEconomic").hide();
    $("#divTransEnviro").hide();

    $("#ethanolproductionLegend").remove();
    $("#aquiferLegend").remove();
    $("#majorsoilresourceLegend").remove();
    $("#alluvialandglacialLegend").remove();
    $("#birdsLegend").remove();
    $("#fishLegend").remove();
    $("#mammalsLegend").remove();
    $("#reptilesLegend").remove();
    $("#treesLegend").remove();
    $("#dniLegend").remove();
    $("#ghiLegend").remove();
    $("#lalitLegend").remove();
    $("#phmLegend").remove();
    $("#phmzipLegend").remove();
    $("#eqiLegend").remove();
    $("#urbanRuralLegend").remove();
    $("#lalowi10shLegend").remove();
    $("#lalowi10Legend").remove();
    $("#lapop10shaLegend").remove();
    $("#lapop10Legend").remove();
    $("#lalowi1shaLegend").remove();
    $("#lalowi1Legend").remove();
    $("#lapop1sharLegend").remove();
    $("#lapop1Legend").remove();
    $("#cattleLegend").remove();
    $("#cattletopLegend").remove();
    $("#bankzip2012Legend").remove();
    $("#bankzip2016Legend").remove();
    $("#bankzip2017Legend").remove();
    $("#bankcountyDeposit2012Legend").remove();
    $("#bankcountyDeposit2016Legend").remove();
    $("#bankcountyDeposit2017Legend").remove();
    $("#bankcountyAsset2012Legend").remove();
    $("#bankcountyAsset2016Legend").remove();
    $("#bankcountyAsset2017Legend").remove();
    $("#bankcountydepchangeoneLegend").remove();
    $("#bankcountydepchangeoneperLegend").remove();
    $("#bankcountydepchangefiveLegend").remove();
    $("#bankcountydepchangefiveperLegend").remove();
    $("#bankcountyasschangeoneLegend").remove();
    $("#bankcountyasschangeoneperLegend").remove();
    $("#bankcountyasschangefiveLegend").remove();
    $("#bankcountyasschangefiveperLegend").remove();
    $("#tractsnapLegend").remove();
    $("#tractlowiLegend").remove();
    $("#medianfamiLegend").remove();
    $("#tracthispaLegend").remove();
    $("#tractasianLegend").remove();
    $("#tractblackLegend").remove();
    $("#tractwhiteLegend").remove();
    $("#tractsenioLegend").remove();
    $("#tractkidsLegend").remove();
    $("#povertyratLegend").remove();
    $("#establishments2018Legend").remove();
    $("#establishmentsoneyearLegend").remove();
    $("#establishmentsoneyearperLegend").remove();
    $("#establishmentslocationLegend").remove();
    $("#wagespayrollLegend").remove();
    $("#totalwagesoneyearperLegend").remove();
    $("#avgannualpayLegend").remove();
    $("#avgannualpayoneyearperLegend").remove();
    $("#avgweeklypayLegend").remove();
    $("#avgwagesoneyearperLegend").remove();
    $("#annualpaylocationLegend").remove();
    $("#employees2018Legend").remove();
    $("#employeesoneyearLegend").remove();
    $("#employeeLegend").remove();
    $("#ohu2010Legend").remove();
    $("#pop2010Legend").remove();
    $("#householdsLegend").remove();
    $("#avg_hh_size_rentersLegend").remove();
    $("#avg_hh_size_ownersLegend").remove();
    $("#avg_hh_sizeLegend").remove();
    $("#gross_hh_densityLegend").remove();
    $("#job_density_simpleLegend").remove();
    $("#retail_density_simpleLegend").remove();
    $("#ffrLegend").remove();
    $("#ffrchangeLegend").remove();
    $("#ffrpopuLegend").remove();
    $("#ffrpopuchangeLegend").remove();
    $("#fsrLegend").remove();
    $("#fsrchangeLegend").remove();
    $("#fsrpopuLegend").remove();
    $("#fsrpopuchangeLegend").remove();
    $("#farmermarketLegend").remove();
    $("#farmermarketchangeLegend").remove();
    $("#dsfLegend").remove();
    $("#ngpLegend").remove();
    $("#dsfchangeLegend").remove();
    $("#dataCentersLegend").remove();
	
    $("#emipcLegend").remove();
    $("#emipcstateLegend").remove();
    $("#emitlLegend").remove();
    $("#emitlstateLegend").remove();
    $("#fdipcLegend").remove();
    $("#fdipcstateLegend").remove();
    $("#ftpcLegend").remove();
    $("#ftpcstateLegend").remove();
    $("#ihpcLegend").remove();
    $("#ihpcstateLegend").remove();
    $("#ihtlLegend").remove();
    $("#ihtlstateLegend").remove();
    $("#mtpcLegend").remove();
    $("#mtpcstateLegend").remove();
    $("#mttlLegend").remove();
    $("#mttlstateLegend").remove();
    $("#ctxstateLegend").remove();
    $("#emxLegend").remove();
    $("#emxstateLegend").remove();
    $("#fdxLegend").remove();
    $("#fdxstateLegend").remove();
    $("#mhbxLegend").remove();
    $("#mhbxstateLegend").remove();
    $("#mtxLegend").remove();
    $("#mtxstateLegend").remove();
    $("#tlxLegend").remove();
    $("#tlxstateLegend").remove();
    $("#wdxLegend").remove();
    $("#wdxstateLegend").remove();
    $("#owner_occupied_huLegend").remove();
    $("#renter_occupied_huLegend").remove();
    $("#pct_rentersLegend").remove();
    $("#pct_renter_occupied_huLegend").remove();
    $("#pct_hu_1_detachedLegend").remove();
    $("#potbellyfranchiseLegend").remove();

    frameBorder = '#000000';
}

function addSocialData() {
	$('#urbanruralSelect').selectpicker('val', 'none');
	$('#economicSelect').selectpicker('val', 'none');
	$('#businessActivitySelect').selectpicker('val', 'none');
	$('#graingerSelect').selectpicker('val', 'none');
	$('#banksActivitySelect').selectpicker('val', 'none');
	$('#residentsSelect').selectpicker('val', 'none');
	$('#enviroSelect').selectpicker('val', 'none');
	$('#urbanruralFoodAccessSelect').selectpicker('val', 'none');
	$('#graingerGroupsTypeSelect').selectpicker('val', 'none');
	$('#khSelect').selectpicker('val', 'none');
	$('#housingSelect').selectpicker('val', 'none');
	$('#solardataSelect').selectpicker('val', 'none');
	$('#biodiversitydataSelect').selectpicker('val', 'none');

	turnAllLayersOff();

    updateLook();

    $("#divTransSocial").show();

    switch ($("#socialSelect").val()) {
        case 'none':
			$("#divTransSocial").hide();
			$("#divTransEconomic").hide();
			$("#divTransEnviro").hide();
			$("#graingerGroupsType").hide();
            break;
        case 'pop2010':
            foodaccess.setVisible(true);
            foodaccess.set('title', 'POP2010');
            foodaccess.set('displayInLayerSwitcher', true);
            break;
        case 'ohu2010':
            foodaccess.setVisible(true);
            foodaccess.set('title', 'OHU2010');
            foodaccess.set('displayInLayerSwitcher', true);
            break;
        case 'povertyrat':
            foodaccess.setVisible(true);
            foodaccess.set('title', 'Poverty Rate');
            foodaccess.set('displayInLayerSwitcher', true);
            break;
        case 'tractkids':
            foodaccess.setVisible(true);
            foodaccess.set('title', 'Children (#s)');
            foodaccess.set('displayInLayerSwitcher', true);
            break;
        case 'tractsenio':
            foodaccess.setVisible(true);
            foodaccess.set('title', '65+ (#s)');
            foodaccess.set('displayInLayerSwitcher', true);
            break;
        case 'tractwhite':
            foodaccess.setVisible(true);
            foodaccess.set('title', 'Race: White (#s)');
            foodaccess.set('displayInLayerSwitcher', true);
            break;
        case 'tractblack':
            foodaccess.setVisible(true);
            foodaccess.set('title', 'Race: Black (#s)');
            foodaccess.set('displayInLayerSwitcher', true);
            break;
        case 'tractasian':
            foodaccess.setVisible(true);
            foodaccess.set('title', 'Race: Asian (#s)');
            foodaccess.set('displayInLayerSwitcher', true);
            break;
        case 'tracthispa':
            foodaccess.setVisible(true);
            foodaccess.set('title', 'Race: Latino (#s)');
            foodaccess.set('displayInLayerSwitcher', true);
            break;
        case 'households':
            households.setVisible(true);
            households.set('displayInLayerSwitcher', true);
            break;
        case 'avg_hh_size_renters':
            avg_hh_size_renters.setVisible(true);
            avg_hh_size_renters.set('displayInLayerSwitcher', true);
            break;
        case 'avg_hh_size_owners':
            avg_hh_size_owners.setVisible(true);
            avg_hh_size_owners.set('displayInLayerSwitcher', true);
            break;
        case 'avg_hh_size':
            avg_hh_size.setVisible(true);
            avg_hh_size.set('displayInLayerSwitcher', true);
            break;
        case 'gross_hh_density':
            gross_hh_density.setVisible(true);
            gross_hh_density.set('displayInLayerSwitcher', true);
            break;
        case 'job_density_simple':
            job_density_simple.setVisible(true);
            job_density_simple.set('displayInLayerSwitcher', true);
            break;
        case 'retail_density_simple':
            retail_density_simple.setVisible(true);
            retail_density_simple.set('displayInLayerSwitcher', true);
            break;
    }
}

function addEconomicData() {
	$('#urbanruralSelect').selectpicker('val', 'none');
	$('#socialSelect').selectpicker('val', 'none');
	$('#businessActivitySelect').selectpicker('val', 'none');
	$('#graingerSelect').selectpicker('val', 'none');
	$('#banksActivitySelect').selectpicker('val', 'none');
	$('#residentsSelect').selectpicker('val', 'none');
	$('#enviroSelect').selectpicker('val', 'none');
	$('#urbanruralFoodAccessSelect').selectpicker('val', 'none');
	$('#graingerGroupsTypeSelect').selectpicker('val', 'none');
	$('#khSelect').selectpicker('val', 'none');
	$('#housingSelect').selectpicker('val', 'none');
	$('#solardataSelect').selectpicker('val', 'none');
	$('#biodiversitydataSelect').selectpicker('val', 'none');

	turnAllLayersOff();
    updateLook();

    $("#divTransEconomic").show();

    switch ($("#economicSelect").val()) {
        case 'none':
			$("#divTransSocial").hide();
			$("#divTransEconomic").hide();
			$("#divTransEnviro").hide();
			$("#graingerGroupsType").hide();
			break;
        case 'ffr':
            ffr.setVisible(true);
            ffr.set('displayInLayerSwitcher', true);
            break;

        case 'ffrchange':
            ffrchange.setVisible(true);
            ffrchange.set('displayInLayerSwitcher', true);
            break;

        case 'ffrpopu':
            ffrpopu.setVisible(true);
            ffrpopu.set('displayInLayerSwitcher', true);
            break;

        case 'ffrpopuchange':
            ffrpopuchange.setVisible(true);
            ffrpopuchange.set('displayInLayerSwitcher', true);
            break;
        case 'fsr':
            fsr.setVisible(true);
            fsr.set('displayInLayerSwitcher', true);
            break;

        case 'fsrchange':
            fsrchange.setVisible(true);
            fsrchange.set('displayInLayerSwitcher', true);
            break;

        case 'fsrpopu':
            fsrpopu.setVisible(true);
            fsrpopu.set('displayInLayerSwitcher', true);
            break;

        case 'fsrpopuchange':
            fsrpopuchange.setVisible(true);
            fsrpopuchange.set('displayInLayerSwitcher', true);
            break;

        case 'farmermarket':
            farmermarket.setVisible(true);
            farmermarket.set('displayInLayerSwitcher', true);
            break;

        case 'farmermarketchange':
            farmermarketchange.setVisible(true);
            farmermarketchange.set('displayInLayerSwitcher', true);
            break;

        case 'dsf':
            dsf.setVisible(true);
            dsf.set('displayInLayerSwitcher', true);
            break;

        case 'ngp':
            ngp.setVisible(true);
            ngp.set('displayInLayerSwitcher', true);
            break;

        case 'dsfchange':
            dsfchange.setVisible(true);
            dsfchange.set('displayInLayerSwitcher', true);
            break;
    }
}

function addBusinessActivityData() {
	$('#urbanruralSelect').selectpicker('val', 'none');
	$('#socialSelect').selectpicker('val', 'none');
	$('#economicSelect').selectpicker('val', 'none');
	$('#banksActivitySelect').selectpicker('val', 'none');
	$('#graingerSelect').selectpicker('val', 'none');
	$('#residentsSelect').selectpicker('val', 'none');
	$('#enviroSelect').selectpicker('val', 'none');
	$('#urbanruralFoodAccessSelect').selectpicker('val', 'none');
	$('#graingerGroupsTypeSelect').selectpicker('val', 'none');
	$('#khSelect').selectpicker('val', 'none');
	$('#housingSelect').selectpicker('val', 'none');
	$('#solardataSelect').selectpicker('val', 'none');
	$('#biodiversitydataSelect').selectpicker('val', 'none');

	turnAllLayersOff();
    updateLook();

    $("#divTransEconomic").show();

    switch ($("#businessActivitySelect").val()) {
        case 'none':
			$("#divTransSocial").hide();
			$("#divTransEconomic").hide();
			$("#divTransEnviro").hide();
			$("#graingerGroupsType").hide();
            break;
        case 'cattleTop':
            cattletop.setVisible(true);
            cattletop.set('displayInLayerSwitcher', true);
            break;
        case 'cattleNinty':
            cattle.setVisible(true);
            cattlemasked.setVisible(true);
            cattle.set('displayInLayerSwitcher', true);
            break;
        case 'ethanol':
            ethanol_production.setVisible(true);
            ethanol_production.set('displayInLayerSwitcher', true);
            break;
        case 'dataCenters':
            dataCenters.setVisible(true);
            dataCenters.set('displayInLayerSwitcher', true);
            break;
        case 'naicsap':
            naicsap.setVisible(true);
            naicsap.set('displayInLayerSwitcher', true);
            break;
        case 'naicsest':
            naicsest.setVisible(true);
            naicsest.set('displayInLayerSwitcher', true);
            break;
        case 'manufacturingAP':
            break;
        case 'manufacturingEST':
            break;
        case 'vacancy':
            break;
        default:
            break;
    }
}

function addGraingerData() {
	$('#urbanruralSelect').selectpicker('val', 'none');
	$('#socialSelect').selectpicker('val', 'none');
	$('#economicSelect').selectpicker('val', 'none');
	$('#banksActivitySelect').selectpicker('val', 'none');
	$('#businessActivitySelect').selectpicker('val', 'none');
	$('#residentsSelect').selectpicker('val', 'none');
	$('#enviroSelect').selectpicker('val', 'none');
	$('#urbanruralFoodAccessSelect').selectpicker('val', 'none');
	$('#graingerGroupsTypeSelect').selectpicker('val', 'none');
	$('#khSelect').selectpicker('val', 'none');
	$('#housingSelect').selectpicker('val', 'none');
	$('#solardataSelect').selectpicker('val', 'none');
	$('#biodiversitydataSelect').selectpicker('val', 'none');

	turnAllLayersOff();
	var col ='';

    $("#graingerGroupsType").show();

    switch ($("#graingerSelect").val()) {
        case 'none':
			$("#divTransSocial").hide();
			$("#divTransEconomic").hide();
			$("#divTransEnviro").hide();
			$("#graingerGroupsType").hide();
            break;
        case '--':
			col = '--';
            break;
        case '11':
			col = '11';
            break;
        case '21':
			col = '21';
            break;
        case '22':
			col = '22';
            break;
        case '23':
			col = '23';
            break;
        case '31-33':
			col = '31-33';
            break;
        case '42':
			col = '42';
            break;
        case '44-45':
			col = '44-45';
            break;
        case '48-49':
			col = '48-49';
            break;
        case '51':
			col = '51';
            break;
        case '52':
			col = '52';
            break;
        case '53':
			col = '53';
            break;
        case '54':
			col = '54';
            break;
        case '55':
			col = '55';
            break;
        case '56':
			col = '56';
            break;
        case '61':
			col = '61';
            break;
        case '62':
			col = '62';
            break;
        case '71':
			col = '71';
            break;
        case '72':
			col = '72';
            break;
        case '81':
			col = '81';
            break;
        default:
            break;
    }
	naicsgrainger.setVisible(true);
	if($("#graingerSelect").val() == "none")
		naicsgrainger.set('displayInLayerSwitcher', false);
	else
		naicsgrainger.set('displayInLayerSwitcher', true);
	
    naicsgrainger.getSource().updateParams({
        'SLD_Body': '<?xml version="1.0" encoding="ISO-8859-1"?><StyledLayerDescriptor version="1.0.0"  xsi:schemaLocation="http://www.opengis.net/sld http://schemas.opengis.net/sld/1.0.0/StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:msas_grainger</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + col + '</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#00b3b3</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>'
    });

    map.render();
}

function addGraingerGroupsType() {
	$('#urbanruralSelect').selectpicker('val', 'none');
	$('#socialSelect').selectpicker('val', 'none');
	$('#economicSelect').selectpicker('val', 'none');
	$('#banksActivitySelect').selectpicker('val', 'none');
	$('#residentsSelect').selectpicker('val', 'none');
	$('#enviroSelect').selectpicker('val', 'none');
	$('#urbanruralFoodAccessSelect').selectpicker('val', 'none');
	$('#khSelect').selectpicker('val', 'none');
	$('#housingSelect').selectpicker('val', 'none');
	$('#solardataSelect').selectpicker('val', 'none');
	$('#biodiversitydataSelect').selectpicker('val', 'none');

	turnAllLayersOff();
	var col = '', value = '';
	
    $("#divTransEconomic").show();


    if ($('#switchFramesSocial').prop('checked'))
        $("#divSelFramesSocial").show();
    else
        $("#divSelFramesSocial").hide();

    if ($('#switchFramesRefri').prop('checked'))
        $("#divSelFramesRefri").show();
    else
        $("#divSelFramesRefri").hide();

    if ($('#switchFramesEcono').prop('checked'))
        $("#divSelFramesEcono").show();
    else
        $("#divSelFramesEcono").hide();

    if ($('#switchFramesEnviro').prop('checked'))
        $("#divSelFramesEnviro").show();
    else
        $("#divSelFramesEnviro").hide();
	
	if ($("#switchFramesSocial").prop('checked') || $("#switchFramesRefri").prop('checked') || $('#switchFramesEcono').prop('checked') || $('#switchFramesEnviro').prop('checked')) {
        value = 'on';
    } else {
        value = 'off';
    }
	
    switch ($("#graingerGroupsTypeSelect").val()) {
        case 'none':
			$("#divTransSocial").hide();
			$("#divTransEconomic").hide();
			$("#divTransEnviro").hide();
			break;
        case 'annual_payroll':
			if ($("#cohortOptsEnviro").val() == "divergent" || $("#cohortOptsEcono").val() == "divergent" || $("#cohortOptsSocial").val() == "divergent" || $("#cohortOptsRefri").val() == "divergent") {
				checkAndUpdateLegendCohorts('divergent');
				if (value == "off") {
					sldNaicsGrainger = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:msas_grainger</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>100000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>100000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>200000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>200000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>500000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>500000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1200000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1200000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2000000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2000000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5000000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5000000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10000000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10000000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>350000000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
				} else if (value == "on") {
					sldNaicsGrainger = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:msas_grainger</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>100000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>100000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>200000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>200000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>500000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>500000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1200000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1200000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2000000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2000000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5000000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5000000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10000000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10000000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>350000000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
				}
			} else {
				checkAndUpdateLegendCohorts('standard');
				if (value == "off") {
					sldNaicsGrainger = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:msas_grainger</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>100000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>100000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>200000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>200000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>500000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>500000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1200000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1200000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2000000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2000000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5000000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5000000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10000000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10000000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>350000000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
				} else if (value == "on") {
					sldNaicsGrainger = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:msas_grainger</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>100000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>100000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>200000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>200000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>500000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>500000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1200000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1200000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2000000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2000000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5000000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5000000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10000000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10000000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>350000000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
				}
			}
			naicsgrainger.set('title', 'NAICS Grainger - Annual Payroll');
            break;
        case 'employment':
			if ($("#cohortOptsEnviro").val() == "divergent" || $("#cohortOptsEcono").val() == "divergent" || $("#cohortOptsSocial").val() == "divergent" || $("#cohortOptsRefri").val() == "divergent") {
				checkAndUpdateLegendCohorts('divergent');
				if (value == "off") {
					sldNaicsGrainger = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:msas_grainger</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>20000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>20000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>50000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>50000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>75000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>75000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>500000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>500000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4000000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
				} else if (value == "on") {
					sldNaicsGrainger = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:msas_grainger</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>20000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>20000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>50000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>50000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>75000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>75000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>500000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>500000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4000000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
				}
			} else {
				checkAndUpdateLegendCohorts('standard');
				if (value == "off") {
					sldNaicsGrainger = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:msas_grainger</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>20000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>20000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>50000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>50000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>75000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>75000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>500000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>500000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4000000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
				} else if (value == "on") {
					sldNaicsGrainger = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:msas_grainger</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>20000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>20000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>50000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>50000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>75000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>75000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>500000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>500000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4000000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
				}
			}
			naicsgrainger.set('title', 'NAICS Grainger - Employment');
            break;
        case 'num_establishments':
			if ($("#cohortOptsEnviro").val() == "divergent" || $("#cohortOptsEcono").val() == "divergent" || $("#cohortOptsSocial").val() == "divergent" || $("#cohortOptsRefri").val() == "divergent") {
				checkAndUpdateLegendCohorts('divergent');
				if (value == "off") {
					sldNaicsGrainger = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:msas_grainger</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>300</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>300</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>600</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>600</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>900</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>900</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1200</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1200</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1600</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1600</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>65000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
				} else if (value == "on") {
					sldNaicsGrainger = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:msas_grainger</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>300</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>300</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>600</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>600</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>900</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>900</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1200</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1200</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1600</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1600</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>65000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
				}
			} else {
				checkAndUpdateLegendCohorts('standard');
				if (value == "off") {
					sldNaicsGrainger = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:msas_grainger</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>300</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>300</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>600</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>600</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>900</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>900</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1200</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1200</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1600</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1600</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>65000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
				} else if (value == "on") {
					sldNaicsGrainger = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:msas_grainger</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>300</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>300</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>600</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>600</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>900</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>900</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1200</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1200</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1600</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1600</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><And><ogc:PropertyIsEqualTo><ogc:PropertyName>naics_code</ogc:PropertyName><ogc:Literal>' + $("#graingerSelect").val() + '</ogc:Literal></ogc:PropertyIsEqualTo><ogc:PropertyIsBetween><ogc:PropertyName>' + $("#graingerGroupsTypeSelect").val() + '</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>65000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></And></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
				}
			}
			naicsgrainger.set('title', 'NAICS Grainger - Number of Establishments');
            break;
        default:
            break;
    }
	
	naicsgrainger.setVisible(true);
    naicsgrainger.set('displayInLayerSwitcher', true);
    naicsgrainger.getSource().updateParams({
        'SLD_Body': sldNaicsGrainger
    });

    map.render();
}

function addBanksActivityData() {
	$('#urbanruralSelect').selectpicker('val', 'none');
	$('#socialSelect').selectpicker('val', 'none');
	$('#economicSelect').selectpicker('val', 'none');
	$('#businessActivitySelect').selectpicker('val', 'none');
	$('#graingerSelect').selectpicker('val', 'none');
	$('#residentsSelect').selectpicker('val', 'none');
	$('#enviroSelect').selectpicker('val', 'none');
	$('#urbanruralFoodAccessSelect').selectpicker('val', 'none');
	$('#graingerGroupsTypeSelect').selectpicker('val', 'none');
	$('#khSelect').selectpicker('val', 'none');
	$('#housingSelect').selectpicker('val', 'none');
	$('#solardataSelect').selectpicker('val', 'none');
	$('#biodiversitydataSelect').selectpicker('val', 'none');

	turnAllLayersOff();
    updateLook();

    $("#divTransEconomic").show();

    switch ($("#banksActivitySelect").val()) {
        case 'none':
			$("#divTransSocial").hide();
			$("#divTransEconomic").hide();
			$("#divTransEnviro").hide();
			$("#graingerGroupsType").hide();
			break;
        case 'bankzip2012':
            bankzip2012.setVisible(true);
			bankzip2012.set('displayInLayerSwitcher', true);
            break;
        case 'bankzip2016':
            bankzip2016.setVisible(true);
			bankzip2016.set('displayInLayerSwitcher', true);
            break;
        case 'bankzip2017':
            bankzip2017.setVisible(true);
			bankzip2017.set('displayInLayerSwitcher', true);
            break;
        case 'bankcountyDeposit2012':
            bankcountydep2012.setVisible(true);
			bankcountydep2012.set('displayInLayerSwitcher', true);
            break;
        case 'bankcountyDeposit2016':
            bankcountydep2016.setVisible(true);
			bankcountydep2016.set('displayInLayerSwitcher', true);
            break;
        case 'bankcountyDeposit2017':
            bankcountydep2017.setVisible(true);
			bankcountydep2017.set('displayInLayerSwitcher', true);
            break;
        case 'bankcountyAsset2012':
            bankcountyasset2012.setVisible(true);
			bankcountyasset2012.set('displayInLayerSwitcher', true);
            break;
        case 'bankcountyAsset2016':
            bankcountyasset2016.setVisible(true);
			bankcountyasset2016.set('displayInLayerSwitcher', true);
            break;
        case 'bankcountyAsset2017':
            bankcountyasset2017.setVisible(true);
			bankcountyasset2017.set('displayInLayerSwitcher', true);
            break;
		case 'bankcountydepchangeone':
			bankcountydepchangeone.setVisible(true);
			bankcountydepchangeone.set('displayInLayerSwitcher', true);
			break;
		case 'bankcountydepchangeoneper':
			bankcountydepchangeoneper.setVisible(true);
			bankcountydepchangeoneper.set('displayInLayerSwitcher', true);
            break;
		case 'bankcountydepchangefive':
			bankcountydepchangefive.setVisible(true);
			bankcountydepchangefive.set('displayInLayerSwitcher', true);
            break;
        case 'bankcountydepchangefiveper':
			bankcountydepchangefiveper.setVisible(true);
			bankcountydepchangefiveper.set('displayInLayerSwitcher', true);
            break;
        case 'bankcountyasschangeone':
			bankcountyasschangeone.setVisible(true);
			bankcountyasschangeone.set('displayInLayerSwitcher', true);
            break;
		case 'bankcountyasschangeoneper':
			bankcountyasschangeoneper.setVisible(true);
			bankcountyasschangeoneper.set('displayInLayerSwitcher', true);
            break;
		case 'bankcountyasschangefive':
			bankcountyasschangefive.setVisible(true);
			bankcountyasschangefive.set('displayInLayerSwitcher', true);
            break;
		case 'bankcountyasschangefiveper':
			bankcountyasschangefiveper.setVisible(true);
			bankcountyasschangefiveper.set('displayInLayerSwitcher', true);
            break;
        default:
            break;
    }
}

function addResidentsData() {
	$('#urbanruralSelect').selectpicker('val', 'none');
	$('#socialSelect').selectpicker('val', 'none');
	$('#economicSelect').selectpicker('val', 'none');
	$('#businessActivitySelect').selectpicker('val', 'none');
	$('#graingerSelect').selectpicker('val', 'none');
	$('#banksActivitySelect').selectpicker('val', 'none');
	$('#enviroSelect').selectpicker('val', 'none');
	$('#urbanruralFoodAccessSelect').selectpicker('val', 'none');
	$('#graingerGroupsTypeSelect').selectpicker('val', 'none');
	$('#khSelect').selectpicker('val', 'none');
	$('#housingSelect').selectpicker('val', 'none');
	$('#solardataSelect').selectpicker('val', 'none');
	$('#biodiversitydataSelect').selectpicker('val', 'none');

	turnAllLayersOff();
    updateLook();

    $("#divTransEconomic").show();

    switch ($("#residentsSelect").val()) {
        case 'none':
			$("#divTransSocial").hide();
			$("#divTransEconomic").hide();
			$("#divTransEnviro").hide();
			$("#graingerGroupsType").hide();
			break;
        case 'medianfami':
            foodaccess.setVisible(true);
			foodaccess.set('title', 'Median Family Income');
			foodaccess.set('displayInLayerSwitcher', true);
            break;
        case 'tractlowi':
            foodaccess.setVisible(true);
			foodaccess.set('title', 'Low Income (#s)');
			foodaccess.set('displayInLayerSwitcher', true);
            break;
        case 'tractsnap':
            foodaccess.setVisible(true);
			foodaccess.set('title', 'Households w/SNAP');
			foodaccess.set('displayInLayerSwitcher', true);
            break;
        case 'ptrr':
            ptrrWMSOS.setVisible(true);
			foodaccess.set('title', 'Price to Rent Ratio');
			ptrrWMSOS.set('displayInLayerSwitcher', true);
            break;
        case 'residentialvacancyrates':
            foodaccess.setVisible(true);
			foodaccess.set('title', 'Residential Vacancy Rates');
			foodaccess.set('displayInLayerSwitcher', true);
            break;
    }
}

function addMainNAICS(){
    updateLook();

    switch ($("#naicsMainSelect").val()) {
        case 'none':
			$("#naicsMainDiv").hide();
			$("#divTransFood").hide();
			naics.setVisible(false);
			naics.set('displayInLayerSwitcher', false);
			break;
        case 'cropsProduction':
			$("#naicsMainDiv").show();
            break;
	}
}

function addNAICS() {
	updateLook();

    $("#divTransFood").show();
    $("#naicsMainDiv").show();

    switch ($("#naicsSelect").val()) {
        case 'none':
			// $("#naicsMainDiv").hide();
			$("#divTransFood").hide();
			naics.setVisible(false);
			naics.set('displayInLayerSwitcher', false);
			break;
        case 'establishments2018':	
			naics.set('title', 'Establishments (2018)');
			naics.setVisible(true);
			naics.set('displayInLayerSwitcher', true);
            break;
        case 'establishmentsoneyear':
			naics.set('title', 'Establishments (1-Year Change; #)');
			naics.setVisible(true);
			naics.set('displayInLayerSwitcher', true);
            break;
        case 'establishmentsoneyearper':
			naics.set('title', 'Establishments (1-Year % Change)');
			naics.setVisible(true);
			naics.set('displayInLayerSwitcher', true);
            break;
        case 'establishmentslocation':
			naics.set('title', 'Establishments (Location Quot.)');
			naics.setVisible(true);
			naics.set('displayInLayerSwitcher', true);
            break;
        case 'wagespayroll':
			naics.set('title', 'Wages (payroll; $)');
			naics.setVisible(true);
			naics.set('displayInLayerSwitcher', true);
            break;
        case 'totalwagesoneyearper':
			naics.set('title', 'Total Wages (1-Year % Change)');
			naics.setVisible(true);
			naics.set('displayInLayerSwitcher', true);
            break;
        case 'avgannualpay':
			naics.set('title', 'Average Annual Pay');
			naics.setVisible(true);
			naics.set('displayInLayerSwitcher', true);
            break;
        case 'avgannualpayoneyearper':
			naics.set('title', 'Average Annual Pay (1 Year % Change)');
			naics.setVisible(true);
			naics.set('displayInLayerSwitcher', true);
            break;
        case 'avgweeklypay':
			naics.set('title', 'Average Weekly Pay');
			naics.setVisible(true);
			naics.set('displayInLayerSwitcher', true);
            break;
        case 'avgwagesoneyearper':
			naics.set('title', 'Avg. Wages (1 Year % Change)');
			naics.setVisible(true);
			naics.set('displayInLayerSwitcher', true);
            break;
        case 'annualpaylocation':
			naics.set('title', 'Annual Pay (Location Quotient)');
			naics.setVisible(true);
			naics.set('displayInLayerSwitcher', true);
            break;
        case 'employees2018':
			naics.set('title', 'Employees (2018)');
			naics.setVisible(true);
			naics.set('displayInLayerSwitcher', true);
            break;
        case 'employeesoneyear':
			naics.set('title', 'Employees  (1-Year Change; #)');
			naics.setVisible(true);
			naics.set('displayInLayerSwitcher', true);
            break;
        case 'employee':
			naics.set('title', 'Employee (1-Year % Change)');
			naics.setVisible(true);
			naics.set('displayInLayerSwitcher', true);
            break;
    }
}

function addKHData() {
    $('#urbanruralSelect').selectpicker('val', 'none');
    $('#socialSelect').selectpicker('val', 'none');
    $('#economicSelect').selectpicker('val', 'none');
    $('#businessActivitySelect').selectpicker('val', 'none');
    $('#graingerSelect').selectpicker('val', 'none');
    $('#banksActivitySelect').selectpicker('val', 'none');
    $('#residentsSelect').selectpicker('val', 'none');
    $('#urbanruralFoodAccessSelect').selectpicker('val', 'none');
    $('#graingerGroupsTypeSelect').selectpicker('val', 'none');
	$('#enviroSelect').selectpicker('val', 'none');
	$('#solardataSelect').selectpicker('val', 'none');
	$('#biodiversitydataSelect').selectpicker('val', 'none');
    turnAllLayersOff();

    updateLook();

    $("#divTransEconomic").show();

    switch ($("#khSelect").val()) {
        case 'none':
            $("#divTransSocial").hide();
            $("#divTransEconomic").hide();
            $("#divTransEnviro").hide();
            break;
        case 'emipc':
            emipc.setVisible(true);
			emipc.set('displayInLayerSwitcher', true);
            break;
        case 'emipcstate':
            emipcstate.setVisible(true);
			emipcstate.set('displayInLayerSwitcher', true);
            break;
        case 'emitl':
            emitl.setVisible(true);
			emitl.set('displayInLayerSwitcher', true);
			break;
        case 'emitlstate':
            emitlstate.setVisible(true);
			emitlstate.set('displayInLayerSwitcher', true);
            break;
        case 'fdipc':
            fdipc.setVisible(true);
			fdipc.set('displayInLayerSwitcher', true);
            break;
        case 'fdipcstate':
            fdipcstate.setVisible(true);
			fdipcstate.set('displayInLayerSwitcher', true);
            break;
        case 'ftpc':
            ftpc.setVisible(true);
			ftpc.set('displayInLayerSwitcher', true);
            break;
        case 'ftpcstate':
            ftpcstate.setVisible(true);
			ftpcstate.set('displayInLayerSwitcher', true);
            break;
        case 'ihpc':
            ihpc.setVisible(true);
			ihpc.set('displayInLayerSwitcher', true);
            break;
        case 'ihpcstate':
            ihpcstate.setVisible(true);
			ihpcstate.set('displayInLayerSwitcher', true);
            break;
        case 'ihtl':
            ihtl.setVisible(true);
			ihtl.set('displayInLayerSwitcher', true);
            break;
        case 'ihtlstate':
            ihtlstate.setVisible(true);
			ihtlstate.set('displayInLayerSwitcher', true);
            break;
        case 'mtpc':
            mtpc.setVisible(true);
			mtpc.set('displayInLayerSwitcher', true);
            break;
        case 'mtpcstate':
            mtpcstate.setVisible(true);
			mtpcstate.set('displayInLayerSwitcher', true);
            break;
        case 'mttl':
            mttl.setVisible(true);
			mttl.set('displayInLayerSwitcher', true);
            break;
        case 'mttlstate':
            mttlstate.setVisible(true);
			mttlstate.set('displayInLayerSwitcher', true);
            break;
        case 'ctxstate':
            ctxstate.setVisible(true);
			ctxstate.set('displayInLayerSwitcher', true);
            break;
        case 'emx':
            emx.setVisible(true);
			emx.set('displayInLayerSwitcher', true);
            break;
        case 'emxstate':
            emxstate.setVisible(true);
			emxstate.set('displayInLayerSwitcher', true);
            break;
        case 'fdx':
            fdx.setVisible(true);
			fdx.set('displayInLayerSwitcher', true);
            break;
        case 'fdxstate':
            fdxstate.setVisible(true);
			fdxstate.set('displayInLayerSwitcher', true);
            break;
        case 'mhbx':
            mhbx.setVisible(true);
			mhbx.set('displayInLayerSwitcher', true);
            break;
        case 'mhbxstate':
            mhbxstate.setVisible(true);
			mhbxstate.set('displayInLayerSwitcher', true);
            break;
        case 'mtx':
            mtx.setVisible(true);
			mtx.set('displayInLayerSwitcher', true);
            break;
        case 'mtxstate':
            mtxstate.setVisible(true);
			mtxstate.set('displayInLayerSwitcher', true);
            break;
        case 'tlx':
            tlx.setVisible(true);
			tlx.set('displayInLayerSwitcher', true);
            break;
        case 'tlxstate':
            tlxstate.setVisible(true);
			tlxstate.set('displayInLayerSwitcher', true);
            break;
        case 'wdx':
            wdx.setVisible(true);
			wdx.set('displayInLayerSwitcher', true);
            break;
        case "wdxstate":
            wdxstate.setVisible(true);
            wdxstate.set('displayInLayerSwitcher', true);
            break;
        case 'potbellyfranchise':
            potbellyfranchise.setVisible(true);
			potbellyfranchise.set('displayInLayerSwitcher', true);
            break;
        default:
            break;
    }
}

function addHousingData() {
    $('#urbanruralSelect').selectpicker('val', 'none');
    $('#socialSelect').selectpicker('val', 'none');
    $('#economicSelect').selectpicker('val', 'none');
    $('#businessActivitySelect').selectpicker('val', 'none');
    $('#graingerSelect').selectpicker('val', 'none');
    $('#banksActivitySelect').selectpicker('val', 'none');
    $('#residentsSelect').selectpicker('val', 'none');
    $('#urbanruralFoodAccessSelect').selectpicker('val', 'none');
    $('#graingerGroupsTypeSelect').selectpicker('val', 'none');
	$('#enviroSelect').selectpicker('val', 'none');
	$('#solardataSelect').selectpicker('val', 'none');
	$('#biodiversitydataSelect').selectpicker('val', 'none');
	$('#khSelect').selectpicker('val', 'none');
    turnAllLayersOff();

    updateLook();

    $("#divTransEconomic").show();

    switch ($("#housingSelect").val()) {
        case 'none':
            $("#divTransSocial").hide();
            $("#divTransEconomic").hide();
            $("#divTransEnviro").hide();
            break;
        case 'owner_occupied_hu':
            owner_occupied_hu.setVisible(true);
			owner_occupied_hu.set('displayInLayerSwitcher', true);
            break;
        case 'renter_occupied_hu':
            renter_occupied_hu.setVisible(true);
			renter_occupied_hu.set('displayInLayerSwitcher', true);
            break;
        case 'pct_renters':
            pct_renters.setVisible(true);
			pct_renters.set('displayInLayerSwitcher', true);
			break;
        case 'pct_renter_occupied_hu':
            pct_renter_occupied_hu.setVisible(true);
			pct_renter_occupied_hu.set('displayInLayerSwitcher', true);
            break;
        case 'pct_hu_1_detached':
            pct_hu_1_detached.setVisible(true);
			pct_hu_1_detached.set('displayInLayerSwitcher', true);
            break;
    }
}

function addEmploymentData() {
    try {
        $("#popup-closer").click();
    } catch (ex) {}

	employment.setVisible(false);
	
    employment.set('displayInLayerSwitcher', false);
	
	updateLookEcono();

    $("#divTransEconomicTwo").show();
    $("#divEmploymentSelectStates").hide();

    switch ($("#employmentSelect").val()) {
        case 'none':
            $("#divTransEconomicTwo").hide();
			$("#divEmploymentSelectStates").hide();
            break;
        case 'C000':
			$("#divEmploymentSelectStates").show();
            break;
        case 'CD04':
			$("#divEmploymentSelectStates").show();
            break;
        case 'labor_force':
			unemployment.set('title', 'Labor Force');
			unemployment.setVisible(true);
			unemployment.set('displayInLayerSwitcher', true);
            break;
        case 'unemployed':
			unemployment.set('title', 'Un-Employed');
			unemployment.setVisible(true);
			unemployment.set('displayInLayerSwitcher', true);
            break;
        case 'unemployment_perc':
			unemployment.set('title', 'Un-Employment Percentage');
			unemployment.setVisible(true);
			unemployment.set('displayInLayerSwitcher', true);
            break;
    }
}

function addEmploymentDataStates() {
    var result = '';
    var string = '';
    var len = 0;
    try {
        len = $("#employmentSelectStates").val().length;
    } catch (ex) {

		employment.setVisible(false);
		
		employment.set('displayInLayerSwitcher', false);
		
		updateLookEcono();
        return;
    }
    for (i = 0; i < len; i++) {
        result = $("#employmentSelectStates").val()[i].split(',');
        string += "statefp10='" + result + "' OR ";
    }
    if (string == "") {
        string = null;
    } else {
        string = string.substring(0, string.length - 4);
    }
    employment.getSource().updateParams({
        'LAYERS': 'Farmer:employment',
        'cql_filter': string
        // 'SLD_Body': '<?xml version="1.0" encoding="UTF-8"?>
    });
	updateLookEcono();

    switch ($("#employmentSelect").val()) {
        case 'C000':
			employment.set('title', 'Jobs (Total)');
			employment.setVisible(true);
			employment.set('displayInLayerSwitcher', true);
            break;
        case 'CD04':
			employment.set('title', 'Jobs (Bachelor Degree+)');
			employment.setVisible(true);
			employment.set('displayInLayerSwitcher', true);
            break;
    }
}

function addDieselData() {
    try {
        $("#popup-closer").click();
    } catch (ex) {}

	dieseltaxrates.setVisible(false);
	
    dieseltaxrates.set('displayInLayerSwitcher', false);
	
	updateLookEcono();

    $("#divTransEconomicTwo").show();

    switch ($("#dieselSelect").val()) {
        case 'none':
            // $("#divTransSocialTwo").hide();
            $("#divTransEconomicTwo").hide();
            // $("#divTransEnviroTwo").hide();
            break;
        case '2013':
            dieseltaxrates.setVisible(true);
            dieseltaxrates.set('title', '2013 Diesel Motor Fuel Tax Rates');
            dieseltaxrates.set('displayInLayerSwitcher', true);
            break;
        case '2017':
            dieseltaxrates.setVisible(true);
            dieseltaxrates.set('title', '2017 Diesel Motor Fuel Tax Rates');
            dieseltaxrates.set('displayInLayerSwitcher', true);
            break;
        case '2018':
            dieseltaxrates.setVisible(true);
            dieseltaxrates.set('title', '2018 Diesel Motor Fuel Tax Rates');
            dieseltaxrates.set('displayInLayerSwitcher', true);
			break;
        case 'oneyear':
            dieseltaxrates.setVisible(true);
            dieseltaxrates.set('title', '1 Year Diesel Motor Fuel Change ($)');
            dieseltaxrates.set('displayInLayerSwitcher', true);
            break;
        case 'oneyearper':
            dieseltaxrates.setVisible(true);
            dieseltaxrates.set('title', '1 Year Diesel Motor Fuel Change (%)');
            dieseltaxrates.set('displayInLayerSwitcher', true);
            break;
        case 'fiveyear':
            dieseltaxrates.setVisible(true);
            dieseltaxrates.set('title', '5 Year Diesel Motor Fuel Change ($)');
            dieseltaxrates.set('displayInLayerSwitcher', true);
            break;
        case 'fiveyearper':
            dieseltaxrates.setVisible(true);
            dieseltaxrates.set('title', '5 Year Diesel Motor Fuel Change (%)');
            dieseltaxrates.set('displayInLayerSwitcher', true);
            break;
    }
}

function addDAData() {
    try {
        $("#popup-closer").click();
    } catch (ex) {}

	updateLookEcono();

    $("#divTransEconomicTwo").hide();
	opportunityzones.setVisible(false);
	opportunityzones.set('displayInLayerSwitcher', false);
	
    switch ($("#daSelect").val()) {
		case 'opportunityzones':    
			$("#divTransEconomicTwo").show();
			opportunityzones.setVisible(true);
			opportunityzones.set('displayInLayerSwitcher', true);
		break;
    }
}

function addEnviroData() {
    $('#urbanruralSelect').selectpicker('val', 'none');
    $('#socialSelect').selectpicker('val', 'none');
    $('#economicSelect').selectpicker('val', 'none');
    $('#businessActivitySelect').selectpicker('val', 'none');
    $('#graingerSelect').selectpicker('val', 'none');
    $('#banksActivitySelect').selectpicker('val', 'none');
    $('#residentsSelect').selectpicker('val', 'none');
    $('#urbanruralFoodAccessSelect').selectpicker('val', 'none');
    $('#graingerGroupsTypeSelect').selectpicker('val', 'none');
	$('#khSelect').selectpicker('val', 'none');
	$('#housingSelect').selectpicker('val', 'none');
	$('#solardataSelect').selectpicker('val', 'none');
	$('#biodiversitydataSelect').selectpicker('val', 'none');
    turnAllLayersOff();

    updateLook();

    $("#divTransEnviro").show();

    switch ($("#enviroSelect").val()) {
        case 'none':
            $("#divTransSocial").hide();
            $("#divTransEconomic").hide();
            $("#divTransEnviro").hide();
            break;
        case 'aquifer':
			$("#aquifersType").show();
            aquifer.setVisible(true);
			aquifer.set('displayInLayerSwitcher', true);
			
			$('#cohortOptsEnviro').prop('disabled', true);
			$('#cohortOptsEnviro').selectpicker('refresh');
			$("#enviroCohortsOpts").prop( "disabled", true );
			$("#enviroCohortsOpts").hide();
			$("#framesEnviro").hide();
			
			$("#flipEnviroCohorts").html("Pattern");
			break;
        case 'majorsoilresource':
            majorsoilresource.setVisible(true);
			majorsoilresource.set('displayInLayerSwitcher', true);
			break;
        case 'alluvialandglacial':
            alluvialandglacial.setVisible(true);
			alluvialandglacial.set('displayInLayerSwitcher', true);
			break;
        case 'eqi':
            eqi.setVisible(true);
			eqi.set('displayInLayerSwitcher', true);
            break;
    }
}

function filterAquifers(){
	$("#aquiferLegend").remove();
    var len = 0;
    try {
        len = $("#aquifersTypeSelect").val().length;
    } catch (ex) {}
	if(len > 0)
	{
		var result = '';
		for (i = 0; i < $("#aquifersTypeSelect").val().length; i++) {
			result += "number='" + $("#aquifersTypeSelect").val()[i] + "' or ";
		}
		result = result.substring(0, result.length - 3);
		
		aquifer.getSource().updateParams({
			'LAYERS': 'Farmer:aquifer',
			'cql_filter': result
		});
        legend = '<div id="aquiferLegend"><table><tr><td><a id="aquiferImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="aquifer" onchange="handleLegend($(this));" checked/></td><td>Principal Aquifers</td><td>&nbsp;</td></tr></table><table id="tableInsideTable">';
        for (i = 0; i < $("#aquifersTypeSelect").val().length; i++) {
            if ($("#aquifersTypeSelect").val()[i] == "1")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#bec5dc;"></div></td><td>Basin and Range Basin-Fill</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "2")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#8fbcd9;"></div></td><td>Rio Grande</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "3")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#46a5c3;"></div></td><td>Pacific Northwest Basin-Fill</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "4")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#2883b5;"></div></td><td>Columbia Plateau Basin-Fill</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "5")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#b1d8ea;"></div></td><td>California Coastal Basin</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "6")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#cee4de;"></div></td><td>Snake River Plain Basin-Fill</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "7")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#88a7b2;"></div></td><td>Puget Sound</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "8")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#7ba5cb;"></div></td><td>Willamette Lowland Basin-Fill</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "9")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#559fbd;"></div></td><td>Northern Rocky Mountains Intermontane Basins</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "10")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#aed5d9;"></div></td><td>Central Valley</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "11")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#b5c1da;"></div></td><td>High Plains</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "12")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#71bfde;"></div></td><td>Pecos River Basin Alluvial</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "13")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#99afc4;"></div></td><td>Mississippi River Valley Alluvial</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "14")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#bfd6e2;"></div></td><td>Seymour</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "15")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#bed0e3;"></div></td><td>Surficial</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "18")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#fae65c;"></div></td><td>Coastal Lowlands</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "19")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#fae65c;"></div></td><td>Texas Coastal Uplands</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "20")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#fae65c;"></div></td><td>Mississippi Embayment</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "21")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#fae65c;"></div></td><td>Southeastern Coastal Plain</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "22")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#fae65c;"></div></td><td>Northern Atlantic Coastal Plain</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "23")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#dbe7c2;"></div></td><td>Colorado Plateaus</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "24")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#859564;"></div></td><td>Denver Basin</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "25")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#aed3c1;"></div></td><td>Lower Cretaceous</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "26")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#7cbdaa;"></div></td><td>Rush Springs</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "27")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#93c6aa;"></div></td><td>Central Oklahoma</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "28")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#7db978;"></div></td><td>Ada-Vamoosa</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "29")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#2ea389;"></div></td><td>Early Mesozoic basin</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "30")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#97be40;"></div></td><td>New York Sandstone</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "31")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#b1c49d;"></div></td><td>Pennsylvanian</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "32")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#2fa047;"></div></td><td>Marshall</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "33")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#d0dc88;"></div></td><td>Cambrian-Ordovician</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "34")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#b3af58;"></div></td><td>Jacobsville</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "35")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#c3d99c;"></div></td><td>Lower Tertiary</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "36")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#38aa98;"></div></td><td>Upper Cretaceous</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "37")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#afca5f;"></div></td><td>Upper Tertiary</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "38")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#c599b3;"></div></td><td>Edwards-Trinity</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "39")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#d58aa6;"></div></td><td>Valley and Ridge Carbonate-Rock</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "40")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#b75e8d;"></div></td><td>Mississippian</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "41")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#876a9c;"></div></td><td>Paleozoic</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "42")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#c0766c;"></div></td><td>Basin and Range Carbonate-Rock</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "43")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#af7d5a;"></div></td><td>Roswell Basin</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "44")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#c9a491;"></div></td><td>Ozark Plateaus</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "45")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#cc8f78;"></div></td><td>Blaine</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "46")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#cf6e57;"></div></td><td>Arbuckle-Simpson</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "47")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#d48750;"></div></td><td>Ordovician</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "48")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#e7af76;"></div></td><td>Upper Carbonate</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "49")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#d0ab8c;"></div></td><td>Floridan</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "50")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#e1a76c;"></div></td><td>Biscayne</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "51")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#c6a881;"></div></td><td>New York and New England Carbonate-Rock</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "52")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#d1763d;"></div></td><td>Piedmont and Blue Ridge Carbonate-Rock</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "53")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#ac6e45;"></div></td><td>Castle Hayne</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "54")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#e55f4b;"></div></td><td>Southern Nevada Volcanic-Rock</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "57")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#e97263;"></div></td><td>Pacific Northwest Basaltic-Rock</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "58")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#f4bd9b;"></div></td><td>Snake River Plain Basaltic-Rock</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "59")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#e13255;"></div></td><td>Columbia Plateau Basaltic-Rock</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "60")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#e13255;"></div></td><td>Columbia Plateau Basaltic-Rock</td></tr>';
            if ($("#aquifersTypeSelect").val()[i] == "62")
                legend += '<tr><td>&nbsp;</td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#faf0d4;"></div></td><td>Piedmont and Blue Ridge Crystalline-Rock</td></tr>';
        }
        legend += '</table></div>';
        addLegendContent(legend, "Aquifer", "legendData");
	}
	else{
		aquifer.getSource().updateParams({
			'LAYERS': 'Farmer:aquifer',
			'cql_filter': "number='100'"
		});
	}
}

function addSolarData() {
    $('#urbanruralSelect').selectpicker('val', 'none');
    $('#socialSelect').selectpicker('val', 'none');
    $('#economicSelect').selectpicker('val', 'none');
    $('#businessActivitySelect').selectpicker('val', 'none');
    $('#graingerSelect').selectpicker('val', 'none');
    $('#banksActivitySelect').selectpicker('val', 'none');
    $('#residentsSelect').selectpicker('val', 'none');
    $('#urbanruralFoodAccessSelect').selectpicker('val', 'none');
    $('#graingerGroupsTypeSelect').selectpicker('val', 'none');
	$('#khSelect').selectpicker('val', 'none');
	$('#housingSelect').selectpicker('val', 'none');
	$('#enviroSelect').selectpicker('val', 'none');
	$('#biodiversitydataSelect').selectpicker('val', 'none');
    turnAllLayersOff();

    updateLook();

    $("#divTransEnviro").show();

    switch ($("#solardataSelect").val()) {
        case 'none':
            $("#divTransSocial").hide();
            $("#divTransEconomic").hide();
            $("#divTransEnviro").hide();
            break;
        case 'dni':
            dni.setVisible(true);
			dni.set('displayInLayerSwitcher', true);
			parseAndPivot("solarcsv/dni.csv");
            break;
        case 'ghi':
            ghi.setVisible(true);
			ghi.set('displayInLayerSwitcher', true);
			parseAndPivot("solarcsv/ghi.csv");
            break;
        case 'lalit':
            lalit.setVisible(true);
			lalit.set('displayInLayerSwitcher', true);
			parseAndPivot("solarcsv/lalit.csv");
			break;
        case 'phm':
            phm.setVisible(true);
			phm.set('displayInLayerSwitcher', true);
			parseAndPivot("solarcsv/phm.csv");
            break;
        case 'phmzip':
            phmzip.setVisible(true);
			phmzip.set('displayInLayerSwitcher', true);
			parseAndPivot("solarcsv/phm.csv");
            break;
    }
}

function parseAndPivot(f) {
	$("#output").empty();
	var renderers = $.extend(
        $.pivotUtilities.renderers,
        $.pivotUtilities.plotly_renderers,
        $.pivotUtilities.d3_renderers
		// $.pivotUtilities.export_renderers
	);
    Papa.parse(f, {
		download: true,
		skipEmptyLines: true,
		error: function(e){ alert(e) },
		complete: function(parsed){
			$("#output").pivotUI(parsed.data, { renderers: renderers }, true);
		}
	});
}

function addBiodiversityData() {
    $('#urbanruralSelect').selectpicker('val', 'none');
    $('#socialSelect').selectpicker('val', 'none');
    $('#economicSelect').selectpicker('val', 'none');
    $('#businessActivitySelect').selectpicker('val', 'none');
    $('#graingerSelect').selectpicker('val', 'none');
    $('#banksActivitySelect').selectpicker('val', 'none');
    $('#residentsSelect').selectpicker('val', 'none');
    $('#urbanruralFoodAccessSelect').selectpicker('val', 'none');
    $('#graingerGroupsTypeSelect').selectpicker('val', 'none');
	$('#khSelect').selectpicker('val', 'none');
	$('#housingSelect').selectpicker('val', 'none');
	$('#enviroSelect').selectpicker('val', 'none');
	$('#solardataSelect').selectpicker('val', 'none');
    turnAllLayersOff();

    updateLook();

    $("#divTransEnviro").show();

    switch ($("#biodiversitydataSelect").val()) {
        case 'none':
            $("#divTransSocial").hide();
            $("#divTransEconomic").hide();
            $("#divTransEnviro").hide();
            break;
        case 'birds':
            birds.setVisible(true);
			birds.set('displayInLayerSwitcher', true);
            break;
        case 'fish':
            fish.setVisible(true);
			fish.set('displayInLayerSwitcher', true);
            break;
        case 'mammals':
            mammals.setVisible(true);
			mammals.set('displayInLayerSwitcher', true);
            break;
        case 'reptiles':
            reptiles.setVisible(true);
			reptiles.set('displayInLayerSwitcher', true);
			break;
        case 'trees':
            trees.setVisible(true);
			trees.set('displayInLayerSwitcher', true);
            break;
    }
}

function addPermitsData() {
    try {
        $("#popup-closer").click();
    } catch (ex) {}

	housingconditions.setVisible(false);
	
    housingconditions.set('displayInLayerSwitcher', false);
	
    if ($('#switchFramesPermits').prop('checked'))
	{
        changeFramesPermits('on');
    } else {
        changeFramesPermits('off');
    }

    $("#divTransPermits").show();

    switch ($("#permitsSelect").val()) {
        case 'none':
            $("#divTransPermits").hide();
            break;
        case 'singlefamily':
            housingconditions.setVisible(true);
            housingconditions.set('title', 'Single Family Units');
            housingconditions.set('displayInLayerSwitcher', true);
            break;
        case 'multifamily':
            housingconditions.setVisible(true);
            housingconditions.set('title', 'Multi-Family Units');
            housingconditions.set('displayInLayerSwitcher', true);
            break;
        case 'totalunits':
            housingconditions.setVisible(true);
            housingconditions.set('title', 'Total Units');
            housingconditions.set('displayInLayerSwitcher', true);
            break;
    }
}

function changeFramesPermits(value) {
    if ($('#switchFramesPermits').prop('checked'))
        $("#divSelFramesPermits").show();
    else
        $("#divSelFramesPermits").hide();

    if ($("#cohortOptsPermits").val() == "divergent") {
        checkAndUpdateLegendCohortsPermits('divergent');
        if (value == "off") {
            sldHousingSingle = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:housingconditions</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>singlefamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>singlefamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>singlefamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>singlefamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>singlefamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>50</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>singlefamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>50</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>100</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>singlefamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>100</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>400</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>singlefamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>400</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>singlefamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>17000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>singlefamily</ogc:PropertyName><ogc:Literal>100000</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#C3C3C3</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldHousingMulti = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:housingconditions</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>multifamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>multifamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>multifamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>multifamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>multifamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>multifamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>50</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>multifamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>50</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>300</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>multifamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>300</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>multifamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>multifamily</ogc:PropertyName><ogc:Literal>100000</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#C3C3C3</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldHousingTotal = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:housingconditions</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalunits</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalunits</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalunits</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>40</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalunits</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>40</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>75</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalunits</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>75</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>100</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalunits</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>100</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>250</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalunits</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>250</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalunits</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalunits</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>23000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>totalunits</ogc:PropertyName><ogc:Literal>100000</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#C3C3C3</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
		} else if (value == "on") {
            sldHousingSingle = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:housingconditions</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>singlefamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>singlefamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>singlefamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>singlefamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>singlefamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>50</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>singlefamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>50</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>100</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>singlefamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>100</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>400</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>singlefamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>400</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>singlefamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>17000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>singlefamily</ogc:PropertyName><ogc:Literal>100000</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#C3C3C3</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldHousingMulti = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:housingconditions</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>multifamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>multifamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>multifamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>multifamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>multifamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>multifamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>50</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>multifamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>50</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>300</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>multifamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>300</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>multifamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>multifamily</ogc:PropertyName><ogc:Literal>100000</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#C3C3C3</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldHousingTotal = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:housingconditions</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalunits</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalunits</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalunits</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>40</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalunits</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>40</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>75</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalunits</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>75</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>100</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalunits</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>100</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>250</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalunits</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>250</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalunits</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalunits</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>23000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>totalunits</ogc:PropertyName><ogc:Literal>100000</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#C3C3C3</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
		}
    } else {
        checkAndUpdateLegendCohortsPermits('standard');
        if (value == "off") {
            sldHousingSingle = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:housingconditions</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>singlefamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>singlefamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>singlefamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>singlefamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>singlefamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>50</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>singlefamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>50</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>100</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>singlefamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>100</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>400</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>singlefamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>400</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>singlefamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>17000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>singlefamily</ogc:PropertyName><ogc:Literal>100000</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#C3C3C3</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldHousingMulti = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:housingconditions</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>multifamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>multifamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>multifamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>multifamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>multifamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>multifamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>50</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>multifamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>50</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>300</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>multifamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>300</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>multifamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>multifamily</ogc:PropertyName><ogc:Literal>100000</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#C3C3C3</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldHousingTotal = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:housingconditions</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalunits</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalunits</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalunits</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>40</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalunits</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>40</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>75</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalunits</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>75</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>100</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalunits</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>100</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>250</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalunits</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>250</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalunits</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalunits</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>23000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>totalunits</ogc:PropertyName><ogc:Literal>100000</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#C3C3C3</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
		} else if (value == "on") {
            sldHousingSingle = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:housingconditions</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>singlefamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>singlefamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>singlefamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>singlefamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>singlefamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>50</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>singlefamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>50</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>100</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>singlefamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>100</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>400</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>singlefamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>400</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>singlefamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>17000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>singlefamily</ogc:PropertyName><ogc:Literal>100000</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#C3C3C3</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldHousingMulti = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:housingconditions</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>multifamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>multifamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>multifamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>multifamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>multifamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>multifamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>50</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>multifamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>50</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>300</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>multifamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>300</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>multifamily</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>multifamily</ogc:PropertyName><ogc:Literal>100000</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#C3C3C3</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldHousingTotal = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:housingconditions</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalunits</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalunits</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalunits</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>40</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalunits</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>40</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>75</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalunits</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>75</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>100</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalunits</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>100</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>250</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalunits</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>250</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalunits</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalunits</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>23000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>totalunits</ogc:PropertyName><ogc:Literal>100000</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#C3C3C3</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
		}
    }
	
    switch ($("#permitsSelect").val()) {
        case 'singlefamily':
            housingconditions.getSource().updateParams({
                'SLD_Body': sldHousingSingle
            });
            break;
        case 'multifamily':
            housingconditions.getSource().updateParams({
                'SLD_Body': sldHousingMulti
            });
            break;
        case 'totalunits':
            housingconditions.getSource().updateParams({
                'SLD_Body': sldHousingTotal
            });
            break;
    }

    map.render();
}

function changeFramesFood(value) {
    if ($('#switchFramesFood').prop('checked'))
        $("#divSelFramesFood").show();
    else
        $("#divSelFramesFood").hide();

    if ($("#cohortOptsEnviro").val() == "divergent" || $("#cohortOptsEcono").val() == "divergent" || $("#cohortOptsSocial").val() == "divergent" || $("#cohortOptsRefri").val() == "divergent" || $("#cohortOptsMuap").val() == "divergent") {
        checkAndUpdateLegendCohorts('divergent');
        if (value == "off") {
			sldNaicsOne = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishments2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishments2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishments2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>6</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishments2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>6</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>8</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishments2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>8</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishments2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>12</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishments2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>12</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>16</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishments2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>16</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishments2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1005</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
			            
			sldNaicsTwo = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-50</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>30</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
			            
			sldNaicsThree = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-100</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>100</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>100</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>200</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
			
			sldNaicsFour = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentslocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentslocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.75</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentslocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.75</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentslocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentslocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentslocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentslocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentslocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>20</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentslocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>20</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>107</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
			
			sldNaicsFive = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>wagespayroll</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>300000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>wagespayroll</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>300000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>750000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>wagespayroll</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>750000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1250000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>wagespayroll</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1250000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2000000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>wagespayroll</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2000000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3000000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>wagespayroll</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3000000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5000000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>wagespayroll</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5000000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>9000000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>wagespayroll</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>9000000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>20000000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>wagespayroll</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>20000000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>750000000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
			
			sldNaicsSix = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-50000000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-250000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-250000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-50000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-50000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>20000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>20000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>100000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>100000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>200000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>200000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>500000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>500000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>55000000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';			
			            
			sldNaicsSeven = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>20000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>20000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>30000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>30000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>40000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>40000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>50000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>50000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>60000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>60000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>90000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
			            
			sldNaicsEight = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpayoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-95</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpayoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-2.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpayoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-2.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpayoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpayoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpayoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpayoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpayoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>12</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpayoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>12</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>90</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';			
			            
			sldNaicsNine = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgweeklypay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>200</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgweeklypay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>200</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>400</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgweeklypay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>400</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>475</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgweeklypay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>475</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>525</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgweeklypay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>525</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>600</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgweeklypay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>600</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>650</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgweeklypay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>650</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>750</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgweeklypay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>750</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>850</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgweeklypay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>850</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1700</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
			
			sldNaicsTen = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-95</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-7.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-7.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-2.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-2.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';			
			            
			sldNaicsEleven = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>annualpaylocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.35</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>annualpaylocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.35</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.8</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>annualpaylocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.8</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>annualpaylocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>annualpaylocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>annualpaylocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>annualpaylocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>annualpaylocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>annualpaylocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
			
			sldNaicsTwelve = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employees2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employees2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>45</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employees2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>45</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>65</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employees2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>65</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>100</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employees2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>100</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>150</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employees2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>150</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>250</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employees2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>250</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employees2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employees2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>20000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
			
			sldNaicsThirteen = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employeesoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-1500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-50</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employeesoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-50</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employeesoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employeesoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employeesoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employeesoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employeesoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employeesoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employeesoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1010</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
			
			sldNaicsFourteen = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employee</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-70</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employee</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-2.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employee</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-2.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employee</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employee</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employee</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employee</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>12</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employee</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>12</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employee</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>250</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
		} else if (value == "on") {
			sldNaicsOne = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishments2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishments2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishments2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>6</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishments2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>6</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>8</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishments2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>8</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishments2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>12</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishments2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>12</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>16</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishments2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>16</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishments2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1005</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
			            
			sldNaicsTwo = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-50</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>30</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
			            
			sldNaicsThree = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-100</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>100</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>100</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>200</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
			
			sldNaicsFour = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentslocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentslocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.75</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentslocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.75</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentslocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentslocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentslocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentslocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentslocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>20</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentslocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>20</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>107</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
			
			sldNaicsFive = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>wagespayroll</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>300000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>wagespayroll</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>300000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>750000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>wagespayroll</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>750000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1250000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>wagespayroll</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1250000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2000000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>wagespayroll</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2000000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3000000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>wagespayroll</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3000000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5000000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>wagespayroll</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5000000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>9000000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>wagespayroll</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>9000000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>20000000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>wagespayroll</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>20000000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>750000000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
			
			sldNaicsSix = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-50000000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-250000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-250000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-50000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-50000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>20000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>20000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>100000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>100000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>200000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>200000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>500000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>500000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>55000000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';			
			            
			sldNaicsSeven = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>20000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>20000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>30000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>30000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>40000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>40000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>50000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>50000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>60000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>60000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>90000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
			            
			sldNaicsEight = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpayoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-95</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpayoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-2.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpayoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-2.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpayoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpayoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpayoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpayoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpayoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>12</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpayoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>12</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>90</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';			
			            
			sldNaicsNine = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgweeklypay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>200</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgweeklypay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>200</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>400</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgweeklypay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>400</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>475</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgweeklypay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>475</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>525</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgweeklypay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>525</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>600</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgweeklypay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>600</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>650</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgweeklypay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>650</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>750</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgweeklypay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>750</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>850</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgweeklypay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>850</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1700</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
			
			sldNaicsTen = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-95</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-7.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-7.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-2.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-2.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';			
			            
			sldNaicsEleven = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>annualpaylocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.35</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>annualpaylocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.35</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.8</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>annualpaylocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.8</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>annualpaylocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>annualpaylocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>annualpaylocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>annualpaylocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>annualpaylocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>annualpaylocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
			
			sldNaicsTwelve = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employees2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employees2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>45</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employees2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>45</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>65</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employees2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>65</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>100</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employees2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>100</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>150</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employees2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>150</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>250</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employees2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>250</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employees2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employees2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>20000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
			
			sldNaicsThirteen = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employeesoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-1500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-50</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employeesoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-50</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employeesoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employeesoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employeesoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employeesoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employeesoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employeesoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employeesoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1010</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
			
			sldNaicsFourteen = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employee</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-70</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employee</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-2.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employee</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-2.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employee</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employee</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employee</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employee</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>12</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employee</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>12</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employee</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>250</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
		}
    } else {
        checkAndUpdateLegendCohorts('standard');
        if (value == "off") {
			sldNaicsOne = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishments2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishments2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishments2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>6</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishments2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>6</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>8</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishments2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>8</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishments2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>12</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishments2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>12</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>16</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishments2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>16</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishments2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1005</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
			            
			sldNaicsTwo = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-50</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>30</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
			            
			sldNaicsThree = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-100</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>100</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>100</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>200</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
			
			sldNaicsFour = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentslocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentslocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.75</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentslocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.75</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentslocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentslocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentslocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentslocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentslocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>20</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentslocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>20</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>107</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
			
			sldNaicsFive = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>wagespayroll</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>300000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>wagespayroll</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>300000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>750000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>wagespayroll</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>750000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1250000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>wagespayroll</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1250000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2000000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>wagespayroll</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2000000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3000000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>wagespayroll</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3000000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5000000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>wagespayroll</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5000000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>9000000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>wagespayroll</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>9000000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>20000000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>wagespayroll</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>20000000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>750000000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
			
			sldNaicsSix = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-50000000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-250000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-250000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-50000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-50000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>20000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>20000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>100000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>100000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>200000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>200000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>500000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>500000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>55000000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';			
			            
			sldNaicsSeven = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>20000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>20000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>30000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>30000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>40000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>40000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>50000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>50000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>60000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>60000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>90000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
			            
			sldNaicsEight = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpayoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-95</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpayoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-2.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpayoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-2.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpayoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpayoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpayoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpayoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpayoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>12</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpayoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>12</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>90</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';			
			            
			sldNaicsNine = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgweeklypay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>200</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgweeklypay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>200</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>400</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgweeklypay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>400</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>475</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgweeklypay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>475</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>525</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgweeklypay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>525</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>600</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgweeklypay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>600</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>650</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgweeklypay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>650</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>750</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgweeklypay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>750</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>850</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgweeklypay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>850</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1700</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
			
			sldNaicsTen = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-95</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-7.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-7.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-2.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-2.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';			
			            
			sldNaicsEleven = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>annualpaylocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.35</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>annualpaylocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.35</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.8</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>annualpaylocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.8</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>annualpaylocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>annualpaylocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>annualpaylocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>annualpaylocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>annualpaylocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>annualpaylocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
			
			sldNaicsTwelve = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employees2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employees2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>45</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employees2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>45</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>65</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employees2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>65</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>100</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employees2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>100</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>150</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employees2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>150</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>250</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employees2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>250</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employees2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employees2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>20000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
			
			sldNaicsThirteen = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employeesoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-1500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-50</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employeesoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-50</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employeesoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employeesoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employeesoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employeesoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employeesoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employeesoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employeesoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1010</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
			
			sldNaicsFourteen = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employee</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-70</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employee</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-2.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employee</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-2.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employee</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employee</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employee</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employee</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>12</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employee</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>12</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employee</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>250</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
		} else if (value == "on") {
			sldNaicsOne = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishments2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishments2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishments2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>6</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishments2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>6</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>8</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishments2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>8</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishments2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>12</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishments2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>12</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>16</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishments2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>16</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishments2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1005</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
			            
			sldNaicsTwo = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-50</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>30</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
			            
			sldNaicsThree = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-100</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>100</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentsoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>100</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>200</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
			
			sldNaicsFour = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentslocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentslocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.75</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentslocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.75</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentslocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentslocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentslocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentslocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentslocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>20</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>establishmentslocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>20</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>107</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
			
			sldNaicsFive = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>wagespayroll</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>300000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>wagespayroll</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>300000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>750000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>wagespayroll</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>750000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1250000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>wagespayroll</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1250000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2000000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>wagespayroll</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2000000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3000000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>wagespayroll</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3000000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5000000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>wagespayroll</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5000000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>9000000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>wagespayroll</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>9000000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>20000000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>wagespayroll</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>20000000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>750000000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
			
			sldNaicsSix = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-50000000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-250000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-250000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-50000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-50000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>20000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>20000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>100000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>100000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>200000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>200000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>500000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>totalwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>500000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>55000000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';			
			            
			sldNaicsSeven = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>20000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>20000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>30000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>30000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>40000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>40000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>50000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>50000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>60000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>60000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>90000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
			            
			sldNaicsEight = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpayoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-95</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpayoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-2.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpayoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-2.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpayoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpayoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpayoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpayoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpayoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>12</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgannualpayoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>12</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>90</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';			
			            
			sldNaicsNine = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgweeklypay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>200</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgweeklypay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>200</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>400</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgweeklypay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>400</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>475</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgweeklypay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>475</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>525</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgweeklypay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>525</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>600</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgweeklypay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>600</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>650</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgweeklypay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>650</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>750</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgweeklypay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>750</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>850</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgweeklypay</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>850</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1700</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
			
			sldNaicsTen = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-95</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-7.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-7.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-2.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-2.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avgwagesoneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';			
			            
			sldNaicsEleven = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>annualpaylocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.35</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>annualpaylocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.35</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.8</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>annualpaylocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.8</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>annualpaylocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>annualpaylocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>annualpaylocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>annualpaylocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>annualpaylocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>annualpaylocation</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
			
			sldNaicsTwelve = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employees2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employees2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>45</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employees2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>45</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>65</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employees2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>65</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>100</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employees2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>100</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>150</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employees2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>150</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>250</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employees2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>250</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employees2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employees2018</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>20000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
			
			sldNaicsThirteen = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employeesoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-1500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-50</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employeesoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-50</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employeesoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employeesoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employeesoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employeesoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employeesoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employeesoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employeesoneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1010</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
			
			sldNaicsFourteen = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:naics</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employee</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-70</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employee</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-2.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employee</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-2.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employee</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employee</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employee</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employee</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>12</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employee</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>12</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>employee</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>250</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
		}
    }
	
	switch ($("#naicsSelect").val()) {
        case 'establishments2018':
			naics.getSource().updateParams({
				'SLD_Body': sldNaicsOne
			});
            break;
        case 'establishmentsoneyear':
			naics.getSource().updateParams({
				'SLD_Body': sldNaicsTwo
			});
            break;
        case 'establishmentsoneyearper':
			naics.getSource().updateParams({
				'SLD_Body': sldNaicsThree
			});
            break;
        case 'establishmentslocation':
			naics.getSource().updateParams({
				'SLD_Body': sldNaicsFour
			});
            break;
        case 'wagespayroll':
			naics.getSource().updateParams({
				'SLD_Body': sldNaicsFive
			});
            break;
        case 'totalwagesoneyearper':
			naics.getSource().updateParams({
				'SLD_Body': sldNaicsSix
			});
            break;
        case 'avgannualpay':
			naics.getSource().updateParams({
				'SLD_Body': sldNaicsSeven
			});
            break;
        case 'avgannualpayoneyearper':
			naics.getSource().updateParams({
				'SLD_Body': sldNaicsEight
			});
            break;
        case 'avgweeklypay':
			naics.getSource().updateParams({
				'SLD_Body': sldNaicsNine
			});
            break;
        case 'avgwagesoneyearper':
			naics.getSource().updateParams({
				'SLD_Body': sldNaicsTen
			});
            break;
        case 'annualpaylocation':
			naics.getSource().updateParams({
				'SLD_Body': sldNaicsEleven
			});
            break;
        case 'employees2018':
			naics.getSource().updateParams({
				'SLD_Body': sldNaicsTwelve
			});
            break;
        case 'employeesoneyear':
			naics.getSource().updateParams({
				'SLD_Body': sldNaicsThirteen
			});
            break;
        case 'employee':
			naics.getSource().updateParams({
				'SLD_Body': sldNaicsFourteen
			});
            break;
    }

    map.render();
}

function addLandDeterData() {
    try {
        $("#popup-closer").click();
    } catch (ex) {}

	wdpa.setVisible(false);
	
    wdpa.set('displayInLayerSwitcher', false);
	
	updateLookEnviro();

    $("#divTransEnviroTwo").show();

    switch ($("#landDeterSelect").val()) {
        case 'none':
            $("#divTransEnviroTwo").hide();
            break;
        case 'wdpa':
            wdpa.setVisible(true);
			wdpa.set('displayInLayerSwitcher', true);
            break;
    }
}

function addClimateDeterData() {
    try {
        $("#popup-closer").click();
    } catch (ex) {}

	drought.setVisible(false);
	droughtmonitor.setVisible(false);
	
    drought.set('displayInLayerSwitcher', false);
    droughtmonitor.set('displayInLayerSwitcher', false);
	
	updateLookEnviro();

    $("#divTransEnviroTwo").show();
	$("#droughtTimeSeries").hide();
	$("#droughtOutlook").hide();

    switch ($("#climateDeterSelect").val()) {
        case 'none':
            $("#divTransEnviroTwo").hide();
            break;
        case 'drought':
			loadDroughtOutlookShp();
			$("#droughtOutlook").show();
            drought.setVisible(true);
			drought.set('displayInLayerSwitcher', true);
            break;
        case 'droughtmonitor':
			loadDroughtShp();
			$("#droughtTimeSeries").show();
            droughtmonitor.setVisible(true);
			droughtmonitor.set('displayInLayerSwitcher', true);
            break;
    }
}

function activateDroughtOutlookTS(val){
	if(val == "active"){
		// drought.setVisible(false);
		// drought.set('displayInLayerSwitcher', false);
		$("#droughtOutlook").hide();
		try{loadDroughtOutlookShp();}catch(e){}
	}
	else{
		$("#divDroughtOutlookDate").show();
		var enableDays;
		
		$.ajax({
			type: "GET",
			url: "listallDO.php",
			cache: false,
			success: function(data)
			{
				enableDays = data;
			}
		});

		function formatDate(d) {
			var day = String(d.getDate())
			if (day.length == 1)
				day = '0' + day
			var month = String((d.getMonth()+1))
			if (month.length == 1)
				month = '0' + month
			return day + "-" + month + "-" + d.getFullYear()
		}
		  $("#divDroughtOutlookDate input").datepicker({
			orientation: "bottom auto",
			beforeShowDay: function(date){
				try{
					if (enableDays.indexOf(formatDate(date)) < 0)
						return {
							enabled: false,
							classes: 'disabled',
							tooltip: "You can't select this date"
						}
					else
						return {
							enabled: true,
							classes: 'enabled',
							tooltip: 'You can select this date'
						}
				}catch(e){}
			},
			format: "dd, mm, yyyy",
			templates: {
				leftArrow: '<i class="fa fa-long-arrow-left"></i>',
				rightArrow: '<i class="fa fa-long-arrow-right"></i>'
			},
			autoclose: true
		});
		
		$("#divDroughtOutlookDate input").datepicker().on('changeDate', function (ev) {
			sourceDroughtOutlook.clear();
			var selectedDate = $("#divDroughtOutlookDate input").val().split(',');
			loadshp({
				url: "Drought/Outlook/sdo_polygons_" + selectedDate[2].replace(" ","") + selectedDate[1].replace(" ","") + selectedDate[0].replace(" ","") + ".zip",
				EPSG: 4326,
				encoding: 'big5'	
			}, function(data) {
				sourceDroughtOutlook.addFeatures(parserDroughtOutlook.readFeatures(data));
			});
			drought.setSource(sourceDroughtOutlook);
			updateLookEnviro();
		});
	}
}

function activateDroughtTS(val){
	if(val == "active"){
		droughtmonitor.setVisible(false);
		droughtmonitor.set('displayInLayerSwitcher', false);
		$("#divDroughtDate").hide();
		try{loadDroughtShp();}catch(e){}
	}
	else{
		$("#divDroughtDate").show();
		var enableDays;
		
		$.ajax({
			type: "GET",
			url: "listallDM.php",
			cache: false,
			success: function(data)
			{
				enableDays = data;
			}
		});

		function formatDate(d) {
		  var day = String(d.getDate())
		  if (day.length == 1)
			day = '0' + day
		  var month = String((d.getMonth()+1))
		  if (month.length == 1)
			month = '0' + month
		  return day + "-" + month + "-" + d.getFullYear()
		}

		  $("#divDroughtDate input").datepicker({
			orientation: "bottom auto",
			beforeShowDay: function(date){
				try{
					if (enableDays.indexOf(formatDate(date)) < 0)
						return {
							enabled: false,
							classes: 'disabled',
							tooltip: "You can't select this date"
						}
					else
						return {
							enabled: true,
							classes: 'enabled',
							tooltip: 'You can select this date'
						}
				}catch(e){}
			},
			format: "dd, mm, yyyy",
			templates: {
				leftArrow: '<i class="fa fa-long-arrow-left"></i>',
				rightArrow: '<i class="fa fa-long-arrow-right"></i>'
			},
			autoclose: true
		});
		
		$("#divDroughtDate input").datepicker().on('changeDate', function (ev) {
			sourceDrought.clear();
			var selectedDate = $("#divDroughtDate input").val().split(',');
			loadshp({
				url: "Drought/Monitor/USDM_" + selectedDate[2].replace(" ","") + selectedDate[1].replace(" ","") + selectedDate[0].replace(" ","") + "_M.zip",
				EPSG: 4326,
				encoding: 'big5'	
			}, function(data) {console.log(data);
				sourceDrought.addFeatures(parserDrought.readFeatures(data));
			});
			droughtmonitor.setSource(sourceDrought);
			updateLookEnviro();
		});
	}
}

function addSolidbiomassData() {
    try {
        $("#popup-closer").click();
    } catch (ex) {}

	solidbiomass.setVisible(false);
	
    solidbiomass.set('displayInLayerSwitcher', false);
	
	updateLookEnviro();

    $("#divTransEnviroTwo").show();

    switch ($("#solidbiomassSelect").val()) {
        case 'none':
            $("#divTransEnviroTwo").hide();
            break;
        case 'crops':
            solidbiomass.setVisible(true);
			solidbiomass.set('displayInLayerSwitcher', true);
            break;
        case 'urbanwood':
            solidbiomass.setVisible(true);
			solidbiomass.set('displayInLayerSwitcher', true);
            break;
        case 'secmill':
            solidbiomass.setVisible(true);
			solidbiomass.set('displayInLayerSwitcher', true);
            break;
        case 'forest':
            solidbiomass.setVisible(true);
			solidbiomass.set('displayInLayerSwitcher', true);
			break;
        case 'primmill':
            solidbiomass.setVisible(true);
			solidbiomass.set('displayInLayerSwitcher', true);
            break;
        case 'total':
            solidbiomass.setVisible(true);
			solidbiomass.set('displayInLayerSwitcher', true);
            break;
    }
}

function addNoiseDeterData() {
	$("#aviationnoiseLegend").remove();
	$("#roadnoiseLegend").remove();
    try {
        $("#popup-closer").click();
    } catch (ex) {}

	AviationNoise.setVisible(false);	
    AviationNoise.set('displayInLayerSwitcher', false);
	RoadNoise.setVisible(false);	
    RoadNoise.set('displayInLayerSwitcher', false);
	
	// updateLookEnviro();

    $("#divTransNoise").show();

    switch ($("#noiseSelectDeter").val()) {
        case 'none':
            $("#divTransNoise").hide();
            break;
        case 'AviationNoise':
            AviationNoise.setVisible(true);
			AviationNoise.set('displayInLayerSwitcher', true);
			addLegendContent('<div id="aviationnoiseLegend"><table><tr><td><a id="aviationnoiseImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="aviationnoise" onchange="handleLegend($(this));" checked/></td><td>Aviation Noise</td><td>&nbsp;</td></tr></table><table id="tableInsideTable"><tr><td><input type="checkbox" id="90-95" onchange="handlecohort(\'aviationnoise\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#0000ff;"></div></td><td>90.01-95</td></tr><tr><td><input type="checkbox" id="85-90" onchange="handlecohort(\'aviationnoise\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#8200e1;"></div></td><td>85.01-90</td></tr><tr><td><input type="checkbox" id="80-85" onchange="handlecohort(\'aviationnoise\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#c200bf;"></div></td><td>80.01-85</td></tr><tr><td><input type="checkbox" id="75-80" onchange="handlecohort(\'aviationnoise\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#f1009c;"></div></td><td>75.01-80</td></tr><tr><td><input type="checkbox" id="70-75" onchange="handlecohort(\'aviationnoise\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#ff007c;"></div></td><td>70.01-75</td></tr><tr><td><input type="checkbox" id="65-70" onchange="handlecohort(\'aviationnoise\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#ff0061;"></div></td><td>65.01-70</td></tr><tr><td><input type="checkbox" id="60-65" onchange="handlecohort(\'aviationnoise\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#ff0049;"></div></td><td>60.01-65</td></tr><tr><td><input type="checkbox" id="55-60" onchange="handlecohort(\'aviationnoise\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#ff3030;"></div></td><td>55.01-60</td></tr><tr><td><input type="checkbox" id="50-55" onchange="handlecohort(\'aviationnoise\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#ff6019;"></div></td><td>50.01-55</td></tr><tr><td><input type="checkbox" id="45-50" onchange="handlecohort(\'aviationnoise\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#ff8400;"></div></td><td>45.01-50</td></tr><tr><td><input type="checkbox" id="40-45" onchange="handlecohort(\'aviationnoise\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#ffa600;"></div></td><td>40.01-45</td></tr><tr><td><input type="checkbox" id="35-40" onchange="handlecohort(\'aviationnoise\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#ffc900;"></div></td><td>35-40</td></tr></table></div>', true, "legendConditions");
			AviationNoise.getSource().updateParams({
				'SLD_Body': sldAviationNoise
			});
            break;
        case 'RoadNoise':
            RoadNoise.setVisible(true);
			RoadNoise.set('displayInLayerSwitcher', true);
			addLegendContent('<div id="roadnoiseLegend"><table><tr><td><a id="roadnoiseImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="roadnoise" onchange="handleLegend($(this));" checked/></td><td>Road Noise</td><td>&nbsp;</td></tr></table><table id="tableInsideTable"><tr><td><input type="checkbox" id="90-95" onchange="handlecohort(\'roadnoise\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#0000ff;"></div></td><td>90.01-95</td></tr><tr><td><input type="checkbox" id="85-90" onchange="handlecohort(\'roadnoise\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#8200e1;"></div></td><td>85.01-90</td></tr><tr><td><input type="checkbox" id="80-85" onchange="handlecohort(\'roadnoise\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#c200bf;"></div></td><td>80.01-85</td></tr><tr><td><input type="checkbox" id="75-80" onchange="handlecohort(\'roadnoise\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#f1009c;"></div></td><td>75.01-80</td></tr><tr><td><input type="checkbox" id="70-75" onchange="handlecohort(\'roadnoise\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#ff007c;"></div></td><td>70.01-75</td></tr><tr><td><input type="checkbox" id="65-70" onchange="handlecohort(\'roadnoise\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#ff0061;"></div></td><td>65.01-70</td></tr><tr><td><input type="checkbox" id="60-65" onchange="handlecohort(\'roadnoise\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#ff0049;"></div></td><td>60.01-65</td></tr><tr><td><input type="checkbox" id="55-60" onchange="handlecohort(\'roadnoise\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#ff3030;"></div></td><td>55.01-60</td></tr><tr><td><input type="checkbox" id="50-55" onchange="handlecohort(\'roadnoise\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#ff6019;"></div></td><td>50.01-55</td></tr><tr><td><input type="checkbox" id="45-50" onchange="handlecohort(\'roadnoise\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#ff8400;"></div></td><td>45.01-50</td></tr><tr><td><input type="checkbox" id="40-45" onchange="handlecohort(\'roadnoise\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#ffa600;"></div></td><td>40.01-45</td></tr><tr><td><input type="checkbox" id="35-40" onchange="handlecohort(\'roadnoise\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#ffc900;"></div></td><td>35-40</td></tr></table></div>', true, "legendConditions");
			RoadNoise.getSource().updateParams({
				'SLD_Body': sldRoadNoise
			});
            break;
    }
}

function addCropsData() {	
	updateLookEcono();
    try {
        $("#popup-closer").click();
    } catch (ex) {}

	// crops_production.setVisible(false);	
    // crops_production.set('displayInLayerSwitcher', false);
	
	hydroponic_growers_county.setVisible(false);
    hydroponic_growers_county.set('displayInLayerSwitcher', false);

    $("#crop_productionType").hide();
    // $("#divTransEconomicTwo").hide();

    switch ($("#cropsSelect").val()) {
        case 'none':
            $("#divTransEconomicTwo").hide();
			$("#crop_productionType").hide();
            break;
        case 'crop_production':
			$("#crop_productionType").show();
            break;
        case 'hydroponic_growers_county':
            $("#divTransEconomicTwo").show();
            hydroponic_growers_county.setVisible(true);
            hydroponic_growers_county.set('displayInLayerSwitcher', true);
            break;
    }
}

function addHousingDeterData() {	
	updateLookEcono();
    try {
        $("#popup-closer").click();
    } catch (ex) {}
	avg_h_cost.setVisible(false);
	avg_h_cost.set('displayInLayerSwitcher', false);
	median_gross_rent.setVisible(false);
	median_gross_rent.set('displayInLayerSwitcher', false);
	median_smoc_mortgage.setVisible(false);
	median_smoc_mortgage.set('displayInLayerSwitcher', false);

    switch ($("#housingSelectDeter").val()) {
        case 'none':
            $("#divTransEconomicTwo").hide();
            break;
        case 'median_smoc_mortgage':
			$("#divTransEconomicTwo").show();
			median_smoc_mortgage.setVisible(true);
			median_smoc_mortgage.set('displayInLayerSwitcher', true);
			break;
        case 'median_gross_rent':
			$("#divTransEconomicTwo").show();
			median_gross_rent.setVisible(true);
			median_gross_rent.set('displayInLayerSwitcher', true);
            break;
        case 'avg_h_cost':
			$("#divTransEconomicTwo").show();
			avg_h_cost.setVisible(true);
			avg_h_cost.set('displayInLayerSwitcher', true);
            break;
    }
}

function addDemographicsDeterData() {	
	updateLookEcono();
    try {
        $("#popup-closer").click();
    } catch (ex) {}
	
	commuters_per_hh.setVisible(false);
	commuters_per_hh.set('displayInLayerSwitcher', false);
	median_hh_income.setVisible(false);
	median_hh_income.set('displayInLayerSwitcher', false);

    switch ($("#demographicsSelectDeter").val()) {
        case 'none':
            $("#divTransEconomicTwo").hide();
            break;
        case 'commuters_per_hh':
			$("#divTransEconomicTwo").show();
			commuters_per_hh.setVisible(true);
			commuters_per_hh.set('displayInLayerSwitcher', true);
			break;
        case 'median_hh_income':
			$("#divTransEconomicTwo").show();
			median_hh_income.setVisible(true);
			median_hh_income.set('displayInLayerSwitcher', true);
            break;
    }
}

function addTransportDeterData() {	
	updateLookEcono();
    try {
        $("#popup-closer").click();
    } catch (ex) {}
	
	median_commute.setVisible(false);
	median_commute.set('displayInLayerSwitcher', false);

    switch ($("#transportSelectDeter").val()) {
        case 'none':
            $("#divTransEconomicTwo").hide();
            break;
        case 'median_commute':
			$("#divTransEconomicTwo").show();
			median_commute.setVisible(true);
			median_commute.set('displayInLayerSwitcher', true);
			break;
    }
}

function addAG() {	
    try {
        $("#popup-closer").click();
    } catch (ex) {}

	agsum.setVisible(false);
    agsum.set('displayInLayerSwitcher', false);
	agr17.setVisible(false);
    agr17.set('displayInLayerSwitcher', false);
	agr18.setVisible(false);
    agr18.set('displayInLayerSwitcher', false);

	updateLookEcono();

    switch ($("#agSelect").val()) {
        case 'none':		
			$("#divTransEconomicTwo").hide();
            break;
        case 'sum':
			$("#divTransEconomicTwo").show();
			agsum.setVisible(true);
			agsum.set('displayInLayerSwitcher', true);
			break;
        case 'r17':
			$("#divTransEconomicTwo").show();
			agr17.setVisible(true);
			agr17.set('displayInLayerSwitcher', true);
			break;
        case 'r18':
			$("#divTransEconomicTwo").show();
			agr18.setVisible(true);
			agr18.set('displayInLayerSwitcher', true);
			break;
    }
}

function addCropProductionType() {
	var col = '', value = '';
	
    var len = 0;
    try {
        len = $("#crop_productionTypeSelect").val().length;
    } catch (ex) {}
    if (len > 0) {
		$("#divEconomicThree").show();
        for (i = 0; i < len; i++) {
			if ($("#flipTextureEconomicThree").prop('checked')) {
				flipTextureEconoThree('on');
			} else {
				flipTextureEconoThree('off');
			}
		}
	}
}

function flipTextureEconoThree(value)
{
	$("#divEconomicThree").hide();
	crops_production.setVisible(false);
    crops_production.set('displayInLayerSwitcher', false);
    $("#crops_productionLegend").remove();
	sldCropsProduction = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:crops_production</Name><UserStyle><FeatureTypeStyle>';
    var len = 0;
    try {
        len = $("#crop_productionTypeSelect").val().length;
    } catch (ex) {}
	if(len > 0){
		$("#divEconomicThree").show();
		if (value == "off") {
			for (i = 0; i < len; i++) {
				switch ($("#crop_productionTypeSelect").val()[i]) {
					case 'field_forageable':
					case 'greenhouse':
					case 'grapes':
					case 'wine_grape':
					case 'nursery_starts_flowers_trees':
					case 'fruit_melons':
					case 'fruit_pome':
					case 'fruit_citrusfruits':
					case 'fruit_berries':
					case 'fruit_stone':
					case 'fruit_tropicalfruits':
					case 'nuts':
					case 'flower_vegetables':
					case 'fruit_vegetables':
					case 'seed_podvegetables':
					case 'leaf_vegetables':
					case 'stem_vegetables':
					case 'tuber_rootvegetables':
					case 'herbs_spices':
					case 'fungi':
					case 'other':
					case 'peppers':
					case 'tomatoes':
					case 'lettuce':
					case 'strawberries':
					case 'blueberries':
					case 'cherries':
					case 'apples':
					case 'watermelon':
						sldCropsProduction += '<Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>' + $("#crop_productionTypeSelect").val()[i] + '</ogc:PropertyName><ogc:Literal>1</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><GraphicFill><Graphic><ExternalGraphic><OnlineResource xlink:type="simple" xlink:href="http://52.38.47.239/geoserver/styles/Icons/pattern.png"/><Format>image/png</Format></ExternalGraphic></Graphic></GraphicFill></Fill></PolygonSymbolizer> </Rule>';
						break;
				}
			}
		} else if (value == "on") {
			for (i = 0; i < len; i++) {
				switch ($("#crop_productionTypeSelect").val()[i]) {
					case 'field_forageable':
					case 'greenhouse':
					case 'grapes':
					case 'wine_grape':
					case 'nursery_starts_flowers_trees':
					case 'fruit_melons':
					case 'fruit_pome':
					case 'fruit_citrusfruits':
					case 'fruit_berries':
					case 'fruit_stone':
					case 'fruit_tropicalfruits':
					case 'nuts':
					case 'flower_vegetables':
					case 'fruit_vegetables':
					case 'seed_podvegetables':
					case 'leaf_vegetables':
					case 'stem_vegetables':
					case 'tuber_rootvegetables':
					case 'herbs_spices':
					case 'fungi':
					case 'other':
					case 'peppers':
					case 'tomatoes':
					case 'lettuce':
					case 'strawberries':
					case 'blueberries':
					case 'cherries':
					case 'apples':
					case 'watermelon':
						sldCropsProduction += '<Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>' + $("#crop_productionTypeSelect").val()[i] + '</ogc:PropertyName><ogc:Literal>1</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule>';
						break;
				}
			}
		}
		sldCropsProduction += '</FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
		crops_production.getSource().updateParams({
			'SLD_Body': sldCropsProduction
		});

		map.render();

		crops_production.setVisible(true);
		crops_production.set('title', 'Crops Production by Zip');	
		crops_production.set('displayInLayerSwitcher', true);
		
		if ($("#flipTextureEconomicThree").prop('checked'))
			addLegendContent('<div id="crops_productionLegend"><table><tr><td><a id="crops_productionImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="crops_production" onchange="handleLegend($(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + ninthColor + ';"></div></td><td>Crops Production by Zip</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr></table></div>', true, "legendConditions");
		else
			addLegendContent('<div id="crops_productionLegend"><table><tr><td><a id="crops_productionImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="crops_production" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Legend/pattern.png" /></td><td>Crops Production by Zip</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr></table></div>', true, "legendConditions");
	}
}

function addUrbanRuralLowIncome() {
	updateLookEcono();

    $("#divTransEconomicTwo").show();

    switch ($("#urbanruralSelect").val()) {
        case 'none':
			$("#divTransEconomicTwo").hide();
			$("#primaryeconomictypeDiv").hide();
            primaryeconomictype.setVisible(false);
			primaryeconomictype.set('displayInLayerSwitcher', false);
            wmsUrbanRural.setVisible(false);
			wmsUrbanRural.set('displayInLayerSwitcher', false);
            noofstores.setVisible(false);
            noofstores.set('displayInLayerSwitcher', false);
            nooforganicgrowers.setVisible(false);
            nooforganicgrowers.set('displayInLayerSwitcher', false);
            noofestt.setVisible(false);
            noofestt.set('displayInLayerSwitcher', false);
            noofjobs.setVisible(false);
            noofjobs.set('displayInLayerSwitcher', false);
            percentjobs.setVisible(false);
            percentjobs.set('displayInLayerSwitcher', false);
            job_gravity.setVisible(false);
            job_gravity.set('displayInLayerSwitcher', false);
            retail_gravity.setVisible(false);
            retail_gravity.set('displayInLayerSwitcher', false);
			break;
        case 'urbanrural':
            wmsUrbanRural.setVisible(true);
			wmsUrbanRural.set('displayInLayerSwitcher', true);
            break;
        case 'economictype':
			$("#primaryeconomictypeDiv").show();
            break;
        case 'noofstores':
            noofstores.setVisible(true);
            noofstores.set('displayInLayerSwitcher', true);
            break;
        case 'nooforganicgrowers':
            nooforganicgrowers.setVisible(true);
            nooforganicgrowers.set('displayInLayerSwitcher', true);
            break;
        case 'noofestt':
            noofestt.setVisible(true);
            noofestt.set('displayInLayerSwitcher', true);
            break;
        case 'noofjobs':
            noofjobs.setVisible(true);
            noofjobs.set('displayInLayerSwitcher', true);
            break;
        case 'percentjobs':
            percentjobs.setVisible(true);
            percentjobs.set('displayInLayerSwitcher', true);
            break;
        case 'job_gravity':
            job_gravity.setVisible(true);
            job_gravity.set('displayInLayerSwitcher', true);
            break;
        case 'retail_gravity':
            retail_gravity.setVisible(true);
            retail_gravity.set('displayInLayerSwitcher', true);
            break;
    }
}

function addPrimaryEconomicType() {
	var col = '', value = '';
	
    switch ($("#primaryeconomictypeSelect").val()) {
        case 'none':
			break;
        case 'economic':	
			primaryeconomictype.set('title', 'All');
			primaryeconomictype.setVisible(true);
			primaryeconomictype.set('displayInLayerSwitcher', true);
            break;
        case 'farming_20':
			primaryeconomictype.set('title', 'Farming 2015');
			primaryeconomictype.setVisible(true);
			primaryeconomictype.set('displayInLayerSwitcher', true);
            break;
        case 'mining_201':
			primaryeconomictype.set('title', 'Mining 2015');
			primaryeconomictype.setVisible(true);
			primaryeconomictype.set('displayInLayerSwitcher', true);
            break;
        case 'manufactur':
			primaryeconomictype.set('title', 'Manufacturing 2015');
			primaryeconomictype.setVisible(true);
			primaryeconomictype.set('displayInLayerSwitcher', true);
            break;
        case 'government':
			primaryeconomictype.set('title', 'Government 2015');
			primaryeconomictype.setVisible(true);
			primaryeconomictype.set('displayInLayerSwitcher', true);
            break;
        case 'recreation':
			primaryeconomictype.set('title', 'Recreation 2015');
			primaryeconomictype.setVisible(true);
			primaryeconomictype.set('displayInLayerSwitcher', true);
            break;
        case 'nonspecial':
			primaryeconomictype.set('title', 'Diversified');
			primaryeconomictype.setVisible(true);
			primaryeconomictype.set('displayInLayerSwitcher', true);
            break;
    }
	
	updateLookEcono();
}

function addTapestry() {
	updateLookEcono();

    $("#divTransEconomicTwo").show();

    switch ($("#tapestrySelect").val()) {
        case 'none':
			$("#divTransEconomicTwo").hide();
			$("#tapestrytypeDiv").hide();
            tapestry.setVisible(false);
			tapestry.set('displayInLayerSwitcher', false);
			break;
        case 'tapestry':
			$("#tapestrytypeDiv").show();
            break;
    }
}

function addTapestryType() {
	var col = '', value = '';
	
    switch ($("#tapestrytypeSelect").val()) {
        case 'none':
			break;
        case 'urbancentera':	
			tapestry.set('title', 'Urban Center A');
			tapestry.setVisible(true);
			tapestry.set('displayInLayerSwitcher', true);
            break;
        case 'urbancenterb':
			tapestry.set('title', 'Urban Center B');
			tapestry.setVisible(true);
			tapestry.set('displayInLayerSwitcher', true);
            break;
        case 'metrocitiesa':
			tapestry.set('title', 'Metro Cities A');
			tapestry.setVisible(true);
			tapestry.set('displayInLayerSwitcher', true);
            break;
        case 'metrocitiesb':
			tapestry.set('title', 'Metro Cities B');
			tapestry.setVisible(true);
			tapestry.set('displayInLayerSwitcher', true);
            break;
        case 'urbanoutskirtsa':
			tapestry.set('title', 'Urban Outskirt A');
			tapestry.setVisible(true);
			tapestry.set('displayInLayerSwitcher', true);
            break;
        case 'urbanoutskirtsb':
			tapestry.set('title', 'Urban Outskirt B');
			tapestry.setVisible(true);
			tapestry.set('displayInLayerSwitcher', true);
            break;
        case 'suburbana':
			tapestry.set('title', 'Suburban A');
			tapestry.setVisible(true);
			tapestry.set('displayInLayerSwitcher', true);
            break;
        case 'suburbanb':
			tapestry.set('title', 'Suburban B');
			tapestry.setVisible(true);
			tapestry.set('displayInLayerSwitcher', true);
            break;
        case 'smalltowns':
			tapestry.set('title', 'Small Towns');
			tapestry.setVisible(true);
			tapestry.set('displayInLayerSwitcher', true);
            break;
        case 'rurala':
			tapestry.set('title', 'Rural A');
			tapestry.setVisible(true);
			tapestry.set('displayInLayerSwitcher', true);
            break;
        case 'ruralb':
			tapestry.set('title', 'Rural B');
			tapestry.setVisible(true);
			tapestry.set('displayInLayerSwitcher', true);
            break;
    }
	
	updateLookEcono();
}

function addUrbanRuralIncome() {
    try {
        $("#popup-closer").click();
    } catch (ex) {}

	primaryeconomictypetwo.setVisible(false);
	lowincomet.setVisible(false);
	la1and10.setVisible(false);
	latracts_h.setVisible(false);
	latracts20.setVisible(false);
	lilatracts.setVisible(false);
	
    primaryeconomictypetwo.set('displayInLayerSwitcher', false);
    lowincomet.set('displayInLayerSwitcher', false);
    la1and10.set('displayInLayerSwitcher', false);
    latracts_h.set('displayInLayerSwitcher', false);
    latracts20.set('displayInLayerSwitcher', false);
    lilatracts.set('displayInLayerSwitcher', false);

    $("#divTransSocialTwo").hide();
    
	switch ($("#urbanRuralIncomeSelect").val()) {
		case 'none':					
			primaryeconomictypetwo.setVisible(false);
			lowincomet.setVisible(false);
			la1and10.setVisible(false);
			latracts20.setVisible(false);
			latracts_h.setVisible(false);
			lilatracts.setVisible(false);
			
			primaryeconomictypetwo.set('displayInLayerSwitcher', false);
			lowincomet.set('displayInLayerSwitcher', false);
			la1and10.set('displayInLayerSwitcher', false);
			latracts_h.set('displayInLayerSwitcher', false);
			latracts20.set('displayInLayerSwitcher', false);
			lilatracts.set('displayInLayerSwitcher', false);
		break;
        case 'lowincomet':					
			lowincomet.setVisible(true);
			lowincomet.set('displayInLayerSwitcher', true);
			$("#divTransSocialTwo").show();
		break;

        case 'la1and10':
			la1and10.setVisible(true);
			la1and10.set('displayInLayerSwitcher', true);
			$("#divTransSocialTwo").show();
		break;

        case 'latracts_h':
			latracts_h.setVisible(true);
			latracts_h.set('displayInLayerSwitcher', true);
			$("#divTransSocialTwo").show();
        break;

        case 'latracts20':
			latracts20.setVisible(true);
			latracts20.set('displayInLayerSwitcher', true);
			$("#divTransSocialTwo").show();
        break;

        case 'lilatracts':
			lilatracts.setVisible(true);
			lilatracts.set('displayInLayerSwitcher', true);
			$("#divTransSocialTwo").show();
        break;

        case 'low_educat':
			primaryeconomictypetwo.set('title', 'Low Education 2015');
			primaryeconomictypetwo.setVisible(true);
			primaryeconomictypetwo.set('displayInLayerSwitcher', true);
			$("#divTransSocialTwo").show();
            break;
        case 'low_employ':
			primaryeconomictypetwo.set('title', 'Low Employment County 2008-2012');
			primaryeconomictypetwo.setVisible(true);
			primaryeconomictypetwo.set('displayInLayerSwitcher', true);
			$("#divTransSocialTwo").show();
            break;
        case 'pop_loss_2':
			primaryeconomictypetwo.set('title', 'Population Loss 2015');
			primaryeconomictypetwo.setVisible(true);
			primaryeconomictypetwo.set('displayInLayerSwitcher', true);
			$("#divTransSocialTwo").show();
            break;
        case 'retirement':
			primaryeconomictypetwo.set('title', 'Retirement Destination 2015');
			primaryeconomictypetwo.setVisible(true);
			primaryeconomictypetwo.set('displayInLayerSwitcher', true);
			$("#divTransSocialTwo").show();
            break;
        case 'persistent':
			primaryeconomictypetwo.set('title', 'Persistent Poverty 2013');
			primaryeconomictypetwo.setVisible(true);
			primaryeconomictypetwo.set('displayInLayerSwitcher', true);
			$("#divTransSocialTwo").show();
            break;
        case 'persisten2':
			primaryeconomictypetwo.set('title', 'Persistent Related Child Poverty 2013');
			primaryeconomictypetwo.setVisible(true);
			primaryeconomictypetwo.set('displayInLayerSwitcher', true);
			$("#divTransSocialTwo").show();
            break;

		default:
		break;
	}
    
	if ($("#flipTexture").prop('checked')) {
		flipTextureSocialTwo('on');
    } else {
		flipTextureSocialTwo('off');
    }
	
	updateLegendForPattern();
}

function flipTexture(value)
{
	if (value == "off") {
		switch ($("#buildingsSelect").val()) {
			case 'buildings':
				sldbuildings = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:buildings</Name><UserStyle><FeatureTypeStyle><Rule><MaxScaleDenominator>100000</MaxScaleDenominator><PolygonSymbolizer><Fill><GraphicFill><Graphic><ExternalGraphic><OnlineResource xlink:type="simple" xlink:href="http://52.38.47.239/geoserver/styles/Icons/pattern.png"/><Format>image/png</Format></ExternalGraphic></Graphic></GraphicFill></Fill></PolygonSymbolizer> </Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
				buildings.getSource().updateParams({
					'SLD_Body': sldbuildings
				});
			break;
		}
	} else if (value == "on") {
		switch ($("#buildingsSelect").val()) {
			case 'buildings':
				sldbuildings = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>default_polygon</Name><UserStyle><FeatureTypeStyle><Rule><MaxScaleDenominator>100000</MaxScaleDenominator><PolygonSymbolizer><Fill><CssParameter name="fill">#AAAAAA</CssParameter><CssParameter name="fill-opacity">0.8</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
				buildings.getSource().updateParams({
					'SLD_Body': sldbuildings
				});
			break;
		}
	}	

    map.render();
	
	updateLegendForPattern();
}

function flipTextureSocialTwo(value)
{
	if (value == "off") {		
		switch ($("#urbanRuralIncomeSelect").val()) {
			case 'lowincomet':
				sldlowincomet = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:foodaccess</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>lowincomet</ogc:PropertyName><ogc:Literal>1</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><GraphicFill><Graphic><ExternalGraphic><OnlineResource xlink:type="simple" xlink:href="http://52.38.47.239/geoserver/styles/Icons/pattern.png"/><Format>image/png</Format></ExternalGraphic></Graphic></GraphicFill></Fill></PolygonSymbolizer> </Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
				lowincomet.getSource().updateParams({
					'SLD_Body': sldlowincomet
				});
			break;

			case 'la1and10':
				sldla1and10 = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:foodaccess</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>la1and10</ogc:PropertyName><ogc:Literal>1</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><GraphicFill><Graphic><ExternalGraphic><OnlineResource xlink:type="simple" xlink:href="http://52.38.47.239/geoserver/styles/Icons/pattern.png"/><Format>image/png</Format></ExternalGraphic></Graphic></GraphicFill></Fill></PolygonSymbolizer> </Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
				la1and10.getSource().updateParams({
					'SLD_Body': sldla1and10
				});
			break;

			case 'latracts_h':
				sldlatracts_h = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:foodaccess</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>latracts_h</ogc:PropertyName><ogc:Literal>1</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><GraphicFill><Graphic><ExternalGraphic><OnlineResource xlink:type="simple" xlink:href="http://52.38.47.239/geoserver/styles/Icons/pattern.png"/><Format>image/png</Format></ExternalGraphic></Graphic></GraphicFill></Fill></PolygonSymbolizer> </Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
				latracts_h.getSource().updateParams({
					'SLD_Body': sldlatracts_h
				});
			break;

			case 'latracts20':
				sldlatracts20 = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:foodaccess</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>latracts20</ogc:PropertyName><ogc:Literal>1</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><GraphicFill><Graphic><ExternalGraphic><OnlineResource xlink:type="simple" xlink:href="http://52.38.47.239/geoserver/styles/Icons/pattern.png"/><Format>image/png</Format></ExternalGraphic></Graphic></GraphicFill></Fill></PolygonSymbolizer> </Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
				latracts20.getSource().updateParams({
					'SLD_Body': sldlatracts20
				});
			break;

			case 'lilatracts':
				sldlilatracts = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:foodaccess</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>lilatracts</ogc:PropertyName><ogc:Literal>1</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><GraphicFill><Graphic><ExternalGraphic><OnlineResource xlink:type="simple" xlink:href="http://52.38.47.239/geoserver/styles/Icons/pattern.png"/><Format>image/png</Format></ExternalGraphic></Graphic></GraphicFill></Fill></PolygonSymbolizer> </Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
				lilatracts.getSource().updateParams({
					'SLD_Body': sldlilatracts
				});
			break;

			case 'low_educat':
			case 'low_employ':
			case 'pop_loss_2':
			case 'retirement':
			case 'persistent':
			case 'persisten2':
				sldPrimaryEconomicTypeTwo = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:primaryeconomictype</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>' + $("#urbanRuralIncomeSelect").val() + '</ogc:PropertyName><ogc:Literal>1</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><GraphicFill><Graphic><ExternalGraphic><OnlineResource xlink:type="simple" xlink:href="http://52.38.47.239/geoserver/styles/Icons/pattern.png"/><Format>image/png</Format></ExternalGraphic></Graphic></GraphicFill></Fill></PolygonSymbolizer> </Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
				
				primaryeconomictypetwo.getSource().updateParams({
					'SLD_Body': sldPrimaryEconomicTypeTwo
				});
				break;
		}
	} else if (value == "on") {		
		switch ($("#urbanRuralIncomeSelect").val()) {
			case 'lowincomet':
				sldlowincomet = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:foodaccess</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>lowincomet</ogc:PropertyName><ogc:Literal>0</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>lowincomet</ogc:PropertyName><ogc:Literal>1</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

				lowincomet.getSource().updateParams({
					'SLD_Body': sldlowincomet
				});
			break;

			case 'la1and10':
				sldla1and10 = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:foodaccess</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>la1and10</ogc:PropertyName><ogc:Literal>0</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>la1and10</ogc:PropertyName><ogc:Literal>1</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
				la1and10.getSource().updateParams({
					'SLD_Body': sldla1and10
				});
			break;

			case 'latracts_h':
				sldlatracts_h = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:foodaccess</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>latracts_h</ogc:PropertyName><ogc:Literal>0</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>latracts_h</ogc:PropertyName><ogc:Literal>1</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
				latracts_h.getSource().updateParams({
					'SLD_Body': sldlatracts_h
				});
			break;

			case 'latracts20':
				sldlatracts20 = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:foodaccess</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>latracts20</ogc:PropertyName><ogc:Literal>0</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>latracts20</ogc:PropertyName><ogc:Literal>1</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
				latracts20.getSource().updateParams({
					'SLD_Body': sldlatracts20
				});
			break;

			case 'lilatracts':
				sldlilatracts = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:foodaccess</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>lilatracts</ogc:PropertyName><ogc:Literal>0</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>lilatracts</ogc:PropertyName><ogc:Literal>1</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
				lilatracts.getSource().updateParams({
					'SLD_Body': sldlilatracts
				});
			break;

			case 'low_educat':
			case 'low_employ':
			case 'pop_loss_2':
			case 'retirement':
			case 'persistent':
			case 'persisten2':
				sldPrimaryEconomicTypeTwo = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:primaryeconomictype</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>' + $("#urbanRuralIncomeSelect").val() + '</ogc:PropertyName><ogc:Literal>1</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#084081</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
				
				primaryeconomictypetwo.getSource().updateParams({
					'SLD_Body': sldPrimaryEconomicTypeTwo
				});
				break;
		}
	}	

    map.render();
	
	updateLegendForPatternDeterminants();
}

function updateLegendForPattern()
{
    $("#buildingsLegend").remove();
	
	switch ($("#buildingsSelect").val()) {
		case 'buildings':
			if ($("#flipTextureBuildings").prop('checked'))
				addLegendContent('<div id="buildingsLegend"><table><tr><td><a id="buildingsImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="buildings" onchange="handleLegend($(this));" checked/></td><td>Illinois Buildings </td><td>&nbsp;</td></tr></table><table id="tableInsideTable"><tr><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + firstColor + ';"></div></td><td>No</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + ninthColor + ';"></div></td><td>Yes</td></tr></table></div>', true, "legendConditions");
			else
				addLegendContent('<div id="buildingsLegend"><table><tr><td><a id="buildingsImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="buildings" onchange="handleLegend($(this));" checked/></td><td>Illinois Buildings </td><td>&nbsp;</td></tr></table><table id="tableInsideTable"><tr><td><img height="25px" width="25px" src="images/Legend/pattern.png" /></td><td>Buildings</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr></table></div>', true, "legendConditions");
		break;
	}
}

function updateLegendForPatternDeterminants()
{
    $("#lilatractsLegend").remove();
    $("#latracts20Legend").remove();
    $("#latracts_hLegend").remove();
    $("#la1and10Legend").remove();
    $("#lowincometLegend").remove();
    $("#primaryeconomictypetwoLegend").remove();
	
	switch ($("#urbanRuralIncomeSelect").val()) {
		case 'lowincomet':
			if ($("#flipTexture").prop('checked'))
				addLegendContent('<div id="lowincometLegend"><table><tr><td><a id="lowincometImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="lowincomet" onchange="handleLegend($(this));" checked/></td><td>Low Income Tracts </td><td>&nbsp;</td></tr></table><table id="tableInsideTable"><tr><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + firstColor + ';"></div></td><td>No</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + ninthColor + ';"></div></td><td>Yes</td></tr></table></div>', true, "legendConditions");
			else
				addLegendContent('<div id="lowincometLegend"><table><tr><td><a id="lowincometImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="lowincomet" onchange="handleLegend($(this));" checked/></td><td>Low Income Tracts </td><td>&nbsp;</td></tr></table><table id="tableInsideTable"><tr><td><img height="25px" width="25px" src="images/Legend/pattern.png" /></td><td>Low Income Tracts</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr></table></div>', true, "legendConditions");
        break;

        case 'la1and10':
			if ($("#flipTexture").prop('checked'))
				addLegendContent('<div id="la1and10Legend"><table><tr><td><a id="la1and10Img" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="la1and10" onchange="handleLegend($(this));" checked/></td><td>Low Food Access (1&10) </td><td>&nbsp;</td></tr></table><table id="tableInsideTable"><tr><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + firstColor + ';"></div></td><td>No</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + ninthColor + ';"></div></td><td>Yes</td></tr></table></div>', true, "legendConditions");
			else
				addLegendContent('<div id="la1and10Legend"><table><tr><td><a id="la1and10Img" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="la1and10" onchange="handleLegend($(this));" checked/></td><td>Low Food Access (1&10) </td><td>&nbsp;</td></tr></table><table id="tableInsideTable"><tr><td><img height="25px" width="25px" src="images/Legend/pattern.png" /></td><td>Low Food Access (1&10)</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr></table></div>', true, "legendConditions");
        break;

        case 'latracts_h':
			if ($("#flipTexture").prop('checked'))
				addLegendContent('<div id="latracts_hLegend"><table><tr><td><a id="latracts_hImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="latracts_h" onchange="handleLegend($(this));" checked/></td><td>Low Food Access (1/2 mile) </td><td>&nbsp;</td></tr></table><table id="tableInsideTable"><tr><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + firstColor + ';"></div></td><td>No</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + ninthColor + ';"></div></td><td>Yes</td></tr></table></div>', true, "legendConditions");
			else
				addLegendContent('<div id="latracts_hLegend"><table><tr><td><a id="latracts_hImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="latracts_h" onchange="handleLegend($(this));" checked/></td><td>Low Food Access (1/2 mile) </td><td>&nbsp;</td></tr></table><table id="tableInsideTable"><tr><td><img height="25px" width="25px" src="images/Legend/pattern.png" /></td><td>Low Food Access (1/2 mile)</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr></table></div>', true, "legendConditions");
        break;

        case 'latracts20':
			if ($("#flipTexture").prop('checked'))
				addLegendContent('<div id="latracts20Legend"><table><tr><td><a id="latracts20Img" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="latracts20" onchange="handleLegend($(this));" checked/></td><td>Low Food Access (20 miles) </td><td>&nbsp;</td></tr></table><table id="tableInsideTable"><tr><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + firstColor + ';"></div></td><td>No</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + ninthColor + ';"></div></td><td>Yes</td></tr></table></div>', true, "legendConditions");
			else
				addLegendContent('<div id="latracts20Legend"><table><tr><td><a id="latracts20Img" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="latracts20" onchange="handleLegend($(this));" checked/></td><td>Low Food Access (20 miles) </td><td>&nbsp;</td></tr></table><table id="tableInsideTable"><tr><td><img height="25px" width="25px" src="images/Legend/pattern.png" /></td><td>Low Food Access (20 miles)</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr></table></div>', true, "legendConditions");
        break;

        case 'lilatracts':
			if ($("#flipTexture").prop('checked'))
				addLegendContent('<div id="lilatractsLegend"><table><tr><td><a id="lilatractsImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="lilatracts" onchange="handleLegend($(this));" checked/></td><td>LILATracts_1And10 </td><td>&nbsp;</td></tr></table><table id="tableInsideTable"><tr><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + firstColor + ';"></div></td><td>No</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + ninthColor + ';"></div></td><td>Yes</td></tr></table></div>', true, "legendConditions");
			else
				addLegendContent('<div id="lilatractsLegend"><table><tr><td><a id="lilatractsImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="lilatracts" onchange="handleLegend($(this));" checked/></td><td>LILATracts_1And10 </td><td>&nbsp;</td></tr></table><table id="tableInsideTable"><tr><td><img height="25px" width="25px" src="images/Legend/pattern.png" /></td><td>LILA Tracts 1 And 10</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr></table></div>', true, "legendConditions");
        break;

		case 'low_educat':
		case 'low_employ':
		case 'pop_loss_2':
		case 'retirement':
		case 'persistent':
		case 'persisten2':
			if ($("#flipTexture").prop('checked'))
				addLegendContent('<div id="primaryeconomictypetwoLegend"><table><tr><td><a id="primaryeconomictypetwoImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="primaryeconomictypetwo" onchange="handleLegend($(this));" checked/></td><td>Primary Economic Type - ' + $("#urbanRuralIncomeSelect").find('option:selected').text() + '</td><td>&nbsp;</td></tr></table><table id="tableInsideTable"><tr><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#084081;"></div></td><td>Yes</td><td></td></tr></table></div>', true, "legendConditions");
			else
				addLegendContent('<div id="primaryeconomictypetwoLegend"><table><tr><td><a id="primaryeconomictypetwoImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="primaryeconomictypetwo" onchange="handleLegend($(this));" checked/></td><td>Primary Economic Type - ' + $("#urbanRuralIncomeSelect").find('option:selected').text() + '</td><td>&nbsp;</td></tr></table><table id="tableInsideTable"><tr><td><img height="25px" width="25px" src="images/Legend/pattern.png" /></td><td>Primary Economic Type - ' + $("#urbanRuralIncomeSelect").find('option:selected').text() + '</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr></table></div>', true, "legendConditions");
		break;
	}
}

function addUrbanRuralFoodAccess() {
	$('#urbanruralSelect').selectpicker('val', 'none');
	$('#socialSelect').selectpicker('val', 'none');
	$('#businessActivitySelect').selectpicker('val', 'none');
	$('#graingerSelect').selectpicker('val', 'none');
	$('#banksActivitySelect').selectpicker('val', 'none');
	$('#residentsSelect').selectpicker('val', 'none');
	$('#enviroSelect').selectpicker('val', 'none');
	$('#graingerGroupsTypeSelect').selectpicker('val', 'none');
	$('#khSelect').selectpicker('val', 'none');
	$('#housingSelect').selectpicker('val', 'none');
	$('#solardataSelect').selectpicker('val', 'none');
	$('#biodiversitydataSelect').selectpicker('val', 'none');
    turnAllLayersOff();

    updateLook();

    $("#divTransEnviro").show();

    switch ($("#urbanruralFoodAccessSelect").val()) {
        case 'none':
            $("#divTransSocial").hide();
            $("#divTransEconomic").hide();
            $("#divTransEnviro").hide();
            break;
        case 'lapop1':
			foodaccess.set('title', 'lapop1');
			foodaccess.set('displayInLayerSwitcher', true);
            foodaccess.setVisible(true);
            break;
        case 'lapop1shar':
			foodaccess.set('title', 'lapop1shar');
			foodaccess.set('displayInLayerSwitcher', true);
            foodaccess.setVisible(true);
            break;
        case 'lalowi1':
			foodaccess.set('title', 'lalowi1');
			foodaccess.set('displayInLayerSwitcher', true);
            foodaccess.setVisible(true);
            break;
        case 'lalowi1sha':
			foodaccess.set('title', 'lalowi1sha');
			foodaccess.set('displayInLayerSwitcher', true);
            foodaccess.setVisible(true);
            break;
        case 'lapop10':
			foodaccess.set('title', 'lapop10');
			foodaccess.set('displayInLayerSwitcher', true);
            foodaccess.setVisible(true);
            break;
        case 'lapop10sha':
			foodaccess.set('title', 'lapop10sha');
			foodaccess.set('displayInLayerSwitcher', true);
            foodaccess.setVisible(true);
            break;
        case 'lalowi10':
			foodaccess.set('title', 'lalowi10');
			foodaccess.set('displayInLayerSwitcher', true);
            foodaccess.setVisible(true);
            break;
        case 'lalowi10sh':
			foodaccess.set('title', 'lalowi10sh');
			foodaccess.set('displayInLayerSwitcher', true);
            foodaccess.setVisible(true);
            break;
    }
}

function selectRegion() {
    selectSource.clear();
    txtSearchLayer.setVisible(false);

    $("#boundariesLegend").remove();
    $("#divDivision").hide();
    $("#divStates").hide();
    $("#divCounties").hide();
    $("#divCity").hide();
    $("#divNeighbour").hide();
    $('#cbNone').prop('checked', true);
    var table = "";

    switch ($("#selRegion").val()) {
        case 'none':
            toastr.error("Please select the region");
            $("#divDivision").hide();
            $("#divStates").hide();
            $("#divCounties").hide();
            $("#divCity").hide();
            $("#divNeighbour").hide();
            $("#iptMarket").attr('checked', false);
            return;
            break;
        case 'censusf':
            table = "censusf";
            break;
        case 'censusn':
            table = "censusn";
            break;
        case 'ari':
            table = "ari";
            break;
        case 'bea':
            table = "bea";
            break;
        case 'rea':
            table = "rea";
            break;
        default:
            break;
    }
    fetchSearchLayerData('../geoserver/wfs?service=WFS&' +
        'version=1.1.0&request=GetFeature&typename=Farmer:' + table +
        '&outputFormat=application/json&srsname=EPSG:3857&' +
        ',EPSG:3857');
    $("#divDivision").show();

    addLegendContent('<div id="boundariesLegend"><table><tr><td><a id="boundariesImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="boundaries" onchange="handleLegend($(this));" checked/></td><td colspan="2">Boundary Overlay</td></tr><tr><td colspan="2"></td><td><img height="5px" width="19px" src="images/Legend/region.png" /><td>' + $("#selRegion").val().capitalize() + '</td></tr></table></div>', true, "legendArea");

    $('#division').each(function(index, value) {
        var select = $(this);
        var list = [];
        var gid = '';
        list.push('<option value="none">Select the Division</option>');

        $.getJSON('readGeojson.php?cond=getDiv&tab=' + table, function(data) {
            $.each(data, function(key, val) {
                list.push('<option value="' + val.name + '">' + val.name + '</option>');
                gid = val.gid;
            });
            select.html(list.join(''));
            select.selectpicker('refresh');
        });
    });
}

function selectDivision() {
    $("#divStates").hide();
    $("#divCounties").hide();
    $("#divCity").hide();
    $("#divNeighbour").hide();
    $("#boundariesLegend").remove();

    if ($("#division").val() == "none") {
        $("#divStates").hide();
        toastr.error("Please select the divison");
        selectRegion();
        return;
    }
    var statesTable = "";
    var col = "";

    switch ($("#selRegion").val()) {
        case 'censusf':
            statesTable = "states";
            col = "censusfid";
            break;
        case 'censusn':
            statesTable = "states";
            col = "censusnid";
            break;
        case 'ari':
            statesTable = "aristates";
            col = "regionid";
            break;
        case 'bea':
            statesTable = "states";
            col = "beaid";
            break;
        case 'rea':
            statesTable = "reastates";
            col = "regionid";
            break;
        default:
            break;
    }
    $("#divStates").show();

    ar = false;

    $('#state').each(function(index, value) {
        var select = $(this);
        var list = [];
        var gid = '';

        $.getJSON('readGeojson.php?cond=getStates&tab=' + statesTable + '&value=' + $("#division").val() + '&par=' + $("#selRegion").val() + '&col=' + col, function(data) {
            $.each(data, function(key, val) {
                lat = '', lon = '';
                list.push('<option value="' + val.id + '">' + val.name + '</option>');
                gid = val.gid;
            });

            fetchSearchLayerData('../geoserver/wfs?service=WFS&' +
                'version=1.1.0&request=GetFeature&typename=Farmer:' + $("#selRegion").val() + '&CQL_FILTER=gid=' + '\'' + gid + '\'' +
                '&outputFormat=application/json&srsname=EPSG:3857&' +
                ',EPSG:3857');
            select.html(list.join(''));
            select.selectpicker('refresh');
        });
    });
}

function selectState() {
	$("#divCounties").hide();
	$("#divCity").hide();
    $("#boundariesLegend").remove();
    var len = 0;
    try {
        len = $("#state").val().length;
    } catch (ex) {}
    if (len == 0) {
        selectDivision();
        toastr.error("Please select the State(s)");
        return;
    }
    if (len > 0) {
        var result = '';
        for (i = 0; i < $("#state").val().length; i++) {
            result += "b.statefp='" + $("#state").val()[i] + "' or ";
        }
        result = result.substring(0, result.length - 3);

        var state = '';
        for (i = 0; i < $("#state").val().length; i++) {
            state += "\"statefp\"='" + $("#state").val()[i] + "' or ";
        }
        state = state.substring(0, state.length - 3);

		// if($("#selSelectionOptionsTwo").val() == "macro")
        // {
			$("#divCounties").show();
			addLegendContent('<div id="boundariesLegend"><table><tr><td><a id="boundariesImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="boundaries" onchange="handleLegend($(this));" checked/></td><td colspan="2">Boundary Overlay</td></tr><tr><td colspan="2"></td><td><img height="5px" width="19px" src="images/Legend/states.png" /><td>States</td></tr></table></div>', true, "legendArea");
			$('#county').each(function(index, value) {
				var select = $(this);
				var list = [];

				list.push('<option value="none">Select the Counties</option>');
				$.getJSON('readGeojson.php?cond=getCounties&tab=counties&par=states&value=' + result, function(data) {
					$.each(data, function(key, val) {
						list.push('<option value="' + val.gid + '">' + val.name + '</option>');
					});
					select.html(list.join(''));
					select.selectpicker('refresh');
				});
			});
        
			fetchSearchLayerData('../geoserver/wfs?service=WFS&' +
				'version=1.1.0&request=GetFeature&typename=Farmer:counties&CQL_FILTER=' + state + '' +
				'&outputFormat=application/json&srsname=EPSG:3857&' +
				',EPSG:3857');
		// }
		// else if($("#selSelectionOptionsTwo").val() == "market")
        // {
            // $("#divCity").show();
            // for (i = 0; i < $("#state").val().length; i++) {
                // result += "b.statefp='" + $("#state").val()[i] + "' or ";
            // }
            // result = result.substring(0, result.length - 3);

            // ar = false;
            // addLegendContent('<div id="boundariesLegend"><table><tr><td><a id="boundariesImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="boundaries" onchange="handleLegend($(this));" checked/></td><td colspan="2">Boundary Overlay</td></tr><tr><td colspan="2"></td><td><img height="5px" width="19px" src="images/Legend/states.png" /><td>States</td></tr></table></div>', true, "legendArea");
            // $('#city').each(function(index, value) {
                // var select = $(this);
                // var list = [];

                // list.push('<option value="none">Select the City</option>');
                // $.getJSON('readGeojson.php?cond=getCity&par=states&value=' + result, function(data) {
                    // $.each(data, function(key, val) {
                        // list.push('<option value="' + val.gid + '">' + val.name + '</option>');
                    // });
                    // select.html(list.join(''));
                    // select.selectpicker('refresh');
                // });
            // });
        
			// fetchSearchLayerData('../geoserver/wfs?service=WFS&' +
				// 'version=1.1.0&request=GetFeature&typename=Farmer:cities&CQL_FILTER=' + state + '' +
				// '&outputFormat=application/json&srsname=EPSG:3857&' +
				// ',EPSG:3857');
		// }
	}
}

function selectStateOld() {
    $("#boundariesLegend").remove();
    var len = 0;
    try {
        len = $("#state").val().length;
    } catch (ex) {}
    if (len == 0) {
        selectDivision();
        $("#divCounties").hide();
        $("#divCity").hide();
        toastr.error("Please select the000000000000 00St0ate(s)");
        return;
    }
    if (len > 0) {
        var statesTable = "";

        switch ($("#selRegion").val()) {
            case 'censusf':
                statesTable = "states";
                break;
            case 'censusn':
                statesTable = "states";
                break;
            case 'ari':
                statesTable = "aristates";
                break;
            case 'bea':
                statesTable = "states";
                break;
            case 'rea':
                statesTable = "reastates";
                break;
            default:
                break;
        }
        var result = '';
        for (i = 0; i < $("#state").val().length; i++) {
            result += "b.gid='" + $("#state").val()[i] + "' or ";
        }
        result = result.substring(0, result.length - 3);

        var state = '';
        for (i = 0; i < $("#state").val().length; i++) {
            state += "\"gid\"='" + $("#state").val()[i] + "' or ";
        }
        state = state.substring(0, state.length - 3);
        fetchSearchLayerData('../geoserver/wfs?service=WFS&' +
            'version=1.1.0&request=GetFeature&typename=Farmer:' + statesTable + '&CQL_FILTER=' + state + '' +
            '&outputFormat=application/json&srsname=EPSG:3857&' +
            ',EPSG:3857');

        var table;
        switch (statesTable) {
            case 'states':
                table = "counties";
                break;
            case 'aristates':
                table = "aricounties";
                break;
            case 'reastates':
                table = "reacounties";
                break;
            default:
                break;
        }
        if (detailSelected == "Region") {
            $("#divCounties").show();

            ar = false;
            addLegendContent('<div id="boundariesLegend"><table><tr><td><a id="boundariesImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="boundaries" onchange="handleLegend($(this));" checked/></td><td colspan="2">Boundary Overlay</td></tr><tr><td colspan="2"></td><td><img height="5px" width="19px" src="images/Legend/states.png" /><td>States</td></tr></table></div>', true, "legendArea");
            $('#county').each(function(index, value) {
                var select = $(this);
                var list = [];

                list.push('<option value="none">Select the Counties</option>');
                $.getJSON('readGeojson.php?cond=getCounties&tab=' + table + '&par=' + statesTable + '&value=' + result, function(data) {
                    $.each(data, function(key, val) {
                        list.push('<option value="' + val.gid + '">' + val.name + '</option>');
                    });
                    select.html(list.join(''));
                    select.selectpicker('refresh');
                });
            });
        }

        if (detailSelected == "Market") {
            var colName = "";
            switch ($("#selRegion").val()) {
                case 'censusf':
                    colName = "censusfregion";
                    break;
                case 'censusn':
                    colName = "censusnregion";
                    break;
                case 'ari':
                    colName = "region";
                    break;
                case 'bea':
                    colName = "bearegion";
                    break;
                case 'rea':
                    colName = "region";
                    break;
                default:
                    break;
            }
            var result = "b." + colName + "='" + $("#division").val() + "' and ";
            for (i = 0; i < $("#state").val().length; i++) {
                result += "b.gid='" + $("#state").val()[i] + "' or ";
            }
            result = result.substring(0, result.length - 3);
            $("#divCity").show();

            ar = false;
            addLegendContent('<div id="boundariesLegend"><table><tr><td><a id="boundariesImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="boundaries" onchange="handleLegend($(this));" checked/></td><td colspan="2">Boundary Overlay</td></tr><tr><td colspan="2"></td><td><img height="5px" width="19px" src="images/Legend/states.png" /><td>States</td></tr></table></div>', true, "legendArea");
            $('#city').each(function(index, value) {
                var select = $(this);
                var list = [];

                list.push('<option value="none">Select the City</option>');
                $.getJSON('readGeojson.php?cond=getCity&par=' + statesTable + '&value=' + result, function(data) {
                    $.each(data, function(key, val) {
                        list.push('<option value="' + val.gid + '">' + val.name + '</option>');
                    });
                    select.html(list.join(''));
                    select.selectpicker('refresh');
                });
            });
        }
    }
}

function selectCounties() {
    $("#boundariesLegend").remove();
    if ($("#county").val() == "none") {
        $("#divCounties").hide();
        toastr.error("Please select County(ies)");
        return;
    }
    try {
        var len = $("#county").val().length;
    } catch (ex) {}
    if (len > 0) {
        var countiesTable = "counties";
        var result = '';
        for (i = 0; i < $("#county").val().length; i++) {
            result += "gid='" + $("#county").val()[i] + "' or ";
        }
        result = result.substring(0, result.length - 3);

        if (result.indexOf("none") !== -1)
            result = result.replace("gid='none' or ", "");

        fetchSearchLayerData('../geoserver/wfs?service=WFS&' +
            'version=1.1.0&request=GetFeature&typename=Farmer:' + countiesTable + '&CQL_FILTER=' + result + '' +
            '&outputFormat=application/json&srsname=EPSG:3857&' +
            ',EPSG:3857');

        ar = false;
        addLegendContent('<div id="boundariesLegend"><table><tr><td><a id="boundariesImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="boundaries" onchange="handleLegend($(this));" checked/></td><td colspan="2">Boundary Overlay</td></tr><tr><td colspan="2"></td><td><img height="5px" width="19px" src="images/Legend/counties.png" /><td>Counties</td></tr></table></div>', true, "legendArea");
    }
}

function selectCity() {
    $("#boundariesLegend").remove();
    var len = 0;
    try {
        len = $("#city").val().length;
    } catch (ex) {}
    if (len == 0) {
        $("#divNeighbour").hide();
        toastr.error("Please select a City");
        try {
            selectSource.clear();
            txtSearchLayer.setVisible(false);
        } catch (ex) {}
        selectState();
        return;
    }
    if (len > 0) {
        var city = '';
        for (i = 0; i < $("#city").val().length; i++) {
            city += "\"gid\"='" + $("#city").val()[i] + "' or ";
        }
        city = city.substring(0, city.length - 3);
        if (city.indexOf("none") !== -1)
            city = city.replace("\"gid\"='none' or ", "");

        fetchSearchLayerData("../geoserver/wfs?service=WFS&" +
            "version=1.1.0&request=GetFeature&typename=Farmer:cities&CQL_FILTER=" + city +
            "&outputFormat=application/json&srsname=EPSG:3857&" +
            ",EPSG:3857");
        $("#divNeighbour").show();

        ar = false;
        addLegendContent('<div id="boundariesLegend"><table><tr><td><a id="boundariesImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="boundaries" onchange="handleLegend($(this));" checked/></td><td colspan="2">Boundary Overlay</td></tr><tr><td colspan="2"></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /><td>Cities</td></tr></table></div>', true, "legendArea");
    }
}

function selectWithinCity() {
    $("#boundariesLegend").remove();
    $("#popup-closer").click();
    if ($("#withinCity").val() == "none") {
        toastr.error("Please select a neighborhood");
        return;
    }
    var len;
    try {
        len = $("#withinCity").val().length;
    } catch (ex) {}
    if (len > 0) {
        var result = '';
        for (i = 0; i < $("#withinCity").val().length; i++) {
            result += "gid='" + $("#withinCity").val()[i] + "' or ";
        }
        result = result.substring(0, result.length - 3);

        if (result.indexOf("none") !== -1)
            result = result.replace("gid='none' or ", "");

        fetchSearchLayerData('../geoserver/wfs?service=WFS&' +
            'version=1.1.0&request=GetFeature&typename=Farmer:neighbourcities&CQL_FILTER=' + result + '' +
            '&outputFormat=application/json&srsname=EPSG:3857&' +
            ',EPSG:3857');

        ar = false;
        addLegendContent('<div id="boundariesLegend"><table><tr><td><a id="boundariesImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="boundaries" onchange="handleLegend($(this));" checked/></td><td colspan="2">Boundary Overlay</td></tr><tr><td colspan="2"></td><td><img height="5px" width="19px" src="images/Legend/neighbor.png" /><td>Neighborhood</td></tr></table></div>', true, "legendArea");
    } else
        selectCity();
}

function selectWithoutCity() {
    $("#boundariesLegend").remove();
    $("#popup-closer").click();
    if ($("#withoutCity").val() == "none") {
        toastr.error("Please select a neighborhood");
        return;
    }

    var len;
    try {
        len = $("#withoutCity").val().length;
    } catch (ex) {}
    if (len > 0) {
        var result = '';
        for (i = 0; i < $("#withoutCity").val().length; i++) {
            result += "gid='" + $("#withoutCity").val()[i] + "' or ";
        }
        result = result.substring(0, result.length - 3);

        if (result.indexOf("none") !== -1)
            result = result.replace("gid='none' or ", "");

        fetchSearchLayerData('../geoserver/wfs?service=WFS&' +
            'version=1.1.0&request=GetFeature&typename=Farmer:neighbourcities&CQL_FILTER=' + result + '' +
            '&outputFormat=application/json&srsname=EPSG:3857&' +
            ',EPSG:3857');

        ar = false;
        addLegendContent('<div id="boundariesLegend"><table><tr><td><a id="boundariesImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="boundaries" onchange="handleLegend($(this));" checked/></td><td colspan="2">Boundary Overlay</td></tr><tr><td colspan="2"></td><td><img height="5px" width="19px" src="images/Legend/neighbor.png" /><td>Neighborhood</td></tr></table></div>', true, "legendArea");
    } else
        selectCity();
}

function changePaletteSocial() {
    if ($('#switchFramesSocial').prop('checked'))
        changeFrames('on');
    else
        changeFrames('off');

    if ($("#cohortOptsSocial").val() == "divergent")
        $("#socialCohortsOpts").hide();
    else
        $("#socialCohortsOpts").show();
}

function changePaletteRefri() {
    if ($('#switchFramesRefri').prop('checked'))
        changeFrames('on');
    else
        changeFrames('off');

    if ($("#cohortOptsRefri").val() == "divergent")
        $("#refriCohortsOpts").hide();
    else
        $("#refriCohortsOpts").show();
}

function changePaletteEcono() {
    if ($('#switchFramesEcono').prop('checked'))
        changeFrames('on');
    else
        changeFrames('off');

    if ($("#cohortOptsEcono").val() == "divergent")
        $("#econoCohortsOpts").hide();
    else
        $("#econoCohortsOpts").show();
}

function changePaletteEconomicTwo() {
    if ($('#switchFramesEconomicTwo').prop('checked'))
        changeFramesEcono('on');
    else
        changeFramesEcono('off');

    if ($("#cohortOptsEconomicTwo").val() == "divergent")
        $("#economicTwoCohortsOpts").hide();
    else
        $("#economicTwoCohortsOpts").show();
}

function changePaletteMuap() {
    if ($('#switchFramesMuap').prop('checked'))
        changeFrames('on');
    else
        changeFrames('off');

    if ($("#cohortOptsMuap").val() == "divergent")
        $("#muapCohortsOpts").hide();
    else
        $("#muapCohortsOpts").show();
}

function changePaletteEnviro() {
    if ($('#switchFramesEnviro').prop('checked'))
        changeFrames('on');
    else
        changeFrames('off');

    if ($("#cohortOptsEnviro").val() == "divergent")
        $("#enviroCohortsOpts").hide();
    else
        $("#enviroCohortsOpts").show();
}

function changePaletteEnviroTwo() {
    if ($('#switchFramesEnviroTwo').prop('checked'))
        changeFramesEnviro('on');
    else
        changeFramesEnviro('off');

    if ($("#cohortOptsEnviroTwo").val() == "divergent")
        $("#enviroTwoCohortsOpts").hide();
    else
        $("#enviroTwoCohortsOpts").show();
}

function drawHeatMap(value) {
	$("#heatOpts").hide();
    try {
        $("#popup-closer").click();
    } catch (ex) {}
    try {
        map.removeLayer(heatMap);
    } catch (ex) {}
    var table = "";
    switch ($("#selHeatMap").val()) {
        case 'farmer':
            table = "farmers";
            break;

        case 'stores':
            table = "stores";
            break;

        case 'vacancy':
            table = "vacancies";
            break;

        case 'population':
            table = "midwestpop";
            break;

        case 'income':
            table = "midwestinc";
            break;

        case 'density':
            table = "density";
            break;

        case 'gardens':
            table = "gardens";
            break;

        case 'culver':
            table = "culver";
            break;

        case 'reset':
            table = "reset";
            break;

        default:
            break;
    }

    if (table == "reset")
        map.removeLayer(heatMap);
    else {
		$("#heatOpts").show();
		map.removeLayer(heatMap);
        heatMap = new ol.layer.Heatmap({
            name: "Heatmap",
            source: new ol.source.Vector({
                url: 'getHMData.php?value=' + table,
                format: new ol.format.GeoJSON(),
                projection: 'EPSG:3857'
            }),
            gradient: ['#00f', '#662506', '#ffffe5', '#fec', '#993404'],
			radius: 4,
			shadow: 550,
			blur:  19,
			opacity: 0.8
        });

        map.getLayers().insertAt(134, heatMap);
    }
}

function updateReportDivs() {
    try {
        $("#tableFarmerMulti").hide();
        $("#tableStoresMulti").hide();
        $("#tableLogosMulti").hide();
        $("#tableGardensMulti").hide();
        $("#tableNaturalMulti").hide();
        $("#tableMMDMulti").hide();
        $("#tableMMFMulti").hide();
        $("#tableMMGMulti").hide();
        $("#tableMMIMulti").hide();
        $("#tableMMPMulti").hide();
        $("#tableMMRMulti").hide();
        $("#tableAirportsMulti").hide();
        $("#tableFreightMulti").hide();
        $("#tableCrossingMulti").hide();
        $("#tableIanaMulti").hide();
        $("#tableTransitMulti").hide();
        $("#tablePortMulti").hide();
        $("#tableMclaneMulti").hide();
        $("#tableAmazonMulti").hide();
        $("#tableSyscoMulti").hide();
        $("#tableUsfMulti").hide();
        $("#tableFedexMulti").hide();
        $("#tableDhlMulti").hide();
        $("#tableUpsMulti").hide();
        $("#tableAlbertsonsMulti").hide();
        $("#tableCulverMulti").hide();
        $("#tableThorntonMulti").hide();
        $("#tableDicksMulti").hide();
        $("#tablePublixMulti").hide();
        $("#tableGiantEagleMulti").hide();
        $("#tableKrogerMulti").hide();
        $("#tableShoppingMulti").hide();
        $("#tableTysonMulti").hide();
        $("#tableRanchesMulti").hide();
        $("#tableTraderJoesMulti").hide();
        $("#tableWholeFoodsMulti").hide();
        $("#tableDenMulti").hide();
        $("#tableHHMulti").hide();
        $("#tablePopuMulti").hide();
        $("#tableIncMulti").hide();
        $("#tableVacMulti").hide();
        $("#tableBrownMulti").hide();

        $("#tableFarmer").hide();
        $("#tableStores").hide();
        $("#tableLogos").hide();
        $("#tableGardens").hide();
        $("#tableNatural").hide();
        $("#tableManmadeDest").hide();
        $("#tableManmadeFaith").hide();
        $("#tableManmadeGovt").hide();
        $("#tableManmadeInfra").hide();
        $("#tableManmadePublic").hide();
        $("#tableManmadeRetail").hide();
        $("#tableAirports").hide();
        $("#tableFreight").hide();
        $("#tableCrossing").hide();
        $("#tableIana").hide();
        $("#tableTransit").hide();
        $("#tablePort").hide();
        $("#tableMclane").hide();
        $("#tableAmazon").hide();
        $("#tableSysco").hide();
        $("#tableUsf").hide();
        $("#tableFedex").hide();
        $("#tableDhl").hide();
        $("#tableUps").hide();
        $("#tableAlbertsons").hide();
        $("#tableThornton").hide();
        $("#tableCulver").hide();
        $("#tableDicks").hide();
        $("#tablePublix").hide();
        $("#tableGiantEagle").hide();
        $("#tableKroger").hide();
        $("#tableShopping").hide();
        $("#tableTyson").hide();
        $("#tableDen").hide();
        $("#tableHH").hide();
        $("#tablePopu").hide();
        $("#tableInc").hide();
        $("#tableVac").hide();
        $("#tableBrown").hide();

        farmer.setVisible(false);
        stores.setVisible(false);
        logo.setVisible(false);
        brownfields.setVisible(false);
        hot_springs.setVisible(false);
        landbanks.setVisible(false);
        garden.setVisible(false);
        natural.setVisible(false);
        manmade_destinations.setVisible(false);
        manmade_faith.setVisible(false);
        manmade_govt_places.setVisible(false);
        manmade_infrastructure.setVisible(false);
        manmade_public_spaces.setVisible(false);
        manmade_retail_prices.setVisible(false);
        airport.setVisible(false);
        freightIntersects.setVisible(false);
        interchange.setVisible(false);
        iana.setVisible(false);
        transStop.setVisible(false);
        portFacility.setVisible(false);
        mclane.setVisible(false);
        amazon.setVisible(false);
        sysco.setVisible(false);
        usf.setVisible(false);
        fedex.setVisible(false);
        dhl.setVisible(false);
        ups.setVisible(false);
        albertsons.setVisible(false);
        thornton.setVisible(false);
        culver.setVisible(false);
        dicks.setVisible(false);
        publix.setVisible(false);
        gianteagle.setVisible(false);
        kroger.setVisible(false);
        shoppingcenter.setVisible(false);
        foodplants.setVisible(false);
        traderjoes.setVisible(false);
        wholefoods.setVisible(false);
        ranchesandfarms.setVisible(false);
        densityLayer.setVisible(false);
        vacancyLayer.setVisible(false);

        for (i = 0; i < $("#dataForReport").val().length; i++) {
            switch ($("#dataForReport").val()[i]) {
                case 'reportFarmer':
                    $("#tableFarmerMulti").show();
                    $("#tableFarmer").show();
                    farmer.setVisible(true);
                    break;
                case 'reportStores':
                    $("#tableStoresMulti").show();
                    $("#tableStores").show();
                    stores.setVisible(true);
                    break;
                case 'reportLogos':
                    $("#tableLogosMulti").show();
                    $("#tableLogos").show();
                    logo.setVisible(true);
                    break;
                case 'reportBrown':
                    $("#tableBrownMulti").show();
                    $("#tableBrown").show();
                    brownfields.setVisible(true);
                    break;
                case 'reportGardens':
                    $("#tableGardensMulti").show();
                    $("#tableGardens").show();
                    garden.setVisible(true);
                    break;
                case 'reportNatural':
                    $("#tableNaturalMulti").show();
                    $("#tableNatural").show();
                    natural.setVisible(true);
                    break;
                case 'reportManMadeDest':
                    $("#tableMMDMulti").show();
                    $("#tableManmadeDest").show();
                    manmade_destinations.setVisible(true);
                    break;
                case 'reportManMadeFaith':
                    $("#tableMMFMulti").show();
                    $("#tableManmadeFaith").show();
                    manmade_faith.setVisible(true);
                    break;
                case 'reportManMadeGovt':
                    $("#tableMMGMulti").show();
                    $("#tableManmadeGovt").show();
                    manmade_govt_places.setVisible(true);
                    break;
                case 'reportManMadeInfra':
                    $("#tableMMIMulti").show();
                    $("#tableManmadeInfra").show();
                    manmade_infrastructure.setVisible(true);
                    break;
                case 'reportManMadePublic':
                    $("#tableMMPMulti").show();
                    $("#tableManmadePublic").show();
                    manmade_public_spaces.setVisible(true);
                    break;
                case 'reportManMadeRetail':
                    $("#tableMMRMulti").show();
                    $("#tableManmadeRetail").show();
                    manmade_retail_prices.setVisible(true);
                    break;
                case 'reportAirports':
                    $("#tableAirportsMulti").show();
                    $("#tableAirports").show();
                    airport.setVisible(true);
                    break;
                case 'reportFreightInt':
                    $("#tableFreightMulti").show();
                    $("#tableFreight").show();
                    freightIntersects.setVisible(true);
                    break;
                case 'reportInterchanges':
                    $("#tableCrossingMulti").show();
                    $("#tableCrossing").show();
                    interchange.setVisible(true);
                    break;
                case 'reportIana':
                    $("#tableIanaMulti").show();
                    $("#tableIana").show();
                    iana.setVisible(true);
                    break;
                case 'reportTransitStop':
                    $("#tableTransitMulti").show();
                    $("#tableTransit").show();
                    transStop.setVisible(true);
                    break;
                case 'reportPortFacility':
                    $("#tablePortMulti").show();
                    $("#tablePort").show();
                    portFacility.setVisible(true);
                    break;
                case 'reportMclane':
                    $("#tableMclaneMulti").show();
                    $("#tableMclane").show();
                    mclane.setVisible(true);
                    break;
                case 'reportAmazon':
                    $("#tableAmazonMulti").show();
                    $("#tableAmazon").show();
                    amazon.setVisible(true);
                    break;
                case 'reportSysco':
                    $("#tableSyscoMulti").show();
                    $("#tableSysco").show();
                    sysco.setVisible(true);
                    break;
                case 'reportUsf':
                    $("#tableUsfMulti").show();
                    $("#tableUsf").show();
                    usf.setVisible(true);
                    break;
                case 'reportFedex':
                    $("#tableFedexMulti").show();
                    $("#tableFedex").show();
                    fedex.setVisible(true);
                    break;
                case 'reportDhl':
                    $("#tableDhlMulti").show();
                    $("#tableDhl").show();
                    dhl.setVisible(true);
                    break;
                case 'reportUps':
                    $("#tableUpsMulti").show();
                    $("#tableUps").show();
                    ups.setVisible(true);
                    break;
                case 'reportAlbertsons':
                    $("#tableAlbertsonsMulti").show();
                    $("#tableAlbertsons").show();
                    albertsons.setVisible(true);
                    break;
                case 'reportThornton':
                    $("#tableThorntonMulti").show();
                    $("#tableThornton").show();
                    thornton.setVisible(true);
                    break;
                case 'reportCulver':
                    $("#tableCulverMulti").show();
                    $("#tableCulver").show();
                    culver.setVisible(true);
                    break;
                case 'reportDicks':
                    $("#tableDicksMulti").show();
                    $("#tableDicks").show();
                    dicks.setVisible(true);
                    break;
                case 'reportPublix':
                    $("#tablePublixMulti").show();
                    $("#tablePublix").show();
                    publix.setVisible(true);
                    break;
                case 'reportGiantEagle':
                    $("#tableGiantEagleMulti").show();
                    $("#tableGiantEagle").show();
                    gianteagle.setVisible(true);
                    break;
                case 'reportKroger':
                    $("#tableKrogerMulti").show();
                    $("#tableKroger").show();
                    kroger.setVisible(true);
                    break;
                case 'reportShopping':
                    $("#tableShoppingMulti").show();
                    $("#tableShopping").show();
                    shoppingcenter.setVisible(true);
                    break;
                case 'reportFoodPlants':
                    $("#tableTysonMulti").show();
                    $("#tableTyson").show();
                    foodplants.setVisible(true);
                    break;
                case 'reportFarmRanches':
                    $("#tableRanchesMulti").show();
                    $("#tableRanches").show();
                    ranchesandfarms.setVisible(true);
                    break;
                case 'reportTraderJoes':
                    $("#tableTraderJoesMulti").show();
                    $("#tableTraderJoes").show();
                    traderjoes.setVisible(true);
                    break;
                case 'reportWholeFoods':
                    $("#tableWholeFoodsMulti").show();
                    $("#tableWholeFoods").show();
                    wholefoods.setVisible(true);
                    break;
                case 'reportPopu':
                    $("#tablePopuMulti").show();
                    $("#tablePopu").show();
                    break;
                case 'reportDensity':
                    $("#tableDenMulti").show();
                    $("#tableDen").show();
                    densityLayer.setVisible(true);
                    break;
                case 'reportHH':
                    $("#tableHHMulti").show();
                    $("#tableHH").show();
                    break;
                case 'reportIncome':
                    $("#tableIncMulti").show();
                    $("#tableInc").show();
                    break;
                case 'reportVacancy':
                    $("#tableVacMulti").show();
                    $("#tableVac").show();
                    vacancyLayer.setVisible(true);
                    break;
                default:
                    break;
            }
        }
    } catch (ex) {}
}

function applyCohortTheme(value) {
    if (value == "cbfirstThemeRefri" || value == "cbfirstThemeSocial" || value == "cbfirstThemeEcono" || value == "cbfirstThemeEnviro" || value == "cbfirstThemeMuap") {
        firstColor = rampFirstTheme[0];
        secondColor = rampFirstTheme[1];
        thirdColor = rampFirstTheme[2];
        fourthColor = rampFirstTheme[3];
        fifthColor = rampFirstTheme[4];
        sixthColor = rampFirstTheme[5];
        seventhColor = rampFirstTheme[6];
        eightColor = rampFirstTheme[7];
        ninthColor = rampFirstTheme[8];
    } else if (value == "cbsecondThemeRefri" || value == "cbsecondThemeSocial" || value == "cbsecondThemeEcono" || value == "cbsecondThemeEnviro" || value == "cbsecondThemeMuap") {
        firstColor = rampSecondTheme[0];
        secondColor = rampSecondTheme[1];
        thirdColor = rampSecondTheme[2];
        fourthColor = rampSecondTheme[3];
        fifthColor = rampSecondTheme[4];
        sixthColor = rampSecondTheme[5];
        seventhColor = rampSecondTheme[6];
        eightColor = rampSecondTheme[7];
        ninthColor = rampSecondTheme[8];
    } else if (value == "cbthirdThemeRefri" || value == "cbthirdThemeSocial" || value == "cbthirdThemeEcono" || value == "cbthirdThemeEnviro" || value == "cbthirdThemeMuap") {
        firstColor = rampThirdTheme[0];
        secondColor = rampThirdTheme[1];
        thirdColor = rampThirdTheme[2];
        fourthColor = rampThirdTheme[3];
        fifthColor = rampThirdTheme[4];
        sixthColor = rampThirdTheme[5];
        seventhColor = rampThirdTheme[6];
        eightColor = rampThirdTheme[7];
        ninthColor = rampThirdTheme[8];
    }
	turnCondLegendOff();
    updateLook();
}

function applyCohortThemeFood(value) {
    if (value == "cbfirstThemeFood") {
        firstColor = rampFirstTheme[0];
        secondColor = rampFirstTheme[1];
        thirdColor = rampFirstTheme[2];
        fourthColor = rampFirstTheme[3];
        fifthColor = rampFirstTheme[4];
        sixthColor = rampFirstTheme[5];
        seventhColor = rampFirstTheme[6];
        eightColor = rampFirstTheme[7];
        ninthColor = rampFirstTheme[8];
    } else if (value == "cbsecondThemeFood") {
        firstColor = rampSecondTheme[0];
        secondColor = rampSecondTheme[1];
        thirdColor = rampSecondTheme[2];
        fourthColor = rampSecondTheme[3];
        fifthColor = rampSecondTheme[4];
        sixthColor = rampSecondTheme[5];
        seventhColor = rampSecondTheme[6];
        eightColor = rampSecondTheme[7];
        ninthColor = rampSecondTheme[8];
    } else if (value == "cbthirdThemeFood") {
        firstColor = rampThirdTheme[0];
        secondColor = rampThirdTheme[1];
        thirdColor = rampThirdTheme[2];
        fourthColor = rampThirdTheme[3];
        fifthColor = rampThirdTheme[4];
        sixthColor = rampThirdTheme[5];
        seventhColor = rampThirdTheme[6];
        eightColor = rampThirdTheme[7];
        ninthColor = rampThirdTheme[8];
    }
	// turnCondLegendOff();
    updateLook();
}

function applyCohortThemeEcono(value) {
    if (value == "cbfirstThemeEconomicTwo") {
        firstColor = rampFirstTheme[0];
        secondColor = rampFirstTheme[1];
        thirdColor = rampFirstTheme[2];
        fourthColor = rampFirstTheme[3];
        fifthColor = rampFirstTheme[4];
        sixthColor = rampFirstTheme[5];
        seventhColor = rampFirstTheme[6];
        eightColor = rampFirstTheme[7];
        ninthColor = rampFirstTheme[8];
    } else if (value == "cbsecondThemeEconomicTwo") {
        firstColor = rampSecondTheme[0];
        secondColor = rampSecondTheme[1];
        thirdColor = rampSecondTheme[2];
        fourthColor = rampSecondTheme[3];
        fifthColor = rampSecondTheme[4];
        sixthColor = rampSecondTheme[5];
        seventhColor = rampSecondTheme[6];
        eightColor = rampSecondTheme[7];
        ninthColor = rampSecondTheme[8];
    } else if (value == "cbthirdThemeEconomicTwo") {
        firstColor = rampThirdTheme[0];
        secondColor = rampThirdTheme[1];
        thirdColor = rampThirdTheme[2];
        fourthColor = rampThirdTheme[3];
        fifthColor = rampThirdTheme[4];
        sixthColor = rampThirdTheme[5];
        seventhColor = rampThirdTheme[6];
        eightColor = rampThirdTheme[7];
        ninthColor = rampThirdTheme[8];
    }

	updateLookEcono();
}

function setFramesEcono() {
    try {
        $("#popup-closer").click();
    } catch (ex) {}

    if ($("#selFramesEconomicTwo").val() == "black") {
        frameBorder = '#000000';
    }
    if ($("#selFramesEconomicTwo").val() == "darkgray") {
        frameBorder = '#A9A9A9';
    }
    if ($("#selFramesEconomicTwo").val() == "lightgray") {
        frameBorder = '#D3D3D3';
    }
    if ($("#selFramesEconomicTwo").val() == "white") {
        frameBorder = '#FFFFFF';
    }
    updateLookEcono();
}

function updateLookEcono() {
	if ($("#switchFramesEconomicTwo").prop('checked'))
        changeFramesEcono('on');
	else
		changeFramesEcono('off');
}

function changeFramesEcono(value) {
    if ($('#switchFramesEconomicTwo').prop('checked'))
        $("#divSelFramesEconomicTwo").show();
    else
        $("#divSelFramesEconomicTwo").hide();

    if ($("#cohortOptsEconomicTwo").val() == "divergent") {
        checkAndUpdateLegendCohortsEconoTwo('divergent');
        if (value == "off") {
            sldUrbanRural = '<?xml version="1.0" encoding="ISO-8859-1"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld http://schemas.opengis.net/sld/1.0.0/StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:UrbanRural_2013</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>rucc_2013</ogc:PropertyName><ogc:Literal>1</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>rucc_2013</ogc:PropertyName><ogc:Literal>2</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>rucc_2013</ogc:PropertyName><ogc:Literal>3</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>rucc_2013</ogc:PropertyName><ogc:Literal>4</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>rucc_2013</ogc:PropertyName><ogc:Literal>5</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>rucc_2013</ogc:PropertyName><ogc:Literal>6</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>rucc_2013</ogc:PropertyName><ogc:Literal>7</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>rucc_2013</ogc:PropertyName><ogc:Literal>8</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>rucc_2013</ogc:PropertyName><ogc:Literal>9</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
			
            sldDieselThirteen = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:dieseltaxrates</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>thirteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>14</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>16</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>thirteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>16</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>19</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>thirteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>19</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>21</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>thirteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>21</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>23</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>thirteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>23</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>thirteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>27</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>thirteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>27</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>30</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>thirteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>30</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>33</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>thirteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>33</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>52</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldDieselSeventen = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:dieseltaxrates</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>seventeen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>14</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>17</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>seventeen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>17</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>19</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>seventeen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>19</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>21</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>seventeen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>21</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>seventeen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>27.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>seventeen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>27.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>30</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>seventeen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>30</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>32</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>seventeen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>32</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>35</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>seventeen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>35</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>75</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldDieselEighteen = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:dieseltaxrates</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>eighteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>14</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>19</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>eighteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>19</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>21</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>eighteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>21</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>23</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>eighteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>23</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>eighteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>27.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>eighteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>27.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>30</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>eighteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>30</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>33</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>eighteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>33</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>40</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>eighteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>40</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>75</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldDieselOneYear = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:dieseltaxrates</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>6</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>6</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>9</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>9</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>30</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldDieselOneYearPer = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:dieseltaxrates</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>35</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>35</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>65</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>65</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>85</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldDieselFiveYear = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:dieseltaxrates</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>8</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>8</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>20</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>20</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>40</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldDieselFiveYearPer = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:dieseltaxrates</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-20</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>20</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>20</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>35</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>35</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>50</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>50</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>75</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>75</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>155</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldEmploymentJobsTotal = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:employment</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>c000</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>c000</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>c000</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>c000</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>c000</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>c000</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>c000</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>50</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>c000</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>50</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>200</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>c000</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>200</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>73000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldEmploymentJobsBachelor = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:employment</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cd04</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cd04</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cd04</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cd04</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cd04</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cd04</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cd04</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>20</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cd04</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>20</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>100</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cd04</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>100</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>24000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldlabor_force = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:laucnty</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>labor_force</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>100</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>labor_force</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>labor_force</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>6500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>labor_force</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>6500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>labor_force</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>labor_force</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>20500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>labor_force</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>20500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>42000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>labor_force</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>42000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>100000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>labor_force</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>100000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5100000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldunemployed = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:laucnty</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployed</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>90</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployed</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>90</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>175</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployed</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>175</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>300</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployed</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>300</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>425</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployed</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>425</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>650</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployed</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>650</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployed</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployed</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployed</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>250000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldunemployment_perc = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:laucnty</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployment_perc</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2.8</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployment_perc</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2.8</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3.2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployment_perc</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3.2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3.6</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployment_perc</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3.6</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4.2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployment_perc</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4.2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4.6</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployment_perc</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4.6</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployment_perc</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployment_perc</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>6.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployment_perc</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>6.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>20</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldnoofstores = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:consumermarket</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>noofstore</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>noofstore</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>noofstore</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>noofstore</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>18</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>noofstore</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>18</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>noofstore</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>35</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>noofstore</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>35</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>50</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>noofstore</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>50</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>100</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>noofstore</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>100</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2400</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldjob_gravity = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:lai</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>job_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>55</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>job_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>6000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>job_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>6000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>job_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>18250</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>job_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>18250</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>30000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>job_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>30000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>33000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>job_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>33000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>44500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>job_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>44500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>78250</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>job_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>78250</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1610000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldretail_gravity = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:lai</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>retail_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>250</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>retail_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>250</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>retail_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>880</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>retail_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>880</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1430</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>retail_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1430</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2200</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>retail_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2200</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3300</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>retail_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3300</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>retail_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>retail_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>120000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldnooforganicgrowers = '<?xml version="1.0" encoding="iso-8859-1"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sldStyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:crops_prod</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>9</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>8</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>7</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>6</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>5</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>4</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>3</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>2</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>1</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldnoofestt = '<?xml version="1.0" encoding="iso-8859-1"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sldStyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:estt</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>9</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>8</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>7</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>6</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>5</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>4</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>3</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>2</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>1</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldnoofjobs = '<?xml version="1.0" encoding="iso-8859-1"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sldStyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:food_report</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>num_cohort</ogc:PropertyName><ogc:Literal>9</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>num_cohort</ogc:PropertyName><ogc:Literal>8</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>num_cohort</ogc:PropertyName><ogc:Literal>7</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>num_cohort</ogc:PropertyName><ogc:Literal>6</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>num_cohort</ogc:PropertyName><ogc:Literal>5</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>num_cohort</ogc:PropertyName><ogc:Literal>4</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>num_cohort</ogc:PropertyName><ogc:Literal>3</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>num_cohort</ogc:PropertyName><ogc:Literal>2</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>num_cohort</ogc:PropertyName><ogc:Literal>1</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldpercentjobs = '<?xml version="1.0" encoding="iso-8859-1"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sldStyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:food_report</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>percent_cohorts</ogc:PropertyName><ogc:Literal>9</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>percent_cohorts</ogc:PropertyName><ogc:Literal>8</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>percent_cohorts</ogc:PropertyName><ogc:Literal>7</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>percent_cohorts</ogc:PropertyName><ogc:Literal>6</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>percent_cohorts</ogc:PropertyName><ogc:Literal>5</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>percent_cohorts</ogc:PropertyName><ogc:Literal>4</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>percent_cohorts</ogc:PropertyName><ogc:Literal>3</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>percent_cohorts</ogc:PropertyName><ogc:Literal>2</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>percent_cohorts</ogc:PropertyName><ogc:Literal>1</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
		
            sldhydroponic_growers_county = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:hydroponic_growers_county</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>count</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>count</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>count</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>count</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>count</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>6</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>count</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>6</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>count</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>9</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>count</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>9</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>11</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>count</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>11</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldmedian_smoc_mortgage = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:lai</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_smoc_mortgage</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>350</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>900</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_smoc_mortgage</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>900</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_smoc_mortgage</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1100</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_smoc_mortgage</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1100</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1200</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_smoc_mortgage</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1200</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1400</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_smoc_mortgage</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1400</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_smoc_mortgage</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_smoc_mortgage</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2600</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_smoc_mortgage</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2600</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4002</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldmedian_gross_rent = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:lai</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_gross_rent</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>90</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>600</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_gross_rent</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>600</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>700</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_gross_rent</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>700</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>800</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_gross_rent</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>800</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>900</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_gross_rent</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>900</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_gross_rent</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1100</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_gross_rent</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1100</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1400</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_gross_rent</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1400</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1800</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_gross_rent</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1800</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3505</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldavg_h_cost = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:lai</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avg_h_cost</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>225</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>800</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avg_h_cost</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>800</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>900</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avg_h_cost</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>900</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avg_h_cost</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1100</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avg_h_cost</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1100</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1250</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avg_h_cost</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1250</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1400</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avg_h_cost</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1400</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1600</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avg_h_cost</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1600</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2200</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avg_h_cost</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2200</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldcommuters_per_hh = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:lai</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>commuters_per_hh</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.8</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>commuters_per_hh</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.8</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.9</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>commuters_per_hh</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.9</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1.05</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>commuters_per_hh</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1.05</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1.1</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>commuters_per_hh</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1.1</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1.2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>commuters_per_hh</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1.2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1.3</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>commuters_per_hh</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1.3</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1.4</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>commuters_per_hh</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1.4</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1.6</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>commuters_per_hh</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1.6</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>6.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldmedian_hh_income = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:lai</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_hh_income</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3250</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>30000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_hh_income</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>30000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>36000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_hh_income</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>36000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>41500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_hh_income</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>41500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>47000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_hh_income</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>47000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>58500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_hh_income</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>52000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>65500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_hh_income</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>58500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>77000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_hh_income</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>77000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>100000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_hh_income</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>100000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>250005</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldmedian_commute = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:lai</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_commute</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.3</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>6.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_commute</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>6.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>8.2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_commute</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>8.2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>9.8</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_commute</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>9.8</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>12</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_commute</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>12</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_commute</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>18</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_commute</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>18</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>22.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_commute</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>22.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>27.7</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_commute</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>27.7</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>375</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldagsum = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:ageconomic</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>sum</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>sum</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>sum</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>sum</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>sum</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>sum</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>sum</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>sum</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>sum</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>86</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldagr17 = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:ageconomic</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r17</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.05</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r17</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.05</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.15</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r17</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.15</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r17</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r17</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.26</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r17</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.26</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.35</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r17</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.35</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r17</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.7</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r17</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.7</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldagr18 = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:ageconomic</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r18</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.1</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r18</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.1</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.12</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r18</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.12</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r18</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r18</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.3</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r18</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.3</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.4</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r18</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.4</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r18</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.8</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r18</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.8</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
		} else if (value == "on") {			
            sldUrbanRural = '<?xml version="1.0" encoding="ISO-8859-1"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld http://schemas.opengis.net/sld/1.0.0/StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:UrbanRural_2013</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>rucc_2013</ogc:PropertyName><ogc:Literal>1</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>rucc_2013</ogc:PropertyName><ogc:Literal>2</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>rucc_2013</ogc:PropertyName><ogc:Literal>3</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>rucc_2013</ogc:PropertyName><ogc:Literal>4</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>rucc_2013</ogc:PropertyName><ogc:Literal>5</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>rucc_2013</ogc:PropertyName><ogc:Literal>6</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>rucc_2013</ogc:PropertyName><ogc:Literal>7</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>rucc_2013</ogc:PropertyName><ogc:Literal>8</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>rucc_2013</ogc:PropertyName><ogc:Literal>9</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
			
            sldDieselThirteen = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:dieseltaxrates</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>thirteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>14</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>16</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>thirteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>16</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>19</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>thirteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>19</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>21</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>thirteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>21</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>24</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>thirteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>24</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>thirteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>27</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>thirteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>27</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>30</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>thirteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>30</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>33</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>thirteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>33</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>52</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldDieselSeventen = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:dieseltaxrates</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>seventeen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>14</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>17</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>seventeen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>17</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>19</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>seventeen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>19</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>21</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>seventeen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>21</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>seventeen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>27.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>seventeen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>27.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>30</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>seventeen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>30</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>32</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>seventeen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>32</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>35</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>seventeen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>35</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>75</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldDieselEighteen = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:dieseltaxrates</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>eighteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>14</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>19</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>eighteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>19</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>21</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>eighteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>21</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>23</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>eighteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>23</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>eighteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>27.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>eighteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>27.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>30</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>eighteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>30</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>33</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>eighteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>33</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>40</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>eighteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>40</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>75</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldDieselOneYear = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:dieseltaxrates</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>6</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>6</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>9</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>9</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>30</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldDieselOneYearPer = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:dieseltaxrates</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>35</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>35</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>65</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>65</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>85</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldDieselFiveYear = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:dieseltaxrates</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>8</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>8</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>20</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>20</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>40</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldDieselFiveYearPer = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:dieseltaxrates</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-20</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>20</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>20</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>35</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>35</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>50</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>50</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>75</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>75</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>155</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
			
			sldEmploymentJobsTotal = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:employment</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>c000</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>c000</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>c000</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>c000</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>c000</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>c000</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>c000</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>50</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>c000</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>50</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>200</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>c000</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>200</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>73000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldEmploymentJobsBachelor = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:employment</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cd04</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cd04</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cd04</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cd04</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cd04</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cd04</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cd04</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>20</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cd04</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>20</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>100</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cd04</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>100</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>24000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldlabor_force = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:laucnty</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>labor_force</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>100</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>labor_force</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>labor_force</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>6500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>labor_force</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>6500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>labor_force</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>labor_force</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>20500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>labor_force</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>20500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>42000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>labor_force</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>42000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>100000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>labor_force</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>100000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5100000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldunemployed = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:laucnty</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployed</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>90</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployed</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>90</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>175</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployed</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>175</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>300</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployed</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>300</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>425</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployed</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>425</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>650</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployed</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>650</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployed</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployed</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployed</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>250000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldunemployment_perc = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:laucnty</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployment_perc</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2.8</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployment_perc</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2.8</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3.2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployment_perc</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3.2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3.6</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployment_perc</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3.6</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4.2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployment_perc</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4.2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4.6</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployment_perc</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4.6</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployment_perc</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployment_perc</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>6.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployment_perc</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>6.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>20</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldnoofstores = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:consumermarket</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>noofstore</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>noofstore</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>noofstore</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>noofstore</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>18</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>noofstore</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>18</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>noofstore</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>35</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>noofstore</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>35</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>50</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>noofstore</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>50</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>100</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>noofstore</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>100</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2400</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldjob_gravity = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:lai</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>job_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>55</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>job_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>6000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>job_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>6000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>job_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>18250</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>job_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>18250</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>30000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>job_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>30000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>33000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>job_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>33000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>44500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>job_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>44500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>78250</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>job_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>78250</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1610000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldretail_gravity = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:lai</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>retail_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>250</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>retail_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>250</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>retail_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>880</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>retail_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>880</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1430</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>retail_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1430</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2200</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>retail_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2200</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3300</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>retail_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3300</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>retail_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>retail_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>120000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldnooforganicgrowers = '<?xml version="1.0" encoding="iso-8859-1"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sldStyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:crops_prod</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>9</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>8</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>7</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>6</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>5</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>4</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>3</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>2</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>1</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldnoofestt = '<?xml version="1.0" encoding="iso-8859-1"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sldStyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:estt</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>9</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>8</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>7</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>6</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>5</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>4</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>3</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>2</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>1</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldnoofjobs = '<?xml version="1.0" encoding="iso-8859-1"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sldStyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:food_report</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>num_cohort</ogc:PropertyName><ogc:Literal>9</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>num_cohort</ogc:PropertyName><ogc:Literal>8</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>num_cohort</ogc:PropertyName><ogc:Literal>7</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>num_cohort</ogc:PropertyName><ogc:Literal>6</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>num_cohort</ogc:PropertyName><ogc:Literal>5</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>num_cohort</ogc:PropertyName><ogc:Literal>4</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>num_cohort</ogc:PropertyName><ogc:Literal>3</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>num_cohort</ogc:PropertyName><ogc:Literal>2</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>num_cohort</ogc:PropertyName><ogc:Literal>1</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldpercentjobs = '<?xml version="1.0" encoding="iso-8859-1"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sldStyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:food_report</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>percent_cohorts</ogc:PropertyName><ogc:Literal>9</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>percent_cohorts</ogc:PropertyName><ogc:Literal>8</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>percent_cohorts</ogc:PropertyName><ogc:Literal>7</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>percent_cohorts</ogc:PropertyName><ogc:Literal>6</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>percent_cohorts</ogc:PropertyName><ogc:Literal>5</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>percent_cohorts</ogc:PropertyName><ogc:Literal>4</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>percent_cohorts</ogc:PropertyName><ogc:Literal>3</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>percent_cohorts</ogc:PropertyName><ogc:Literal>2</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>percent_cohorts</ogc:PropertyName><ogc:Literal>1</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
		
            sldhydroponic_growers_county = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:hydroponic_growers_county</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>count</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>count</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>count</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>count</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>count</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>6</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>count</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>6</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>count</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>9</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>count</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>9</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>11</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>count</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>11</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldmedian_smoc_mortgage = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:lai</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_smoc_mortgage</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>350</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>900</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_smoc_mortgage</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>900</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_smoc_mortgage</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1100</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_smoc_mortgage</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1100</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1200</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_smoc_mortgage</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1200</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1400</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_smoc_mortgage</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1400</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_smoc_mortgage</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_smoc_mortgage</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2600</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_smoc_mortgage</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2600</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4002</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldmedian_gross_rent = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:lai</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_gross_rent</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>90</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>600</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_gross_rent</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>600</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>700</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_gross_rent</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>700</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>800</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_gross_rent</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>800</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>900</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_gross_rent</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>900</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_gross_rent</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1100</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_gross_rent</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1100</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1400</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_gross_rent</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1400</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1800</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_gross_rent</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1800</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3505</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldavg_h_cost = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:lai</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avg_h_cost</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>225</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>800</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avg_h_cost</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>800</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>900</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avg_h_cost</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>900</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avg_h_cost</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1100</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avg_h_cost</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1100</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1250</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avg_h_cost</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1250</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1400</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avg_h_cost</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1400</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1600</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avg_h_cost</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1600</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2200</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avg_h_cost</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2200</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldcommuters_per_hh = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:lai</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>commuters_per_hh</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.8</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>commuters_per_hh</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.8</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.9</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>commuters_per_hh</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.9</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1.05</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>commuters_per_hh</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1.05</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1.1</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>commuters_per_hh</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1.1</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1.2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>commuters_per_hh</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1.2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1.3</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>commuters_per_hh</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1.3</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1.4</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>commuters_per_hh</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1.4</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1.6</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>commuters_per_hh</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1.6</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>6.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldmedian_hh_income = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:lai</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_hh_income</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3250</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>30000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_hh_income</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>30000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>36000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_hh_income</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>36000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>41500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_hh_income</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>41500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>47000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_hh_income</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>47000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>58500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_hh_income</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>52000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>65500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_hh_income</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>58500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>77000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_hh_income</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>77000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>100000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_hh_income</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>100000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>250005</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldmedian_commute = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:lai</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_commute</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.3</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>6.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_commute</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>6.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>8.2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_commute</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>8.2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>9.8</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_commute</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>9.8</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>12</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_commute</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>12</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_commute</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>18</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_commute</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>18</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>22.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_commute</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>22.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>27.7</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_commute</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>27.7</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>375</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldagsum = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:ageconomic</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>sum</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>sum</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>sum</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>sum</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>sum</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>sum</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>sum</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>sum</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>sum</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>86</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldagr17 = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:ageconomic</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r17</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.05</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r17</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.05</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.15</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r17</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.15</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r17</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r17</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.26</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r17</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.26</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.35</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r17</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.35</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r17</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.7</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r17</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.7</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldagr18 = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:ageconomic</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r18</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.1</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r18</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.1</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.12</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r18</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.12</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r18</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r18</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.3</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r18</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.3</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.4</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r18</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.4</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r18</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.8</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r18</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.8</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
		}
    } else {
        checkAndUpdateLegendCohortsEconoTwo('standard');
        if (value == "off") {
            sldUrbanRural = '<?xml version="1.0" encoding="ISO-8859-1"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld http://schemas.opengis.net/sld/1.0.0/StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:UrbanRural_2013</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>rucc_2013</ogc:PropertyName><ogc:Literal>1</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>rucc_2013</ogc:PropertyName><ogc:Literal>2</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>rucc_2013</ogc:PropertyName><ogc:Literal>3</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>rucc_2013</ogc:PropertyName><ogc:Literal>4</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>rucc_2013</ogc:PropertyName><ogc:Literal>5</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>rucc_2013</ogc:PropertyName><ogc:Literal>6</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>rucc_2013</ogc:PropertyName><ogc:Literal>7</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>rucc_2013</ogc:PropertyName><ogc:Literal>8</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>rucc_2013</ogc:PropertyName><ogc:Literal>9</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
			
            sldDieselThirteen = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:dieseltaxrates</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>thirteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>14</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>16</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>thirteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>16</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>19</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>thirteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>19</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>21</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>thirteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>21</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>24</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>thirteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>24</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>thirteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>27</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>thirteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>27</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>30</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>thirteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>30</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>33</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>thirteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>33</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>52</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldDieselSeventen = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:dieseltaxrates</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>seventeen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>14</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>17</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>seventeen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>17</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>19</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>seventeen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>19</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>21</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>seventeen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>21</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>seventeen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>27.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>seventeen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>27.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>30</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>seventeen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>30</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>32</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>seventeen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>32</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>35</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>seventeen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>35</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>75</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldDieselEighteen = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:dieseltaxrates</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>eighteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>14</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>19</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>eighteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>19</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>21</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>eighteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>21</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>23</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>eighteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>23</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>eighteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>27.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>eighteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>27.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>30</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>eighteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>30</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>33</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>eighteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>33</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>40</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>eighteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>40</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>75</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldDieselOneYear = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:dieseltaxrates</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>6</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>6</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>9</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>9</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>30</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldDieselOneYearPer = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:dieseltaxrates</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>35</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>35</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>65</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>65</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>85</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldDieselFiveYear = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:dieseltaxrates</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>8</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>8</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>20</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>20</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>40</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldDieselFiveYearPer = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:dieseltaxrates</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-20</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>20</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>20</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>35</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>35</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>50</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>50</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>75</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>75</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>155</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldEmploymentJobsTotal = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:employment</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>c000</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>c000</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>c000</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>c000</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>c000</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>c000</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>c000</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>50</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>c000</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>50</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>200</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>c000</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>200</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>73000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldEmploymentJobsBachelor = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:employment</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cd04</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cd04</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cd04</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cd04</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cd04</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cd04</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cd04</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>20</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cd04</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>20</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>100</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cd04</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>100</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>24000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldlabor_force = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:laucnty</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>labor_force</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>100</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>labor_force</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>labor_force</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>6500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>labor_force</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>6500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>labor_force</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>labor_force</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>20500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>labor_force</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>20500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>42000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>labor_force</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>42000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>100000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>labor_force</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>100000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5100000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldunemployed = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:laucnty</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployed</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>90</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployed</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>90</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>175</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployed</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>175</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>300</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployed</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>300</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>425</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployed</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>425</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>650</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployed</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>650</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployed</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployed</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployed</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>250000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldunemployment_perc = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:laucnty</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployment_perc</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2.8</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployment_perc</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2.8</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3.2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployment_perc</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3.2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3.6</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployment_perc</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3.6</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4.2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployment_perc</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4.2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4.6</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployment_perc</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4.6</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployment_perc</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployment_perc</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>6.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployment_perc</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>6.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>20</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldnoofstores = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:consumermarket</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>noofstore</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>noofstore</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>noofstore</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>noofstore</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>18</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>noofstore</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>18</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>noofstore</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>35</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>noofstore</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>35</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>50</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>noofstore</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>50</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>100</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>noofstore</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>100</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2400</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldjob_gravity = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:lai</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>job_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>55</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>job_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>6000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>job_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>6000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>job_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>18250</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>job_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>18250</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>30000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>job_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>30000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>33000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>job_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>33000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>44500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>job_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>44500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>78250</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>job_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>78250</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1610000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldretail_gravity = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:lai</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>retail_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>250</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>retail_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>250</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>retail_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>880</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>retail_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>880</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1430</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>retail_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1430</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2200</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>retail_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2200</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3300</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>retail_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3300</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>retail_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>retail_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>120000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldnooforganicgrowers = '<?xml version="1.0" encoding="iso-8859-1"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sldStyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:crops_prod</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>9</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>8</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>7</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>6</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>5</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>4</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>3</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>2</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>1</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldnoofestt = '<?xml version="1.0" encoding="iso-8859-1"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sldStyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:estt</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>9</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>8</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>7</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>6</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>5</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>4</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>3</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>2</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>1</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldnoofjobs = '<?xml version="1.0" encoding="iso-8859-1"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sldStyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:food_report</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>num_cohort</ogc:PropertyName><ogc:Literal>9</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>num_cohort</ogc:PropertyName><ogc:Literal>8</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>num_cohort</ogc:PropertyName><ogc:Literal>7</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>num_cohort</ogc:PropertyName><ogc:Literal>6</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>num_cohort</ogc:PropertyName><ogc:Literal>5</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>num_cohort</ogc:PropertyName><ogc:Literal>4</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>num_cohort</ogc:PropertyName><ogc:Literal>3</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>num_cohort</ogc:PropertyName><ogc:Literal>2</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>num_cohort</ogc:PropertyName><ogc:Literal>1</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldpercentjobs = '<?xml version="1.0" encoding="iso-8859-1"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sldStyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:food_report</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>percent_cohorts</ogc:PropertyName><ogc:Literal>9</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>percent_cohorts</ogc:PropertyName><ogc:Literal>8</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>percent_cohorts</ogc:PropertyName><ogc:Literal>7</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>percent_cohorts</ogc:PropertyName><ogc:Literal>6</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>percent_cohorts</ogc:PropertyName><ogc:Literal>5</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>percent_cohorts</ogc:PropertyName><ogc:Literal>4</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>percent_cohorts</ogc:PropertyName><ogc:Literal>3</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>percent_cohorts</ogc:PropertyName><ogc:Literal>2</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>percent_cohorts</ogc:PropertyName><ogc:Literal>1</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
		
            sldhydroponic_growers_county = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:hydroponic_growers_county</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>count</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>count</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>count</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>count</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>count</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>6</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>count</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>6</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>count</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>9</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>count</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>9</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>11</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>count</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>11</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldmedian_smoc_mortgage = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:lai</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_smoc_mortgage</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>350</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>900</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_smoc_mortgage</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>900</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_smoc_mortgage</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1100</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_smoc_mortgage</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1100</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1200</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_smoc_mortgage</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1200</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1400</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_smoc_mortgage</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1400</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_smoc_mortgage</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_smoc_mortgage</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2600</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_smoc_mortgage</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2600</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4002</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldmedian_gross_rent = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:lai</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_gross_rent</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>90</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>600</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_gross_rent</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>600</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>700</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_gross_rent</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>700</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>800</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_gross_rent</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>800</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>900</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_gross_rent</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>900</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_gross_rent</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1100</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_gross_rent</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1100</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1400</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_gross_rent</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1400</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1800</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_gross_rent</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1800</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3505</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldavg_h_cost = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:lai</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avg_h_cost</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>225</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>800</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avg_h_cost</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>800</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>900</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avg_h_cost</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>900</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avg_h_cost</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1100</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avg_h_cost</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1100</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1250</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avg_h_cost</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1250</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1400</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avg_h_cost</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1400</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1600</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avg_h_cost</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1600</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2200</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avg_h_cost</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2200</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldcommuters_per_hh = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:lai</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>commuters_per_hh</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.8</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>commuters_per_hh</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.8</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.9</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>commuters_per_hh</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.9</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1.05</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>commuters_per_hh</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1.05</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1.1</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>commuters_per_hh</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1.1</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1.2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>commuters_per_hh</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1.2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1.3</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>commuters_per_hh</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1.3</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1.4</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>commuters_per_hh</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1.4</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1.6</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>commuters_per_hh</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1.6</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>6.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldmedian_hh_income = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:lai</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_hh_income</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3250</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>30000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_hh_income</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>30000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>36000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_hh_income</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>36000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>41500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_hh_income</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>41500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>47000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_hh_income</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>47000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>58500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_hh_income</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>58500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>65500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_hh_income</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>65500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>77000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_hh_income</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>77000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>100000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_hh_income</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>100000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>250005</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldmedian_commute = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:lai</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_commute</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.3</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>6.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_commute</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>6.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>8.2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_commute</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>8.2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>9.8</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_commute</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>9.8</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>12</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_commute</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>12</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_commute</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>18</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_commute</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>18</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>22.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_commute</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>22.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>27.7</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_commute</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>27.7</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>375</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldagsum = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:ageconomic</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>sum</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>sum</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>sum</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>sum</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>sum</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>sum</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>sum</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>sum</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>sum</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>86</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldagr17 = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:ageconomic</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r17</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.05</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r17</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.05</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.15</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r17</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.15</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r17</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r17</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.26</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r17</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.26</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.35</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r17</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.35</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r17</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.7</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r17</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.7</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldagr18 = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:ageconomic</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r18</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.1</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r18</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.1</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.12</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r18</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.12</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r18</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r18</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.3</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r18</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.3</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.4</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r18</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.4</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r18</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.8</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r18</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.8</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
		} else if (value == "on") {
            sldUrbanRural = '<?xml version="1.0" encoding="ISO-8859-1"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld http://schemas.opengis.net/sld/1.0.0/StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:UrbanRural_2013</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>rucc_2013</ogc:PropertyName><ogc:Literal>1</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>rucc_2013</ogc:PropertyName><ogc:Literal>2</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>rucc_2013</ogc:PropertyName><ogc:Literal>3</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>rucc_2013</ogc:PropertyName><ogc:Literal>4</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>rucc_2013</ogc:PropertyName><ogc:Literal>5</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>rucc_2013</ogc:PropertyName><ogc:Literal>6</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>rucc_2013</ogc:PropertyName><ogc:Literal>7</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>rucc_2013</ogc:PropertyName><ogc:Literal>8</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>rucc_2013</ogc:PropertyName><ogc:Literal>9</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
			
            sldDieselThirteen = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:dieseltaxrates</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>thirteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>14</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>16</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>thirteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>16</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>19</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>thirteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>19</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>21</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>thirteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>21</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>24</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>thirteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>24</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>thirteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>27</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>thirteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>27</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>30</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>thirteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>30</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>33</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>thirteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>33</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>52</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldDieselSeventen = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:dieseltaxrates</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>seventeen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>14</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>17</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>seventeen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>17</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>19</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>seventeen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>19</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>21</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>seventeen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>21</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>seventeen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>27.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>seventeen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>27.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>30</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>seventeen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>30</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>32</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>seventeen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>32</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>35</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>seventeen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>35</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>75</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldDieselEighteen = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:dieseltaxrates</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>eighteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>14</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>19</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>eighteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>19</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>21</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>eighteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>21</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>23</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>eighteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>23</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>eighteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>27.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>eighteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>27.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>30</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>eighteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>30</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>33</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>eighteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>33</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>40</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>eighteen</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>40</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>75</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldDieselOneYear = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:dieseltaxrates</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>6</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>6</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>9</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>9</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>30</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldDieselOneYearPer = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:dieseltaxrates</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>35</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>35</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>65</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>oneyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>65</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>85</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldDieselFiveYear = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:dieseltaxrates</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>8</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>8</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>20</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyear</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>20</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>40</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldDieselFiveYearPer = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:dieseltaxrates</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-20</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>-5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>-5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>20</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>20</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>35</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>35</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>50</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>50</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>75</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>fiveyearper</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>75</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>155</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldEmploymentJobsTotal = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:employment</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>c000</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>c000</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>c000</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>c000</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>c000</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>c000</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>c000</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>50</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>c000</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>50</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>200</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>c000</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>200</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>73000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldEmploymentJobsBachelor = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:employment</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cd04</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cd04</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cd04</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cd04</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cd04</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cd04</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cd04</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>20</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cd04</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>20</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>100</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cd04</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>100</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>24000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldlabor_force = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:laucnty</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>labor_force</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>100</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>labor_force</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>labor_force</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>6500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>labor_force</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>6500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>labor_force</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>labor_force</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>20500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>labor_force</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>20500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>42000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>labor_force</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>42000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>100000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>labor_force</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>100000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5100000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldunemployed = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:laucnty</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployed</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>90</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployed</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>90</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>175</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployed</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>175</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>300</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployed</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>300</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>425</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployed</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>425</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>650</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployed</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>650</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployed</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployed</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployed</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>250000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldunemployment_perc = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:laucnty</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployment_perc</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2.8</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployment_perc</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2.8</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3.2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployment_perc</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3.2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3.6</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployment_perc</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3.6</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4.2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployment_perc</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4.2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4.6</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployment_perc</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4.6</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployment_perc</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployment_perc</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>6.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>unemployment_perc</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>6.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>20</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldnoofstores = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:consumermarket</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>noofstore</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>noofstore</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>noofstore</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>noofstore</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>18</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>noofstore</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>18</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>noofstore</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>35</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>noofstore</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>35</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>50</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>noofstore</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>50</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>100</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>noofstore</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>100</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2400</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldjob_gravity = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:lai</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>job_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>55</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>job_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>6000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>job_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>6000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>job_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>18250</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>job_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>18250</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>30000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>job_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>30000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>33000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>job_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>33000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>44500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>job_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>44500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>78250</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>job_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>78250</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1610000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldretail_gravity = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:lai</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>retail_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>250</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>retail_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>250</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>retail_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>880</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>retail_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>880</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1430</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>retail_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1430</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2200</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>retail_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2200</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3300</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>retail_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3300</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>retail_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>retail_gravity</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>120000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldnooforganicgrowers = '<?xml version="1.0" encoding="iso-8859-1"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sldStyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:crops_prod</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>9</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>8</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>7</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>6</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>5</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>4</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>3</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>2</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>1</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldnoofestt = '<?xml version="1.0" encoding="iso-8859-1"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sldStyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:estt</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>9</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>8</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>7</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>6</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>5</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>4</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>3</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>2</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>cohort</ogc:PropertyName><ogc:Literal>1</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldnoofjobs = '<?xml version="1.0" encoding="iso-8859-1"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sldStyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:food_report</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>num_cohort</ogc:PropertyName><ogc:Literal>9</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>num_cohort</ogc:PropertyName><ogc:Literal>8</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>num_cohort</ogc:PropertyName><ogc:Literal>7</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>num_cohort</ogc:PropertyName><ogc:Literal>6</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>num_cohort</ogc:PropertyName><ogc:Literal>5</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>num_cohort</ogc:PropertyName><ogc:Literal>4</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>num_cohort</ogc:PropertyName><ogc:Literal>3</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>num_cohort</ogc:PropertyName><ogc:Literal>2</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>num_cohort</ogc:PropertyName><ogc:Literal>1</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldpercentjobs = '<?xml version="1.0" encoding="iso-8859-1"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sldStyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:food_report</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>percent_cohorts</ogc:PropertyName><ogc:Literal>9</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>percent_cohorts</ogc:PropertyName><ogc:Literal>8</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>percent_cohorts</ogc:PropertyName><ogc:Literal>7</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>percent_cohorts</ogc:PropertyName><ogc:Literal>6</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>percent_cohorts</ogc:PropertyName><ogc:Literal>5</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>percent_cohorts</ogc:PropertyName><ogc:Literal>4</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>percent_cohorts</ogc:PropertyName><ogc:Literal>3</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>percent_cohorts</ogc:PropertyName><ogc:Literal>2</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>percent_cohorts</ogc:PropertyName><ogc:Literal>1</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter><CssParameter name="fill-opacity">1</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
		
            sldhydroponic_growers_county = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:hydroponic_growers_county</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>count</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>count</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>count</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>count</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>count</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>6</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>count</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>6</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>count</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>9</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>count</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>9</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>11</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>count</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>11</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldmedian_smoc_mortgage = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:lai</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_smoc_mortgage</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>350</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>900</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_smoc_mortgage</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>900</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_smoc_mortgage</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1100</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_smoc_mortgage</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1100</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1200</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_smoc_mortgage</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1200</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1400</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_smoc_mortgage</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1400</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_smoc_mortgage</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_smoc_mortgage</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2600</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_smoc_mortgage</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2600</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4002</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldmedian_gross_rent = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:lai</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_gross_rent</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>90</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>600</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_gross_rent</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>600</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>700</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_gross_rent</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>700</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>800</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_gross_rent</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>800</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>900</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_gross_rent</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>900</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_gross_rent</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1100</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_gross_rent</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1100</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1400</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_gross_rent</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1400</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1800</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_gross_rent</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1800</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3505</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldavg_h_cost = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:lai</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avg_h_cost</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>225</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>800</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avg_h_cost</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>800</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>900</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avg_h_cost</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>900</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avg_h_cost</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1100</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avg_h_cost</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1100</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1250</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avg_h_cost</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1250</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1400</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avg_h_cost</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1400</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1600</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avg_h_cost</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1600</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2200</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>avg_h_cost</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2200</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldcommuters_per_hh = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:lai</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>commuters_per_hh</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.8</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>commuters_per_hh</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.8</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.9</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>commuters_per_hh</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.9</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1.05</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>commuters_per_hh</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1.05</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1.1</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>commuters_per_hh</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1.1</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1.2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>commuters_per_hh</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1.2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1.3</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>commuters_per_hh</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1.3</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1.4</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>commuters_per_hh</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1.4</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1.6</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>commuters_per_hh</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1.6</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>6.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldmedian_hh_income = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:lai</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_hh_income</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3250</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>30000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_hh_income</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>30000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>36000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_hh_income</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>36000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>41500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_hh_income</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>41500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>47000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_hh_income</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>47000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>58500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_hh_income</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>58500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>65500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_hh_income</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>65500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>77000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_hh_income</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>77000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>100000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_hh_income</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>100000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>250005</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldmedian_commute = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:lai</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_commute</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.3</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>6.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_commute</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>6.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>8.2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_commute</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>8.2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>9.8</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_commute</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>9.8</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>12</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_commute</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>12</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_commute</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>18</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_commute</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>18</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>22.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_commute</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>22.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>27.7</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>median_commute</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>27.7</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>375</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldagsum = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:ageconomic</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>sum</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>sum</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>sum</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>sum</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>sum</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>sum</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>sum</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>sum</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>sum</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>86</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldagr17 = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:ageconomic</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r17</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.05</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r17</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.05</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.15</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r17</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.15</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r17</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r17</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.26</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r17</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.26</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.35</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r17</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.35</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r17</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.7</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r17</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.7</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

			sldagr18 = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:ageconomic</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r18</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.1</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r18</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.1</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.12</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r18</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.12</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.2</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r18</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.2</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.25</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r18</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.25</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.3</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r18</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.3</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.4</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r18</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.4</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.5</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r18</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.5</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>0.8</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>r18</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0.8</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
		}
    }

	if (value == "off") {
		sldopportunity = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0"  xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:opportunityzones</Name><UserStyle><FeatureTypeStyle><Rule><PolygonSymbolizer><Fill><CssParameter name="fill">#00FF00</CssParameter><CssParameter name="fill-opacity">0.3</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
	} else if (value == "on") {
		sldopportunity = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0"  xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:opportunityzones</Name><UserStyle><FeatureTypeStyle><Rule><PolygonSymbolizer><Fill><CssParameter name="fill">#00FF00</CssParameter><CssParameter name="fill-opacity">0.3</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
	}
	
	switch ($("#dieselSelect").val()) {
        case '2013':
			dieseltaxrates.getSource().updateParams({
				'SLD_Body': sldDieselThirteen
			});
            break;
        case '2017':
			dieseltaxrates.getSource().updateParams({
				'SLD_Body': sldDieselSeventen
			});
            break;
        case '2018':
			dieseltaxrates.getSource().updateParams({
				'SLD_Body': sldDieselEighteen
			});
            break;
        case 'oneyear':
			dieseltaxrates.getSource().updateParams({
				'SLD_Body': sldDieselOneYear
			});
            break;
        case 'oneyearper':
			dieseltaxrates.getSource().updateParams({
				'SLD_Body': sldDieselOneYearPer
			});
            break;
        case 'fiveyear':
			dieseltaxrates.getSource().updateParams({
				'SLD_Body': sldDieselFiveYear
			});
            break;
        case 'fiveyearper':
			dieseltaxrates.getSource().updateParams({
				'SLD_Body': sldDieselFiveYearPer
			});
            break;
    }

    $("#primaryeconomictypeLegend").remove();
	if($("#urbanruralSelect").val() == "economictype"){
		if ($("#flipCohortsEconomicTwo").prop('checked'))
		{
			if($("#primaryeconomictypeSelect").val() == "economic")
			{
					sldPrimaryEconomicType = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:primaryeconomictype</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>' + $("#primaryeconomictypeSelect").val() + '</ogc:PropertyName><ogc:Literal>0</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#4575b4</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>' + $("#primaryeconomictypeSelect").val() + '</ogc:PropertyName><ogc:Literal>1</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#91bfdb</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>' + $("#primaryeconomictypeSelect").val() + '</ogc:PropertyName><ogc:Literal>2</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#fee08b</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>' + $("#primaryeconomictypeSelect").val() + '</ogc:PropertyName><ogc:Literal>3</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#d9ef8b</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>' + $("#primaryeconomictypeSelect").val() + '</ogc:PropertyName><ogc:Literal>4</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#91cf60</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>' + $("#primaryeconomictypeSelect").val() + '</ogc:PropertyName><ogc:Literal>5</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#1a9850</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
				
				addLegendContent('<div id="primaryeconomictypeLegend"><table><tr><td><a id="primaryeconomictypeImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="primaryeconomictype" onchange="handleLegend($(this));" checked/></td><td>Primary Economic Type - ' + $("#primaryeconomictypeSelect").find('option:selected').text() + '</td><td>&nbsp;</td></tr></table><table id="tableInsideTable"><tr><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#4575b4;"></div></td><td>Nonspecialized</td><td></td></tr><tr><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#91bfdb;"></div></td><td>Farming</td><td></td></tr><tr><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#fee08b;"></div></td><td>Mining</td><td></td></tr><tr><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#d9ef8b;"></div></td><td>Maufacturing</td><td></td></tr><tr><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#91cf60;"></div></td><td>Federal/State Government</td><td></td></tr><tr><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#1a9850;"></div></td><td>Recreation</td><td></td></tr></table></div>', true, "legendConditions");
			}
			else
			{
				sldPrimaryEconomicType = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:primaryeconomictype</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>' + $("#primaryeconomictypeSelect").val() + '</ogc:PropertyName><ogc:Literal>1</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#084081</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
				
				addLegendContent('<div id="primaryeconomictypeLegend"><table><tr><td><a id="primaryeconomictypeImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="primaryeconomictype" onchange="handleLegend($(this));" checked/></td><td>Primary Economic Type - ' + $("#primaryeconomictypeSelect").find('option:selected').text() + '</td><td>&nbsp;</td></tr></table><table id="tableInsideTable"><tr><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#084081;"></div></td><td>Yes</td><td></td></tr></table></div>', true, "legendConditions");
			}
		} else {
			if($("#primaryeconomictypeSelect").val() == "economic")
			{
				sldPrimaryEconomicType = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:primaryeconomictype</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>' + $("#primaryeconomictypeSelect").val() + '</ogc:PropertyName><ogc:Literal>5</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#4575b4</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>' + $("#primaryeconomictypeSelect").val() + '</ogc:PropertyName><ogc:Literal>4</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#91bfdb</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>' + $("#primaryeconomictypeSelect").val() + '</ogc:PropertyName><ogc:Literal>3</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#fee08b</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>' + $("#primaryeconomictypeSelect").val() + '</ogc:PropertyName><ogc:Literal>2</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#d9ef8b</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>' + $("#primaryeconomictypeSelect").val() + '</ogc:PropertyName><ogc:Literal>1</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#91cf60</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>' + $("#primaryeconomictypeSelect").val() + '</ogc:PropertyName><ogc:Literal>0</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#1a9850</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
				
				addLegendContent('<div id="primaryeconomictypeLegend"><table><tr><td><a id="primaryeconomictypeImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="primaryeconomictype" onchange="handleLegend($(this));" checked/></td><td>Primary Economic Type - ' + $("#primaryeconomictypeSelect").find('option:selected').text() + '</td><td>&nbsp;</td></tr></table><table id="tableInsideTable"><tr><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#4575b4;"></div></td><td>Recreation</td><td></td></tr><tr><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#91bfdb;"></div></td><td>Federal/State Government</td><td></td></tr><tr><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#fee08b;"></div></td><td>Maufacturing</td><td></td></tr><tr><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#d9ef8b;"></div></td><td>Mining</td><td></td></tr><tr><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#91cf60;"></div></td><td>Farming</td><td></td></tr><tr><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#1a9850;"></div></td><td>Nonspecialized</td><td></td></tr></table></div>', true, "legendConditions");
			}
			else
			{
				sldPrimaryEconomicType = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:primaryeconomictype</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>' + $("#primaryeconomictypeSelect").val() + '</ogc:PropertyName><ogc:Literal>1</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><GraphicFill><Graphic><ExternalGraphic><OnlineResource xlink:type="simple" xlink:href="http://52.38.47.239/geoserver/styles/Icons/pattern.png"/><Format>image/png</Format></ExternalGraphic></Graphic></GraphicFill></Fill></PolygonSymbolizer> </Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
				
				addLegendContent('<div id="primaryeconomictypeLegend"><table><tr><td><a id="primaryeconomictypeImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="primaryeconomictype" onchange="handleLegend($(this));" checked/></td><td>Primary Economic Type - ' + $("#primaryeconomictypeSelect").find('option:selected').text() + '</td><td>&nbsp;</td></tr></table><table id="tableInsideTable"><tr><td><img height="25px" width="25px" src="images/Legend/pattern.png" /></td><td>Primary Economic Type - ' + $("#primaryeconomictypeSelect").find('option:selected').text() + '</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr></table></div>', true, "legendConditions");
			}
		}
	}
	
	if($("#tapestrySelect").val() == "tapestry"){
		sldTapestryurbancentera = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:usa_tapestry</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>urbancentera</ogc:PropertyName><ogc:Literal>-5</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#625646</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>urbancentera</ogc:PropertyName><ogc:Literal>-4</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#766754</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>urbancentera</ogc:PropertyName><ogc:Literal>-3</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#897962</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>urbancentera</ogc:PropertyName><ogc:Literal>-2</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#9D8A70</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>urbancentera</ogc:PropertyName><ogc:Literal>-1</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#B19B7E</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>urbancentera</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4035</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#C5AD8D</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
		sldTapestryurbancenterb = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:usa_tapestry</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>urbancenterb</ogc:PropertyName><ogc:Literal>-5</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#6C1F1D</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>urbancenterb</ogc:PropertyName><ogc:Literal>-4</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#812522</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>urbancenterb</ogc:PropertyName><ogc:Literal>-3</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#972C28</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>urbancenterb</ogc:PropertyName><ogc:Literal>-2</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#AC322E</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>urbancenterb</ogc:PropertyName><ogc:Literal>-1</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#C23834</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsGreaterThan><ogc:PropertyName>urbancenterb</ogc:PropertyName><ogc:Literal>0</ogc:Literal></ogc:PropertyIsGreaterThan></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#D83F3A</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
		sldTapestrymetrocitiesa = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:usa_tapestry</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>metrocitiesa</ogc:PropertyName><ogc:Literal>-5</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#77561E</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>metrocitiesa</ogc:PropertyName><ogc:Literal>-4</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#8E6724</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>metrocitiesa</ogc:PropertyName><ogc:Literal>-3</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#A6792A</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>metrocitiesa</ogc:PropertyName><ogc:Literal>-2</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#BE8A30</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>metrocitiesa</ogc:PropertyName><ogc:Literal>-1</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#D69B36</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsGreaterThan><ogc:PropertyName>metrocitiesa</ogc:PropertyName><ogc:Literal>0</ogc:Literal></ogc:PropertyIsGreaterThan></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#EEAE3C</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
		sldTapestrymetrocitiesb = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:usa_tapestry</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>metrocitiesb</ogc:PropertyName><ogc:Literal>-5</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#752D3E</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>metrocitiesb</ogc:PropertyName><ogc:Literal>-4</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#8C364A</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>metrocitiesb</ogc:PropertyName><ogc:Literal>-3</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#A33F56</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>metrocitiesb</ogc:PropertyName><ogc:Literal>-2</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#BB4863</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>metrocitiesb</ogc:PropertyName><ogc:Literal>-1</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#D2516F</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsGreaterThan><ogc:PropertyName>metrocitiesb</ogc:PropertyName><ogc:Literal>0</ogc:Literal></ogc:PropertyIsGreaterThan></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#EA5A7B</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
		sldTapestryurbanoutskirtsa = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:usa_tapestry</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>urbanoutskirtsa</ogc:PropertyName><ogc:Literal>-5</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#5C6326</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>urbanoutskirtsa</ogc:PropertyName><ogc:Literal>-4</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#6F772D</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>urbanoutskirtsa</ogc:PropertyName><ogc:Literal>-3</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#818B35</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>urbanoutskirtsa</ogc:PropertyName><ogc:Literal>-2</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#949F3C</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>urbanoutskirtsa</ogc:PropertyName><ogc:Literal>-1</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#A6B344</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsGreaterThan><ogc:PropertyName>urbanoutskirtsa</ogc:PropertyName><ogc:Literal>0</ogc:Literal></ogc:PropertyIsGreaterThan></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#B8C74C</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
		sldTapestryurbanoutskirtsb = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:usa_tapestry</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>urbanoutskirtsb</ogc:PropertyName><ogc:Literal>-5</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#513C52</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>urbanoutskirtsb</ogc:PropertyName><ogc:Literal>-4</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#614863</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>urbanoutskirtsb</ogc:PropertyName><ogc:Literal>-3</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#725473</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>urbanoutskirtsb</ogc:PropertyName><ogc:Literal>-2</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#826084</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>urbanoutskirtsb</ogc:PropertyName><ogc:Literal>-1</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#926C94</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsGreaterThan><ogc:PropertyName>urbanoutskirtsb</ogc:PropertyName><ogc:Literal>0</ogc:Literal></ogc:PropertyIsGreaterThan></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#A379A5</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
		sldTapestrysuburbana = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:usa_tapestry</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>suburbana</ogc:PropertyName><ogc:Literal>-5</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#763424</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>suburbana</ogc:PropertyName><ogc:Literal>-4</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#8D3F2B</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>suburbana</ogc:PropertyName><ogc:Literal>-3</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#A54932</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>suburbana</ogc:PropertyName><ogc:Literal>-2</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#BC5439</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>suburbana</ogc:PropertyName><ogc:Literal>-1</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#D45E40</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsGreaterThan><ogc:PropertyName>suburbana</ogc:PropertyName><ogc:Literal>0</ogc:Literal></ogc:PropertyIsGreaterThan></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#EC6A48</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
		sldTapestrysuburbanb = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:usa_tapestry</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>suburbanb</ogc:PropertyName><ogc:Literal>-5</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#642323</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>suburbanb</ogc:PropertyName><ogc:Literal>-4</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#782A2A</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>suburbanb</ogc:PropertyName><ogc:Literal>-3</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#8C3131</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>suburbanb</ogc:PropertyName><ogc:Literal>-2</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#A03838</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>suburbanb</ogc:PropertyName><ogc:Literal>-1</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#B43F3F</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsGreaterThan><ogc:PropertyName>suburbanb</ogc:PropertyName><ogc:Literal>0</ogc:Literal></ogc:PropertyIsGreaterThan></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#C84646</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
		sldTapestrysmalltowns = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:usa_tapestry</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>smalltowns</ogc:PropertyName><ogc:Literal>-5</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#77471D</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>smalltowns</ogc:PropertyName><ogc:Literal>-4</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#8F5522</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>smalltowns</ogc:PropertyName><ogc:Literal>-3</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#A76428</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>smalltowns</ogc:PropertyName><ogc:Literal>-2</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#BF722E</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>smalltowns</ogc:PropertyName><ogc:Literal>-1</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#D78034</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsGreaterThan><ogc:PropertyName>smalltowns</ogc:PropertyName><ogc:Literal>0</ogc:Literal></ogc:PropertyIsGreaterThan></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#EF8F3A</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
		sldTapestryrurala = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:usa_tapestry</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>rurala</ogc:PropertyName><ogc:Literal>-5</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#4E2C45</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>rurala</ogc:PropertyName><ogc:Literal>-4</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#5D3552</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>rurala</ogc:PropertyName><ogc:Literal>-3</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#6D3E60</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>rurala</ogc:PropertyName><ogc:Literal>-2</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#7C476E</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>rurala</ogc:PropertyName><ogc:Literal>-1</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#8C507C</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsGreaterThan><ogc:PropertyName>rurala</ogc:PropertyName><ogc:Literal>0</ogc:Literal></ogc:PropertyIsGreaterThan></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#9C598A</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
		sldTapestryruralb = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:usa_tapestry</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>ruralb</ogc:PropertyName><ogc:Literal>-5</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#7A4E50</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>ruralb</ogc:PropertyName><ogc:Literal>-4</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#925E60</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>ruralb</ogc:PropertyName><ogc:Literal>-3</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#AA6D70</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>ruralb</ogc:PropertyName><ogc:Literal>-2</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#C37D80</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>ruralb</ogc:PropertyName><ogc:Literal>-1</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#DB8D90</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsGreaterThan><ogc:PropertyName>ruralb</ogc:PropertyName><ogc:Literal>0</ogc:Literal></ogc:PropertyIsGreaterThan></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#F49DA1</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
		
		switch ($("#tapestrytypeSelect").val()) {
			case 'urbancentera':
				tapestry.getSource().updateParams({
					'SLD_Body': sldTapestryurbancentera
				});
				break;
			case 'urbancenterb':
				tapestry.getSource().updateParams({
					'SLD_Body': sldTapestryurbancenterb
				});
				break;
			case 'metrocitiesa':
				tapestry.getSource().updateParams({
					'SLD_Body': sldTapestrymetrocitiesa
				});
				break;
			case 'metrocitiesb':
				tapestry.getSource().updateParams({
					'SLD_Body': sldTapestrymetrocitiesb
				});
				break;
			case 'urbanoutskirtsa':
				tapestry.getSource().updateParams({
					'SLD_Body': sldTapestryurbanoutskirtsa
				});
				break;
			case 'urbanoutskirtsb':
				tapestry.getSource().updateParams({
					'SLD_Body': sldTapestryurbanoutskirtsb
				});
				break;
			case 'suburbana':
				tapestry.getSource().updateParams({
					'SLD_Body': sldTapestrysuburbana
				});
				break;
			case 'suburbanb':
				tapestry.getSource().updateParams({
					'SLD_Body': sldTapestrysuburbanb
				});
				break;
			case 'smalltowns':
				tapestry.getSource().updateParams({
					'SLD_Body': sldTapestrysmalltowns
				});
				break;
			case 'rurala':
				tapestry.getSource().updateParams({
					'SLD_Body': sldTapestryrurala
				});
				break;
			case 'ruralb':
				tapestry.getSource().updateParams({
					'SLD_Body': sldTapestryruralb
				});
				break;
		}
	}

    opportunityzones.getSource().updateParams({
        'SLD_Body': sldopportunity
    });

	
	switch ($("#cropsSelect").val()) {
		case 'crop_production':
			crops_production.getSource().updateParams({
				'SLD_Body': sldCropsProduction
			});
        break;
		case 'hydroponic_growers_county':
			hydroponic_growers_county.getSource().updateParams({
				'SLD_Body': sldhydroponic_growers_county
			});
        break;
	}
	
	switch ($("#urbanruralSelect").val()) {
		case 'urbanrural':
			wmsUrbanRural.getSource().updateParams({
				'SLD_Body': sldUrbanRural
			});
        break;
		case 'economictype':
			primaryeconomictype.getSource().updateParams({
				'SLD_Body': sldPrimaryEconomicType
			});
        break;
		case 'nooforganicgrowers':
			nooforganicgrowers.getSource().updateParams({
				'SLD_Body': sldnooforganicgrowers
			});
        break;
		case 'noofestt':
			noofestt.getSource().updateParams({
				'SLD_Body': sldnoofestt
			});
        break;
		case 'noofjobs':
			noofjobs.getSource().updateParams({
				'SLD_Body': sldnoofjobs
			});
        break;
		case 'percentjobs':
			percentjobs.getSource().updateParams({
				'SLD_Body': sldpercentjobs
			});
        break;
		case 'noofstores':
			noofstores.getSource().updateParams({
				'SLD_Body': sldnoofstores
			});
        break;
		case 'job_gravity':
			job_gravity.getSource().updateParams({
				'SLD_Body': sldjob_gravity
			});
        break;
		case 'retail_gravity':
			retail_gravity.getSource().updateParams({
				'SLD_Body': sldretail_gravity
			});
        break;
	}
	
    switch ($("#employmentSelect").val()) {
        case 'C000':
            employment.getSource().updateParams({
                'SLD_Body': sldEmploymentJobsTotal
            });
            break;
        case 'CD04':
            employment.getSource().updateParams({
                'SLD_Body': sldEmploymentJobsBachelor
            });
            break;
        case 'labor_force':
            unemployment.getSource().updateParams({
                'SLD_Body': sldlabor_force
            });
            break;
        case 'unemployed':
            unemployment.getSource().updateParams({
                'SLD_Body': sldunemployed
            });
            break;
        case 'unemployment_perc':
            unemployment.getSource().updateParams({
                'SLD_Body': sldunemployment_perc
            });
            break;
    }
	
    switch ($("#housingSelectDeter").val()) {
        case 'median_smoc_mortgage':
            median_smoc_mortgage.getSource().updateParams({
                'SLD_Body': sldmedian_smoc_mortgage
            });
            break;
        case 'median_gross_rent':
            median_gross_rent.getSource().updateParams({
                'SLD_Body': sldmedian_gross_rent
            });
            break;
        case 'avg_h_cost':
            avg_h_cost.getSource().updateParams({
                'SLD_Body': sldavg_h_cost
            });
            break;
    }
	
    switch ($("#demographicsSelectDeter").val()) {
        case 'commuters_per_hh':
            commuters_per_hh.getSource().updateParams({
                'SLD_Body': sldcommuters_per_hh
            });
            break;
        case 'median_hh_income':
            median_hh_income.getSource().updateParams({
                'SLD_Body': sldmedian_hh_income
            });
            break;
    }
	
    switch ($("#transportSelectDeter").val()) {
        case 'median_commute':
            median_commute.getSource().updateParams({
                'SLD_Body': sldmedian_commute
            });
            break;
    }
	
    switch ($("#agSelect").val()) {
        case 'sum':
            agsum.getSource().updateParams({
                'SLD_Body': sldagsum
            });
            break;
        case 'r17':
            agr17.getSource().updateParams({
                'SLD_Body': sldagr17
            });
            break;
        case 'r18':
            agr18.getSource().updateParams({
                'SLD_Body': sldagr18
            });
            break;
    }

    map.render();
}

function applyCohortThemeEnviro(value) {
    if (value == "cbfirstThemeEconomicTwo") {
        firstColor = rampFirstTheme[0];
        secondColor = rampFirstTheme[1];
        thirdColor = rampFirstTheme[2];
        fourthColor = rampFirstTheme[3];
        fifthColor = rampFirstTheme[4];
        sixthColor = rampFirstTheme[5];
        seventhColor = rampFirstTheme[6];
        eightColor = rampFirstTheme[7];
        ninthColor = rampFirstTheme[8];
    } else if (value == "cbsecondThemeEconomicTwo") {
        firstColor = rampSecondTheme[0];
        secondColor = rampSecondTheme[1];
        thirdColor = rampSecondTheme[2];
        fourthColor = rampSecondTheme[3];
        fifthColor = rampSecondTheme[4];
        sixthColor = rampSecondTheme[5];
        seventhColor = rampSecondTheme[6];
        eightColor = rampSecondTheme[7];
        ninthColor = rampSecondTheme[8];
    } else if (value == "cbthirdThemeEconomicTwo") {
        firstColor = rampThirdTheme[0];
        secondColor = rampThirdTheme[1];
        thirdColor = rampThirdTheme[2];
        fourthColor = rampThirdTheme[3];
        fifthColor = rampThirdTheme[4];
        sixthColor = rampThirdTheme[5];
        seventhColor = rampThirdTheme[6];
        eightColor = rampThirdTheme[7];
        ninthColor = rampThirdTheme[8];
    }

	updateLookEnviro();
}

function applyCohortThemePermits(value) {
    if (value == "cbfirstThemePermits") {
        firstColor = rampFirstTheme[0];
        secondColor = rampFirstTheme[1];
        thirdColor = rampFirstTheme[2];
        fourthColor = rampFirstTheme[3];
        fifthColor = rampFirstTheme[4];
        sixthColor = rampFirstTheme[5];
        seventhColor = rampFirstTheme[6];
        eightColor = rampFirstTheme[7];
        ninthColor = rampFirstTheme[8];
    } else if (value == "cbsecondThemePermits") {
        firstColor = rampSecondTheme[0];
        secondColor = rampSecondTheme[1];
        thirdColor = rampSecondTheme[2];
        fourthColor = rampSecondTheme[3];
        fifthColor = rampSecondTheme[4];
        sixthColor = rampSecondTheme[5];
        seventhColor = rampSecondTheme[6];
        eightColor = rampSecondTheme[7];
        ninthColor = rampSecondTheme[8];
    } else if (value == "cbthirdThemePermits") {
        firstColor = rampThirdTheme[0];
        secondColor = rampThirdTheme[1];
        thirdColor = rampThirdTheme[2];
        fourthColor = rampThirdTheme[3];
        fifthColor = rampThirdTheme[4];
        sixthColor = rampThirdTheme[5];
        seventhColor = rampThirdTheme[6];
        eightColor = rampThirdTheme[7];
        ninthColor = rampThirdTheme[8];
    }

	updateLookPermits();
}

function updateLookEnviro() {
	if ($("#switchFramesEnviroTwo").prop('checked'))
        changeFramesEnviro('on');
	else
		changeFramesEnviro('off');
}

function updateLookPermits() {
	if ($("#switchFramesPermits").prop('checked'))
        changeFramesPermits('on');
	else
		changeFramesPermits('off');
}

function setFramesEnviro() {
    try {
        $("#popup-closer").click();
    } catch (ex) {}

    if ($("#selFramesEnviroTwo").val() == "black") {
        frameBorder = '#000000';
    }
    if ($("#selFramesEnviroTwo").val() == "darkgray") {
        frameBorder = '#A9A9A9';
    }
    if ($("#selFramesEnviroTwo").val() == "lightgray") {
        frameBorder = '#D3D3D3';
    }
    if ($("#selFramesEnviroTwo").val() == "white") {
        frameBorder = '#FFFFFF';
    }
    updateLookEnviro();
}

function changeFramesEnviro(value) {
    if ($('#switchFramesEnviroTwo').prop('checked'))
        $("#divSelFramesEnviroTwo").show();
    else
        $("#divSelFramesEnviroTwo").hide();

    if ($("#cohortOptsEnviroTwo").val() == "divergent") {
        checkAndUpdateLegendCohortsEnviroTwo('divergent');
        if (value == "off") {
            sldWDPA = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:wdpa</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>gov_type</ogc:PropertyName><ogc:Literal>Collaborative governance</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' +divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>gov_type</ogc:PropertyName><ogc:Literal>Federal or national ministry or agency</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' +divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>gov_type</ogc:PropertyName><ogc:Literal>Individual landowners</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>gov_type</ogc:PropertyName><ogc:Literal>Joint governance</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>gov_type</ogc:PropertyName><ogc:Literal>Non-profit organisations</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>gov_type</ogc:PropertyName><ogc:Literal>Sub-national ministry oragency</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>gov_type</ogc:PropertyName><ogc:Literal>Not Reported</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
			
            sldSolidbiomassCrops = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:solidbiomass</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cropres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>200</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cropres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>200</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cropres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cropres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cropres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>12000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cropres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>12000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>35000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cropres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>35000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>75000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cropres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>75000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>150000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cropres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>150000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1850000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldSolidbiomassUrbanwood = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:solidbiomass</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>urbanwood</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>750</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>urbanwood</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>750</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1200</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>urbanwood</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1200</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>urbanwood</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>urbanwood</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>urbanwood</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>urbanwood</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>urbanwood</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>30000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>urbanwood</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>30000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1500000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldSolidbiomassSecmill = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:solidbiomass</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>secmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>100</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>secmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>100</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>secmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>secmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>secmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>secmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>secmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>secmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>20000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>secmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>20000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>180000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldSolidbiomassForest = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:solidbiomass</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>forestres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>forestres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>forestres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>forestres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>forestres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>forestres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>forestres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>forestres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>40000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>forestres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>40000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>225000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldSolidbiomassPrimmill = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:solidbiomass</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>primmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>100</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>primmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>100</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>primmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>primmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>primmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>primmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>primmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>40000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>primmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>40000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>150000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>primmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>150000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1500000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldSolidbiomassTotal = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:solidbiomass</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>total</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>total</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>total</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>total</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>total</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>45000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>total</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>45000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>70000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>total</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>70000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>150000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>total</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>150000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>240000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>total</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>240000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2005000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
        } else if (value == "on") {
            sldWDPA = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:wdpa</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>gov_type</ogc:PropertyName><ogc:Literal>Collaborative governance</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' +divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>gov_type</ogc:PropertyName><ogc:Literal>Federal or national ministry or agency</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' +divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>gov_type</ogc:PropertyName><ogc:Literal>Individual landowners</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>gov_type</ogc:PropertyName><ogc:Literal>Joint governance</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>gov_type</ogc:PropertyName><ogc:Literal>Non-profit organisations</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>gov_type</ogc:PropertyName><ogc:Literal>Sub-national ministry oragency</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>gov_type</ogc:PropertyName><ogc:Literal>Not Reported</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldSolidbiomassCrops = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:solidbiomass</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cropres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>200</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cropres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>200</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cropres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cropres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cropres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>12000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cropres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>12000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>35000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cropres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>35000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>75000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cropres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>75000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>150000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cropres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>150000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1850000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldSolidbiomassUrbanwood = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:solidbiomass</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>urbanwood</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>750</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>urbanwood</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>750</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1200</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>urbanwood</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1200</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>urbanwood</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>urbanwood</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>urbanwood</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>urbanwood</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>urbanwood</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>30000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>urbanwood</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>30000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1500000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldSolidbiomassSecmill = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:solidbiomass</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>secmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>100</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>secmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>100</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>secmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>secmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>secmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>secmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>secmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>secmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>20000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>secmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>20000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>180000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldSolidbiomassForest = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:solidbiomass</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>forestres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>forestres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>forestres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>forestres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>forestres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>forestres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>forestres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>forestres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>40000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>forestres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>40000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>225000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldSolidbiomassPrimmill = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:solidbiomass</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>primmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>100</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>primmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>100</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>primmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>primmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>primmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>primmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>primmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>40000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>primmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>40000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>150000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>primmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>150000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1500000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldSolidbiomassTotal = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:solidbiomass</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>total</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[0] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>total</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[1] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>total</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[2] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>total</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[3] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>total</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>45000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[4] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>total</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>45000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>70000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[5] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>total</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>70000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>150000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[6] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>total</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>150000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>240000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[7] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>total</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>240000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2005000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + divergentTheme[8] + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
		}
    } else {
        checkAndUpdateLegendCohortsEnviroTwo('standard');
        if (value == "off") {
            sldWDPA = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:wdpa</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>gov_type</ogc:PropertyName><ogc:Literal>Collaborative governance</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' +firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>gov_type</ogc:PropertyName><ogc:Literal>Federal or national ministry or agency</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' +secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>gov_type</ogc:PropertyName><ogc:Literal>Individual landowners</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>gov_type</ogc:PropertyName><ogc:Literal>Joint governance</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>gov_type</ogc:PropertyName><ogc:Literal>Non-profit organisations</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>gov_type</ogc:PropertyName><ogc:Literal>Sub-national ministry oragency</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>gov_type</ogc:PropertyName><ogc:Literal>Not Reported</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldSolidbiomassCrops = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:solidbiomass</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cropres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>200</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cropres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>200</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cropres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cropres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cropres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>12000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cropres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>12000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>35000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cropres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>35000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>75000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cropres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>75000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>150000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cropres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>150000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1850000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldSolidbiomassUrbanwood = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:solidbiomass</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>urbanwood</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>750</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>urbanwood</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>750</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1200</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>urbanwood</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1200</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>urbanwood</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>urbanwood</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>urbanwood</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>urbanwood</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>urbanwood</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>30000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>urbanwood</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>30000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1500000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldSolidbiomassSecmill = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:solidbiomass</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>secmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>100</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>secmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>100</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>secmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>secmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>secmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>secmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>secmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>secmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>20000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>secmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>20000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>180000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldSolidbiomassForest = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:solidbiomass</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>forestres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>forestres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>forestres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>forestres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>forestres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>forestres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>forestres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>forestres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>40000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>forestres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>40000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>225000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldSolidbiomassPrimmill = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:solidbiomass</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>primmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>100</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>primmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>100</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>primmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>primmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>primmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>primmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>primmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>40000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>primmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>40000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>150000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>primmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>150000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1500000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldSolidbiomassTotal = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:solidbiomass</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>total</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>total</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>total</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>total</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>total</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>45000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>total</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>45000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>70000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>total</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>70000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>150000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>total</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>150000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>240000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>total</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>240000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2005000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
		} else if (value == "on") {
            sldWDPA = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:wdpa</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>gov_type</ogc:PropertyName><ogc:Literal>Collaborative governance</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' +firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>gov_type</ogc:PropertyName><ogc:Literal>Federal or national ministry or agency</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' +secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>gov_type</ogc:PropertyName><ogc:Literal>Individual landowners</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>gov_type</ogc:PropertyName><ogc:Literal>Joint governance</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>gov_type</ogc:PropertyName><ogc:Literal>Non-profit organisations</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>gov_type</ogc:PropertyName><ogc:Literal>Sub-national ministry oragency</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>gov_type</ogc:PropertyName><ogc:Literal>Not Reported</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldSolidbiomassCrops = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:solidbiomass</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cropres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>200</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cropres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>200</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cropres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cropres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cropres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>12000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cropres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>12000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>35000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cropres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>35000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>75000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cropres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>75000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>150000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>cropres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>150000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1850000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldSolidbiomassUrbanwood = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:solidbiomass</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>urbanwood</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>750</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>urbanwood</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>750</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1200</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>urbanwood</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1200</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>urbanwood</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>urbanwood</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>urbanwood</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>urbanwood</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>urbanwood</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>30000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>urbanwood</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>30000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1500000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldSolidbiomassSecmill = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:solidbiomass</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>secmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>100</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>secmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>100</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>secmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>secmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>secmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>3000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>secmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>3000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>5500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>secmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>5500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>secmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>20000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>secmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>20000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>180000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldSolidbiomassForest = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:solidbiomass</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>forestres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>forestres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>forestres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>1000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>forestres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>forestres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>forestres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>forestres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>forestres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>40000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>forestres</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>40000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>225000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldSolidbiomassPrimmill = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:solidbiomass</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>primmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>0</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>100</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>primmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>100</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>primmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>4000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>primmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>4000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>primmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>primmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>15000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>primmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>15000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>40000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>primmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>40000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>150000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>primmill</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>150000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>1500000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';

            sldSolidbiomassTotal = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:solidbiomass</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>total</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + firstColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>total</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>2500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>7500</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + secondColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>total</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>7500</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>10000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + thirdColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>total</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>10000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>25000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fourthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>total</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>25000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>45000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + fifthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>total</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>45000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>70000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + sixthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>total</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>70000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>150000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + seventhColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>total</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>150000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>240000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + eightColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsBetween><ogc:PropertyName>total</ogc:PropertyName><ogc:LowerBoundary><ogc:Literal>240000</ogc:Literal></ogc:LowerBoundary><ogc:UpperBoundary><ogc:Literal>2005000</ogc:Literal></ogc:UpperBoundary></ogc:PropertyIsBetween></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">' + ninthColor + '</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
		}
    }
	
	switch ($("#solidbiomassSelect").val()) {
        case 'crops':
			solidbiomass.getSource().updateParams({
				'SLD_Body': sldSolidbiomassCrops
			});
            break;
        case 'urbanwood':
			solidbiomass.getSource().updateParams({
				'SLD_Body': sldSolidbiomassUrbanwood
			});
            break;
        case 'secmill':
			solidbiomass.getSource().updateParams({
				'SLD_Body': sldSolidbiomassSecmill
			});
            break;
        case 'forest':
			solidbiomass.getSource().updateParams({
				'SLD_Body': sldSolidbiomassForest
			});
            break;
        case 'primmill':
			solidbiomass.getSource().updateParams({
				'SLD_Body': sldSolidbiomassPrimmill
			});
            break;
        case 'total':
			solidbiomass.getSource().updateParams({
				'SLD_Body': sldSolidbiomassTotal
			});
            break;
    }
	

	switch ($("#landDeterSelect").val()) {
        case 'wdpa':
			wdpa.getSource().updateParams({
				'SLD_Body': sldWDPA
			});
            break;
    }

    map.render();
}

function dataGraph() {
	resetCanvas();
    $("#divZipcode").hide();
    var ctx = $('#chartContainer')[0];
    var context = ctx.getContext('2d');
    context.clearRect(0, 0, ctx.width, ctx.height);

    if ($("#dataToGraph").val() == "none") {
        toastr.error("No layer selected for graph");

        return;
    }
    if ($("#dataToGraph").val() == "Zipcode") {
        var select = $("#zipcode");
        var list = [];

        list.push('<option value="none">Select the Zipcode</option>');
        $.getJSON('readZipcodes.php', function(data) {
            $.each(data, function(key, val) {
                list.push('<option value="' + val.zip + '">' + val.zip + '</option>');
            });

            select.html(list.join(''));
            select.selectpicker('refresh');
        });
        $("#divZipcode").show();
        return;
    }
    if ($("#dataToGraph").val() == "Change Trend (Top 10)") {
        var responseOld = [],
            responseNew = [],
            labels = [];
        $.ajax({
            type: 'GET',
            dataType: 'json',
            url: 'getDataForChart.php?cond=' + $("#dataToGraph").val(),
            success: function(response) {
                if (response) {
                    $.each(response, function(index, value) {
                        labels.push(value.label);
                        responseOld.push(value.data);
                    });
                }
            },
            error: function(xhr, ajaxOptions, thrownError) {}
        });
        $.ajax({
            type: 'GET',
            dataType: 'json',
            url: 'getDataForChart.php?cond=PTRR Highest Ratio',
            success: function(response) {
                if (response) {
                    $.each(response, function(index, value) {
                        responseNew.push(value.data);
                    });
                }
            },
            error: function(xhr, ajaxOptions, thrownError) {}
        });
        var chart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10"],
                datasets: [{
                        label: "Oct-2010",
                        backgroundColor: 'rgba(255,0,0,0.2)',
                        borderColor: 'rgba(255,0,0,1)',
                        data: responseOld,
                        fill: false,
                    },
                    {
                        label: "Aug-2017",
                        fill: false,
                        backgroundColor: 'rgba(0,0,255,0.2)',
                        borderColor: 'rgba(0,0,255,1)',
                        data: responseNew
                    }
                ]
            }
        });

        return;
    }
    if ($("#dataToGraph").val() == "Change Trend (Bottom 10)") {
        var responseOld = [],
            responseNew = [];
        $.ajax({
            type: 'GET',
            dataType: 'json',
            url: 'getDataForChart.php?cond=' + $("#dataToGraph").val(),
            success: function(response) {
                if (response) {
                    $.each(response, function(index, value) {
                        responseOld.push(value.data);
                    });
                }
            },
            error: function(xhr, ajaxOptions, thrownError) {}
        });
        $.ajax({
            type: 'GET',
            dataType: 'json',
            url: 'getDataForChart.php?cond=PTRR Lowest Ratio',
            success: function(response) {
                if (response) {
                    $.each(response, function(index, value) {
                        responseNew.push(value.data);
                    });
                }
            },
            error: function(xhr, ajaxOptions, thrownError) {}
        });
        var chart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10"],
                datasets: [{
                        label: "Oct-2010",
                        backgroundColor: 'rgba(255,0,0,0.2)',
                        borderColor: 'rgba(255,0,0,1)',
                        data: responseOld,
                        fill: false,
                    },
                    {
                        label: "Aug-2017",
                        fill: false,
                        backgroundColor: 'rgba(0,0,255,0.2)',
                        borderColor: 'rgba(0,0,255,1)',
                        data: responseNew
                    }
                ]
            }
        });

        return;
    }
    $("#divZipcode").hide();
    $.ajax({
        type: 'GET',
        dataType: 'json',
        url: 'getDataForChart.php?cond=' + $("#dataToGraph").val(),
        success: function(response) {
            if (response) {
                var labels = [];
                var data = [];
                $.each(response, function(index, value) {
                    labels.push(value.label);
                    data.push(value.data);
                });

                var chart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: labels,
                        datasets: [{
                            label: 'No. of ' + $("#dataToGraph").val() + ' (County Wise)',
                            data: data,
                            backgroundColor: [
                                'rgba(255, 99, 132, 0.2)',
                                'rgba(54, 162, 235, 0.2)',
                                'rgba(255, 206, 86, 0.2)',
                                'rgba(75, 192, 192, 0.2)',
                                'rgba(153, 102, 255, 0.2)',
                                'rgba(255, 99, 132, 0.2)',
                                'rgba(54, 162, 235, 0.2)',
                                'rgba(255, 206, 86, 0.2)',
                                'rgba(75, 192, 192, 0.2)',
                                'rgba(153, 102, 255, 0.2)'
                            ],
                            borderColor: [
                                'rgba(255,99,132,1)',
                                'rgba(54, 162, 235, 1)',
                                'rgba(255, 206, 86, 1)',
                                'rgba(75, 192, 192, 1)',
                                'rgba(153, 102, 255, 1)',
                                'rgba(255, 159, 64, 1)',
                                'rgba(255,99,132,1)',
                                'rgba(54, 162, 235, 1)',
                                'rgba(255, 206, 86, 1)',
                                'rgba(75, 192, 192, 1)',
                                'rgba(153, 102, 255, 1)',
                                'rgba(255, 159, 64, 1)'
                            ],
                            borderWidth: 1
                        }]
                    }
                });
            }
        },
        error: function(xhr, ajaxOptions, thrownError) {
            alert(thrownError);
        }
    });
}

function getChartForZip() {
	resetCanvas();
    var ctx = document.getElementById('chartContainer');
    $.ajax({
        type: 'GET',
        dataType: 'json',
        url: 'getDataForChartZip.php?cond=zipcode&zip=' + $("#zipcode").val(),
        success: function(response) {
            if (response) {
                var labels = [];
                var chart = new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: ['Oct-10', 'Nov-10', 'Dec-10', 'Jan-11', 'Feb-11', 'Mar-11', 'April-11', 'May-11', 'June-11', 'July-11', 'Aug-11', 'Sep-11', 'Oct-11', 'Nov-11', 'Dec-11', 'Jan-12', 'Feb-12', 'Mar-12', 'April-12', 'May-12', 'June-12', 'July-12', 'Aug-12', 'Sep-12', 'Oct-12', 'Nov-12', 'Dec-12', 'Jan-13', 'Feb-13', 'Mar-13', 'April-13', 'May-13', 'June-13', 'July-13', 'Aug-13', 'Sep-13', 'Oct-13', 'Nov-13', 'Dec-13', 'Jan-14', 'Feb-14', 'Mar-14', 'April-14', 'May-14', 'June-14', 'July-14', 'Aug-14', 'Sep-14', 'Oct-14', 'Nov-14', 'Dec-14', 'Jan-15', 'Feb-15', 'Mar-15', 'April-15', 'May-15', 'June-15', 'July-15', 'Aug-15', 'Sep-15', 'Oct-15', 'Nov-15', 'Dec-15', 'Jan-16', 'Feb-16', 'Mar-16', 'April-16', 'May-16', 'June-16', 'July-16', 'Aug-16', 'Sep-16', 'Oct-16', 'Nov-16', 'Dec-16', 'Jan-17', 'Feb-17', 'Mar-17', 'April-17', 'May-17', 'June-17', 'July-17', 'Aug-17'],
                        datasets: [{
                            label: 'Trend analysis (Zipcode Wise)',
                            data: response,
                            fill: false,
                            backgroundColor: [
                                'rgba(255, 99, 132, 0.2)'
                            ],
                            borderColor: [
                                'rgba(255,99,132,1)'
                            ],
                            borderWidth: 1
                        }]
                    }
                });
            }
        },
        error: function(xhr, ajaxOptions, thrownError) {
            alert(thrownError);
        }
    });
}

function createCirclePointCoords(circleCenterX, circleCenterY, circleRadius, pointsToFind) {
    var angleToAdd = 360 / pointsToFind;
    var coords = [];
    var angle = 0;
    for (var i = 0; i < pointsToFind; i++) {
        angle = angle + angleToAdd;
        var coordX = circleCenterX + circleRadius * Math.cos(angle * Math.PI / 180);
        var coordY = circleCenterY + circleRadius * Math.sin(angle * Math.PI / 180);
        coords.push([coordX, coordY]);
    }
    return coords;
}

function dataGraphModal() {
    $("#divZipcodeModal").hide();
    var ctx = $('#chartContainer')[0];
    var context = ctx.getContext('2d');
    context.clearRect(0, 0, ctx.width, ctx.height);
    if ($("#dataToGraphModal").val() == "none") {
        toastr.error("Select the data type to graph");

        return;
    }
    if ($("#dataToGraphModal").val() == "Zipcode") {
        var select = $("#zipcodeModal");
        var list = [];

        list.push('<option value="none">Select the Zipcode</option>');
        $.getJSON('readZipcodes.php', function(data) {
            $.each(data, function(key, val) {
                list.push('<option value="' + val.zip + '">' + val.zip + '</option>');
            });

            select.html(list.join(''));
            select.selectpicker('refresh');
        });
        $("#divZipcodeModal").show();
        return;
    }
    if ($("#dataToGraphModal").val() == "Change Trend (Top 10)") {
        var responseOld = [],
            responseNew = [],
            labels = [];
        $.ajax({
            type: 'GET',
            dataType: 'json',
            url: 'getDataForChart.php?cond=' + $("#dataToGraphModal").val(),
            success: function(response) {
                if (response) {
                    $.each(response, function(index, value) {
                        labels.push(value.label);
                        responseOld.push(value.data);
                    });
                }
            },
            error: function(xhr, ajaxOptions, thrownError) {}
        });
        $.ajax({
            type: 'GET',
            dataType: 'json',
            url: 'getDataForChart.php?cond=PTRR Highest Ratio',
            success: function(response) {
                if (response) {
                    $.each(response, function(index, value) {
                        responseNew.push(value.data);
                    });
                }
            },
            error: function(xhr, ajaxOptions, thrownError) {}
        });

        var chart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10"],
                datasets: [{
                        label: "Oct-2010",
                        backgroundColor: 'rgba(255,0,0,0.2)',
                        borderColor: 'rgba(255,0,0,1)',
                        data: responseOld,
                        fill: false,
                    },
                    {
                        label: "Aug-2017",
                        fill: false,
                        backgroundColor: 'rgba(0,0,255,0.2)',
                        borderColor: 'rgba(0,0,255,1)',
                        data: responseNew
                    }
                ]
            }
        });

        return;
    }
    if ($("#dataToGraphModal").val() == "Change Trend (Bottom 10)") {
        var responseOld = [],
            responseNew = [];
        $.ajax({
            type: 'GET',
            dataType: 'json',
            url: 'getDataForChart.php?cond=' + $("#dataToGraphModal").val(),
            success: function(response) {
                if (response) {
                    $.each(response, function(index, value) {
                        responseOld.push(value.data);
                    });
                }
            },
            error: function(xhr, ajaxOptions, thrownError) {}
        });
        $.ajax({
            type: 'GET',
            dataType: 'json',
            url: 'getDataForChart.php?cond=PTRR Lowest Ratio',
            success: function(response) {
                if (response) {
                    $.each(response, function(index, value) {
                        responseNew.push(value.data);
                    });
                }
            },
            error: function(xhr, ajaxOptions, thrownError) {}
        });

        var chart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10"],
                datasets: [{
                        label: "Oct-2010",
                        backgroundColor: 'rgba(255,0,0,0.2)',
                        borderColor: 'rgba(255,0,0,1)',
                        data: responseOld,
                        fill: false,
                    },
                    {
                        label: "Aug-2017",
                        fill: false,
                        backgroundColor: 'rgba(0,0,255,0.2)',
                        borderColor: 'rgba(0,0,255,1)',
                        data: responseNew
                    }
                ]
            }
        });

        return;
    }
    $("#divZipcode").hide();
    $.ajax({
        type: 'GET',
        dataType: 'json',
        url: 'getDataForChart.php?cond=' + $("#dataToGraphModal").val(),
        success: function(response) {
            if (response) {
                var labels = [];
                var data = [];
                $.each(response, function(index, value) {
                    labels.push(value.label);
                    data.push(value.data);
                });

                var chart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: labels,
                        datasets: [{
                            label: 'No. of ' + $("#dataToGraphModal").val() + ' (County Wise)',
                            data: data,
                            backgroundColor: [
                                'rgba(255, 99, 132, 0.2)',
                                'rgba(54, 162, 235, 0.2)',
                                'rgba(255, 206, 86, 0.2)',
                                'rgba(75, 192, 192, 0.2)',
                                'rgba(153, 102, 255, 0.2)',
                                'rgba(255, 99, 132, 0.2)',
                                'rgba(54, 162, 235, 0.2)',
                                'rgba(255, 206, 86, 0.2)',
                                'rgba(75, 192, 192, 0.2)',
                                'rgba(153, 102, 255, 0.2)'
                            ],
                            borderColor: [
                                'rgba(255,99,132,1)',
                                'rgba(54, 162, 235, 1)',
                                'rgba(255, 206, 86, 1)',
                                'rgba(75, 192, 192, 1)',
                                'rgba(153, 102, 255, 1)',
                                'rgba(255, 159, 64, 1)',
                                'rgba(255,99,132,1)',
                                'rgba(54, 162, 235, 1)',
                                'rgba(255, 206, 86, 1)',
                                'rgba(75, 192, 192, 1)',
                                'rgba(153, 102, 255, 1)',
                                'rgba(255, 159, 64, 1)'
                            ],
                            borderWidth: 1
                        }]
                    }
                });
            }
        },
        error: function(xhr, ajaxOptions, thrownError) {
            alert(thrownError);
        }
    });
}

function getFeatureStylePB (feature){
	if(feature.get('differencetwo') == 1)
		circleColor = "#00FF00";
	else if(feature.get('differencetwo') == 2)
		circleColor = "#0000FF";
	else if(feature.get('differencetwo') == 3)
		circleColor = "#FFA500";
	else if(feature.get('differencetwo') == 4)
		circleColor = "#FF0000";

	style = [new ol.style.Style({
			image: new ol.style.Circle({
				radius: 4 + 2,
				stroke: new ol.style.Stroke({
					color: convertHex(circleColor, 0.4),
					width: 4
				})
			})
		}),
		new ol.style.Style({
			image: new ol.style.Circle({
				radius: 4,
				fill: new ol.style.Fill({
					color: convertHex(circleColor, 0.6)
				})
			})
		})
	];
	return style
}

function getFeatureStyle (feature)
{
	var values = [];
	values.push(feature.get('excellent'));
	values.push(feature.get('good'));
	values.push(feature.get('fair'));
	values.push(feature.get('poor'));
	values.push(feature.get('verypoor'));
	var radius = 15;
	if ($("#graph").val()!="bar")
		radius = 1.2 * Math.sqrt (feature.get("allp_2018") / Math.PI) / 2;
	
	var c = "#006837,#a6d96a,#fee08b,#f46d43,#a50026";
	style = new ol.style.Style(
	{	
		image: new ol.style.Chart(
		{	
			type: $("#graph").val(), 
			radius: radius, 
			offsetY: 0,
			data: values,
			colors: /,/.test(c) ? c.split(",") : c,
			rotateWithView: true,
			animation: true,
			stroke: new ol.style.Stroke(
			{	
				color: "#fff",
				width: 1
			}),
		})
	});
	style.getImage().setAnimation(animation);
	return style;
}

var listenerKey;
function doAnimate()
{	if (listenerKey) return;
	var start = new Date().getTime();
	var duration = 2500;
	animation = 0;
	listenerKey = corn.on('precompose', function(event)
	{	
		var frameState = event.frameState;
		var elapsed = frameState.time - start;
		if (elapsed > duration) 
		{	ol.Observable.unByKey(listenerKey);
			listenerKey = null;
			animation = false;
		}	
		else
		{	animation = ol.easing.easeOut (elapsed / duration);
			frameState.animate = true;
		}
		corn.changed();
	});
	corn.changed();
}

function showDrawOpts() {
    $("#dataForReport").unbind("change");
    $("#popup-closer").click();
    addLegendContent("#analysisLegend");
    var ctx = $('#chartContainer')[0];
    var context = ctx.getContext('2d');
    context.clearRect(0, 0, ctx.width, ctx.height);

    document.getElementById('loading').style.display = "block";

    var clickedPoint = ol.proj.transform(selectedRadiusLoct, 'EPSG:3857', 'EPSG:4326');
    try {
        markerSource.clear()
    } catch (ex) {}
    try {
        map.removeLayer(mappingLayer);
        maskFilter.set('active', false);
    } catch (ex) {}

    markerFeature = new ol.Feature({
        name: "Marker",
        geometry: new ol.geom.Point(selectedRadiusLoct)
    });
    markerFeature.setStyle(markerFunction);
    markerSource.addFeature(markerFeature);
    markerLayer.setSource(markerSource);

    radFirstInt = $("#radFirstInt").val() * 1609.34;
    radSecondInt = $("#radSecondInt").val() * 1609.34;
    radThirdInt = $("#radThirdInt").val() * 1609.34;

    document.getElementById('headFirstInt').innerHTML = $("#radFirstInt").val() + " Mile";
    document.getElementById('headSecondInt').innerHTML = $("#radSecondInt").val() + " Mile";
    document.getElementById('headThirdInt').innerHTML = $("#radThirdInt").val() + " Mile";

    $('#dataForReport').selectpicker('deselectAll');
    $("#tableFarmerMulti").hide();
    $("#tableStoresMulti").hide();
    $("#tableLogosMulti").hide();
    $("#tableGardensMulti").hide();
    $("#tableNaturalMulti").hide();
    $("#tableMMDMulti").hide();
    $("#tableMMFMulti").hide();
    $("#tableMMGMulti").hide();
    $("#tableMMIMulti").hide();
    $("#tableMMPMulti").hide();
    $("#tableMMRMulti").hide();
    $("#tableAirportsMulti").hide();
    $("#tableFreightMulti").hide();
    $("#tableCrossingMulti").hide();
    $("#tableIanaMulti").hide();
    $("#tableTransitMulti").hide();
    $("#tablePortMulti").hide();
    $("#tableMclaneMulti").hide();
    $("#tableAmazonMulti").hide();
    $("#tableSyscoMulti").hide();
    $("#tableUsfMulti").hide();
    $("#tableFedexMulti").hide();
    $("#tableDhlMulti").hide();
    $("#tableUpsMulti").hide();
    $("#tableAlbertsonsMulti").hide();
    $("#tableThorntonMulti").hide();
    $("#tableCulverMulti").hide();
    $("#tableDicksMulti").hide();
    $("#tablePublixMulti").hide();
    $("#tableGiantEagleMulti").hide();
    $("#tableKrogerMulti").hide();
    $("#tableShoppingMulti").hide();
    $("#tableTysonMulti").hide();
    $("#tableRanchesMulti").hide();
    $("#tableWholeFoodsMulti").hide();
    $("#tableTraderJoesMulti").hide();
    $("#tableDenMulti").hide();
    $("#tableHHMulti").hide();
    $("#tablePopuMulti").hide();
    $("#tableIncMulti").hide();
    $("#tableVacMulti").hide();
    $("#tableFarmerMulti").hide();
    $("#tableBrownMulti").hide();

    var selectedOpts = [];

	try{
		for (z = 0; z < $("#dataForReportModal").val().length; z++) {
			selectedOpts.push($("#dataForReportModal").val()[z]);
			switch ($("#dataForReportModal").val()[z]) {
				case 'reportFarmer':
					$("#tableFarmerMulti").show();
					table = "farmers";
					idorgid = "gid";
					farSource = new ol.source.Vector({
						url: "aza.php?point=" + clickedPoint + "&fInt=" + radFirstInt + "&sInt=" + radSecondInt + "&tInt=" + radThirdInt + "&tab=" + table + "&idorgid=" + idorgid,
						format: new ol.format.GeoJSON(),
						strategy: ol.loadingstrategy.all
					});
					farmer.setSource(farSource);
					farmer.setVisible(true);
					
					addLegendContent('<div id="farmerLegend"><table><tr><td><a id="farmerImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="farmer" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/tractor.png" /></td><td>Farmers Market</td></tr></table></div>', true, "legendData");
					$('#primaryData').selectpicker('val', 'farmers');
					break;

				case 'reportStores':
					table = "stores";
					idorgid = "id";
					$("#tableStoresMulti").show();
					stoSource = new ol.source.Vector({
						url: "aza.php?point=" + clickedPoint + "&fInt=" + radFirstInt + "&sInt=" + radSecondInt + "&tInt=" + radThirdInt + "&tab=" + table + "&idorgid=" + idorgid,
						format: new ol.format.GeoJSON(),
						strategy: ol.loadingstrategy.all
					});
					stores.setSource(stoSource);
					stores.setVisible(true);

					addLegendContent('<div id="storesLegend"><table><tr><td><a id="storesImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="stores" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/store.png" /></td><td>Grocery Stores</td></tr></table></div>', true, "legendData");
					$('#primaryData').selectpicker('val', 'stores');
					break;

				case 'reportLogos':
					table = "logos";
					idorgid = "id";
					$("#tableLogosMulti").show();
					logSource = new ol.source.Vector({
						url: "aza.php?point=" + clickedPoint + "&fInt=" + radFirstInt + "&sInt=" + radSecondInt + "&tInt=" + radThirdInt + "&tab=" + table + "&idorgid=" + idorgid,
						format: new ol.format.GeoJSON(),
						strategy: ol.loadingstrategy.all
					});
					logo.setSource(logSource);
					logo.setVisible(true);

					addLegendContent('<div id="logosLegend"><table><tr><td><a id="logosImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="logos" onchange="handleLegend($(this));" checked/></td><td><img height="45px" width="45px" src="images/Icons/logosIL/marker.png" /></td><td>Stores Logos</td></tr></table></div>', true, "legendData");
					$('#primaryData').selectpicker('val', 'logos');
					break;

				case 'reportBrown':
					table = "brownfields";
					idorgid = "gid";
					$("#tableBrownMulti").show();
					brownSource = new ol.source.Vector({
						url: "aza.php?point=" + clickedPoint + "&fInt=" + radFirstInt + "&sInt=" + radSecondInt + "&tInt=" + radThirdInt + "&tab=" + table + "&idorgid=" + idorgid,
						format: new ol.format.GeoJSON(),
						strategy: ol.loadingstrategy.all
					});
					brownfields.setSource(brownSource);
					brownfields.setVisible(true);

					addLegendContent('<div id="brownLegend"><table><tr><td><a id="brownImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="brown" onchange="handleLegend($(this));" checked/></td><td><img height="45px" width="45px" src="images/Icons/brownfields.png" /></td><td>Brownfields</td></tr></table></div>', true, "legendData");
					$('#primaryData').selectpicker('val', 'logos');
					break;

				case 'reportGardens':
					table = "gardens";
					idorgid = "gid";
					$("#tableGardensMulti").show();
					garSource = new ol.source.Vector({
						url: "aza.php?point=" + clickedPoint + "&fInt=" + radFirstInt + "&sInt=" + radSecondInt + "&tInt=" + radThirdInt + "&tab=" + table + "&idorgid=" + idorgid,
						format: new ol.format.GeoJSON(),
						strategy: ol.loadingstrategy.all
					});
					garden.setSource(garSource);
					garden.setVisible(true);

					addLegendContent('<div id="gardenLegend"><table><tr><td><a id="gardenImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="garden" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/garden.png" /></td><td>Gardens</td></tr></table></div>', true, "legendData");
					$('#ownData').selectpicker('val', 'gardens');
					break;

				case 'reportNatural':
					table = "names_natural";
					idorgid = "gid";
					$("#tableNaturalMulti").show();
					natSource = new ol.source.Vector({
						url: "aza.php?point=" + clickedPoint + "&fInt=" + radFirstInt + "&sInt=" + radSecondInt + "&tInt=" + radThirdInt + "&tab=" + table + "&idorgid=" + idorgid,
						format: new ol.format.GeoJSON(),
						strategy: ol.loadingstrategy.all
					});
					natural.setSource(natSource);
					natural.setVisible(true);

					addLegendContent('<div id="naturalLegend"><table><tr><td><a id="naturalImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="natural" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/natural.png" /></td><td>Natural</td></tr></table></div>', true, "legendData");
					$('#ownData').selectpicker('val', 'natural');
					$('#manmadeData').selectpicker('val', 'natural');
					break;

				case 'reportManMadeDest':
					table = "manmade_destinations";
					idorgid = "id";
					$("#tableMMDMulti").show();
					mmdSource = new ol.source.Vector({
						url: "aza.php?point=" + clickedPoint + "&fInt=" + radFirstInt + "&sInt=" + radSecondInt + "&tInt=" + radThirdInt + "&tab=" + table + "&idorgid=" + idorgid,
						format: new ol.format.GeoJSON(),
						strategy: ol.loadingstrategy.all
					});
					manmade_destinations.setSource(mmdSource);
					manmade_destinations.setVisible(true);

					addLegendContent('<div id="destinationsLegend"><table><tr><td><a id="destinationsImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="destinations" onchange="handleLegend($(this));" checked/></td><td colspan="2">Destinations</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/arena.png" /></td><td>Arena</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/beach.png" /></td><td>Beach</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/camp.png" /></td><td>Camp</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/castle.png" /></td><td>Castle</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/cave.png" /></td><td>Cave</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/club.png" /></td><td>Club</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/complex.png" /></td><td>Complex</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/farm.png" /></td><td>Farm</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/golf course.png" /></td><td>Golf Course</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/landmark.png" /></td><td>Landmark</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/lodge.png" /></td><td>Lodge</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/monument.png" /></td><td>Monument</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/museum.png" /></td><td>Museum</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/observatory.png" /></td><td>Observatory</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/orchard.png" /></td><td>Orchard</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/pool.png" /></td><td>Pool</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/racetrack.png" /></td><td>Racetrack</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/ranch.png" /></td><td>Ranch</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/resort.png" /></td><td>Resort</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/retreat.png" /></td><td>Retreat</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/ruins.png" /></td><td>Ruins</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/site.png" /></td><td>Site</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/speedway.png" /></td><td>Speedway</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/stadium.png" /></td><td>Stadium</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/winery.png" /></td><td>Winery</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/yacht.png" /></td><td>yacht</td></tr></table></div>', true, "legendData");
					$('#manmadeData').selectpicker('val', 'destinations');
					break;

				case 'reportManMadeFaith':
					table = "manmade_faith";
					idorgid = "id";
					$("#tableMMFMulti").show();
					mmfSource = new ol.source.Vector({
						url: "aza.php?point=" + clickedPoint + "&fInt=" + radFirstInt + "&sInt=" + radSecondInt + "&tInt=" + radThirdInt + "&tab=" + table + "&idorgid=" + idorgid,
						format: new ol.format.GeoJSON(),
						strategy: ol.loadingstrategy.all
					});
					manmade_faith.setSource(mmfSource);
					manmade_faith.setVisible(true);

					addLegendContent('<div id="faithLegend"><table><tr><td><a id="faithImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="faith" onchange="handleLegend($(this));" checked/></td><td colspan="2">Faith</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/cemetery.png" /></td><td>Cemetery</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/chapel.png" /></td><td>Chapel</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/church.png" /></td><td>Church</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/monastery.png" /></td><td>Monastery</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/shrine.png" /></td><td>Shrine</td></tr></table></div>', true, "legendData");
					break;

				case 'reportManMadeGovt':
					table = "manmade_govt_places";
					idorgid = "id";
					$("#tableMMGMulti").show();
					mmgSource = new ol.source.Vector({
						url: "aza.php?point=" + clickedPoint + "&fInt=" + radFirstInt + "&sInt=" + radSecondInt + "&tInt=" + radThirdInt + "&tab=" + table + "&idorgid=" + idorgid,
						format: new ol.format.GeoJSON(),
						strategy: ol.loadingstrategy.all
					});
					manmade_govt_places.setSource(mmgSource);
					manmade_govt_places.setVisible(true);

					addLegendContent('<div id="govtLegend"><table><tr><td><a id="govtImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="govt" onchange="handleLegend($(this));" checked/></td><td colspan="2">Government Places</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/civil.png" /></td><td>Civil</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/military.png" /></td><td>Military</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/post office.png" /></td><td>Post Office</td></tr></table></div>', true, "legendData");
					break;

				case 'reportManMadeInfra':
					table = "manmade_infrastructure";
					idorgid = "id";
					$("#tableMMIMulti").show();
					mmiSource = new ol.source.Vector({
						url: "aza.php?point=" + clickedPoint + "&fInt=" + radFirstInt + "&sInt=" + radSecondInt + "&tInt=" + radThirdInt + "&tab=" + table + "&idorgid=" + idorgid,
						format: new ol.format.GeoJSON(),
						strategy: ol.loadingstrategy.all
					});
					manmade_infrastructure.setSource(mmiSource);
					manmade_infrastructure.setVisible(true);

					addLegendContent('<div id="destinationsLegend"><table><tr><td><a id="destinationsImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="destinations" onchange="handleLegend($(this));" checked/></td><td colspan="2">Destinations</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/arena.png" /></td><td>Arena</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/beach.png" /></td><td>Beach</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/camp.png" /></td><td>Camp</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/castle.png" /></td><td>Castle</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/cave.png" /></td><td>Cave</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/club.png" /></td><td>Club</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/complex.png" /></td><td>Complex</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/farm.png" /></td><td>Farm</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/golf course.png" /></td><td>Golf Course</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/landmark.png" /></td><td>Landmark</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/lodge.png" /></td><td>Lodge</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/monument.png" /></td><td>Monument</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/museum.png" /></td><td>Museum</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/observatory.png" /></td><td>Observatory</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/orchard.png" /></td><td>Orchard</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/pool.png" /></td><td>Pool</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/racetrack.png" /></td><td>Racetrack</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/ranch.png" /></td><td>Ranch</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/resort.png" /></td><td>Resort</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/retreat.png" /></td><td>Retreat</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/ruins.png" /></td><td>Ruins</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/site.png" /></td><td>Site</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/speedway.png" /></td><td>Speedway</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/stadium.png" /></td><td>Stadium</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/winery.png" /></td><td>Winery</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/yacht.png" /></td><td>yacht</td></tr></table></div>', true, "legendData");
					break;

				case 'reportManMadePublic':
					table = "manmade_public_spaces";
					idorgid = "id";
					$("#tableMMPMulti").show();
					mmpSource = new ol.source.Vector({
						url: "aza.php?point=" + clickedPoint + "&fInt=" + radFirstInt + "&sInt=" + radSecondInt + "&tInt=" + radThirdInt + "&tab=" + table + "&idorgid=" + idorgid,
						format: new ol.format.GeoJSON(),
						strategy: ol.loadingstrategy.all
					});
					manmade_public_spaces.setSource(mmpSource);
					manmade_public_spaces.setVisible(true);

					addLegendContent('<div id="publicLegend"><table><tr><td><a id="publicImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="public" onchange="handleLegend($(this));" checked/></td><td colspan="2">Public Places</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/bay.png" /></td><td>Bay</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/court.png" /></td><td>Court</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/forest.png" /></td><td>Forest</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/harbor.png" /></td><td>Harbor</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/island.png" /></td><td>Island</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/lake.png" /></td><td>Lake</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/landing.png" /></td><td>Landing</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/lookout.png" /></td><td>Lookout</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/marina.png" /></td><td>Marina</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/meadow.png" /></td><td>Meadow</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/mountain.png" /></td><td>Mountain</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/park.png" /></td><td>Park</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/pier.png" /></td><td>Pier</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/plaza.png" /></td><td>Plaza</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/pond.png" /></td><td>Pond</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/reservation.png" /></td><td>Reservation</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/shelter.png" /></td><td>Manmade Public</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/square.png" /></td><td>Square</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/trail.png" /></td><td>Trail</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/valley.png" /></td><td>Valley</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/view.png" /></td><td>View</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/wharf.png" /></td><td>Wharf</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/woods.png" /></td><td>Woods</td></tr></table></div>', true, "legendData");
					break;

				case 'reportManMadeRetail':
					table = "manmade_retail_prices";
					idorgid = "id";
					$("#tableMMRMulti").show();
					mmrSource = new ol.source.Vector({
						url: "aza.php?point=" + clickedPoint + "&fInt=" + radFirstInt + "&sInt=" + radSecondInt + "&tInt=" + radThirdInt + "&tab=" + table + "&idorgid=" + idorgid,
						format: new ol.format.GeoJSON(),
						strategy: ol.loadingstrategy.all
					});
					manmade_retail_prices.setSource(mmrSource);
					manmade_retail_prices.setVisible(true);

					addLegendContent('<div id="retailLegend"><table><tr><td><a id="retailImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="retail" onchange="handleLegend($(this));" checked/></td><td colspan="2">Retail Places</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/emporium.png" /></td><td>Emporium</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/mall.png" /></td><td>Mall</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/market.png" /></td><td>Market</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/mart.png" /></td><td>Mart</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/shop.png" /></td><td>Shop</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/store.png" /></td><td>Store</td></tr></table></div>', true, "legendData");
					break;

				case 'reportAirports':
					table = "airports";
					idorgid = "importance";
					$("#tableAirportsMulti").show();
					airSource = new ol.source.Vector({
						url: "aza.php?point=" + clickedPoint + "&fInt=" + radFirstInt + "&sInt=" + radSecondInt + "&tInt=" + radThirdInt + "&tab=" + table + "&idorgid=" + idorgid,
						format: new ol.format.GeoJSON(),
						strategy: ol.loadingstrategy.all
					});
					airport.setSource(airSource);
					airport.setVisible(true);

					addLegendContent('<div id="airportLegend"><table><tr><td><a id="airportImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="airport" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/Airports/medium.png" /></td><td>Airfields</td></tr></table></div>', true, "legendData");
					$('#tptData').selectpicker('val', 'airports');
					break;

				case 'reportFreightInt':
					table = "freightintersects";
					idorgid = "gid";
					$("#tableFreightMulti").show();
					freSource = new ol.source.Vector({
						url: "aza.php?point=" + clickedPoint + "&fInt=" + radFirstInt + "&sInt=" + radSecondInt + "&tInt=" + radThirdInt + "&tab=" + table + "&idorgid=" + idorgid,
						format: new ol.format.GeoJSON(),
						strategy: ol.loadingstrategy.all
					});
					freightIntersects.setSource(freSource);
					freightIntersects.setVisible(true);

					addLegendContent('<div id="freightIntLegend"><table><tr><td><a id="freightIntImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="freightInt" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/freight.png" /></td><td>Freight Intersections</td></tr></table></div>', true, "legendData");
					$('#tptData').selectpicker('val', 'flag');
					break;

				case 'reportInterchanges':
					table = "interchanges";
					idorgid = "gid";
					$("#tableCrossingMulti").show();
					intSource = new ol.source.Vector({
						url: "aza.php?point=" + clickedPoint + "&fInt=" + radFirstInt + "&sInt=" + radSecondInt + "&tInt=" + radThirdInt + "&tab=" + table + "&idorgid=" + idorgid,
						format: new ol.format.GeoJSON(),
						strategy: ol.loadingstrategy.all
					});
					interchange.setSource(intSource);
					interchange.setVisible(true);

					addLegendContent('<div id="interchangeLegend"><table><tr><td><a id="interchangeImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="interchange" onchange="handleLegend($(this));" checked/></td><td><img src="images/Icons/crossing.png" /></td><td>Interchanges</td></tr></table></div>', true, "legendData");
					$('#tptData').selectpicker('val', 'interchange');
					break;

				case 'reportIana':
					table = "iana";
					idorgid = "gid";
					$("#tableIanaMulti").show();
					ianSource = new ol.source.Vector({
						url: "aza.php?point=" + clickedPoint + "&fInt=" + radFirstInt + "&sInt=" + radSecondInt + "&tInt=" + radThirdInt + "&tab=" + table + "&idorgid=" + idorgid,
						format: new ol.format.GeoJSON(),
						strategy: ol.loadingstrategy.all
					});
					iana.setSource(ianSource);
					iana.setVisible(true);

					addLegendContent('<div id="ianaLegend"><table><tr><td><a id="ianaImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="iana" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/iana.png" /></td><td>IANA</td></tr></table></div>', true, "legendData");
					$('#tptData').selectpicker('val', 'iana');
					break;

				case 'reportTransitStop':
					table = "transitstations";
					idorgid = "gid";
					$("#tableTransitMulti").show();
					traSource = new ol.source.Vector({
						url: "aza.php?point=" + clickedPoint + "&fInt=" + radFirstInt + "&sInt=" + radSecondInt + "&tInt=" + radThirdInt + "&tab=" + table + "&idorgid=" + idorgid,
						format: new ol.format.GeoJSON(),
						strategy: ol.loadingstrategy.all
					});
					transStop.setSource(traSource);
					transStop.setVisible(true);

					addLegendContent('<div id="transStopLegend"><table><tr><td><a id="transStopsImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="transStops" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/transit.png" /></td><td>Transit Stops</td></tr></table></div>', true, "legendData");
					$('#tptData').selectpicker('val', 'transStops');
					break;

				case 'reportPortFacility':
					table = "port_facility";
					idorgid = "gid";
					$("#tablePortMulti").show();
					porSource = new ol.source.Vector({
						url: "aza.php?point=" + clickedPoint + "&fInt=" + radFirstInt + "&sInt=" + radSecondInt + "&tInt=" + radThirdInt + "&tab=" + table + "&idorgid=" + idorgid,
						format: new ol.format.GeoJSON(),
						strategy: ol.loadingstrategy.all
					});
					portFacility.setSource(porSource);
					portFacility.setVisible(true);

					addLegendContent('<div id="portFacLegend"><table><tr><td><a id="portfacilityImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="portfacility" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/port.png" /></td><td>Port Facility</td></tr></table></div>', true, "legendData");
					$('#tptData').selectpicker('val', 'portFacility');
					break;

				case 'reportMclane':
					table = "mclane";
					idorgid = "gid";
					$("#tableMclaneMulti").show();
					amaSource = new ol.source.Vector({
						url: "aza.php?point=" + clickedPoint + "&fInt=" + radFirstInt + "&sInt=" + radSecondInt + "&tInt=" + radThirdInt + "&tab=" + table + "&idorgid=" + idorgid,
						format: new ol.format.GeoJSON(),
						strategy: ol.loadingstrategy.all
					});
					mclane.setSource(amaSource);
					mclane.setVisible(true);

					addLegendContent('<div id="mclaneLegend"><table><tr><td><a id="mclaneImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="mclane" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="75px" src="images/Icons/distributions/mclane.png" /></td><td>McLane DCs</td></tr></table></div>', true, "legendData");
					$('#dcData').selectpicker('val', 'mclane');
					break;

				case 'reportAmazon':
					table = "amazon";
					idorgid = "gid";
					$("#tableAmazonMulti").show();
					amaSource = new ol.source.Vector({
						url: "aza.php?point=" + clickedPoint + "&fInt=" + radFirstInt + "&sInt=" + radSecondInt + "&tInt=" + radThirdInt + "&tab=" + table + "&idorgid=" + idorgid,
						format: new ol.format.GeoJSON(),
						strategy: ol.loadingstrategy.all
					});
					amazon.setSource(amaSource);
					amazon.setVisible(true);

					addLegendContent('<div id="amazonLegend"><table><tr><td><a id="amazonImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="amazon" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/distributions/amazon.png" /></td><td>Amazon DCs</td></tr></table></div>', true, "legendData");
					$('#dcData').selectpicker('val', 'amazon');
					break;

				case 'reportSysco':
					table = "sysco";
					idorgid = "gid";
					$("#tableSyscoMulti").show();
					sysSource = new ol.source.Vector({
						url: "aza.php?point=" + clickedPoint + "&fInt=" + radFirstInt + "&sInt=" + radSecondInt + "&tInt=" + radThirdInt + "&tab=" + table + "&idorgid=" + idorgid,
						format: new ol.format.GeoJSON(),
						strategy: ol.loadingstrategy.all
					});
					sysco.setSource(sysSource);
					sysco.setVisible(true);

					addLegendContent('<div id="syscoLegend"><table><tr><td><a id="syscoImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="sysco" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="65px" src="images/Icons/distributions/sysco.png" /></td><td>Sysco DCs</td></tr></table></div>', true, "legendData");
					$('#dcData').selectpicker('val', 'sysco');
					break;

				case 'reportUsf':
					table = "usfoods";
					idorgid = "gid";
					$("#tableUsfMulti").show();
					usfSource = new ol.source.Vector({
						url: "aza.php?point=" + clickedPoint + "&fInt=" + radFirstInt + "&sInt=" + radSecondInt + "&tInt=" + radThirdInt + "&tab=" + table + "&idorgid=" + idorgid,
						format: new ol.format.GeoJSON(),
						strategy: ol.loadingstrategy.all
					});
					usf.setSource(usfSource);
					usf.setVisible(true);

					addLegendContent('<div id="usfLegend"><table><tr><td><a id="usfImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="usf" onchange="handleLegend($(this));" checked/></td><td><img height="30px" width="40px" src="images/Icons/distributions/usf.png" /></td><td>US Foods</td></tr></table></div>', true, "legendData");
					$('#dcData').selectpicker('val', 'usfoods');
					break;

				case 'reportFedex':
					table = "fedex";
					idorgid = "gid";
					$("#tableFedexMulti").show();
					fedSource = new ol.source.Vector({
						url: "aza.php?point=" + clickedPoint + "&fInt=" + radFirstInt + "&sInt=" + radSecondInt + "&tInt=" + radThirdInt + "&tab=" + table + "&idorgid=" + idorgid,
						format: new ol.format.GeoJSON(),
						strategy: ol.loadingstrategy.all
					});
					fedex.setSource(fedSource);
					fedex.setVisible(true);

					addLegendContent('<div id="fedexLegend"><table><tr><td><a id="fedexImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="fedex" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="50px" src="images/Icons/distributions/fedex.png" /></td><td>Fedex</td></tr></table></div>', true, "legendData");
					$('#dcData').selectpicker('val', 'fedex');
					break;

				case 'reportDhl':
					table = "dhl";
					idorgid = "gid";
					$("#tableDhlMulti").show();
					dhlSource = new ol.source.Vector({
						url: "aza.php?point=" + clickedPoint + "&fInt=" + radFirstInt + "&sInt=" + radSecondInt + "&tInt=" + radThirdInt + "&tab=" + table + "&idorgid=" + idorgid,
						format: new ol.format.GeoJSON(),
						strategy: ol.loadingstrategy.all
					});
					dhl.setSource(dhlSource);
					dhl.setVisible(true);

					addLegendContent('<div id="dhlLegend"><table><tr><td><a id="dhlImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="dhl" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="50px" src="images/Icons/distributions/dhl.png" /></td><td>DHL</td></tr></table></div>', true, "legendData");
					$('#dcData').selectpicker('val', 'dhl');
					break;

				case 'reportUps':
					table = "ups";
					idorgid = "gid";
					$("#tableUpsMulti").show();
					upsSource = new ol.source.Vector({
						url: "aza.php?point=" + clickedPoint + "&fInt=" + radFirstInt + "&sInt=" + radSecondInt + "&tInt=" + radThirdInt + "&tab=" + table + "&idorgid=" + idorgid,
						format: new ol.format.GeoJSON(),
						strategy: ol.loadingstrategy.all
					});
					ups.setSource(upsSource);
					ups.setVisible(true);

					addLegendContent('<div id="upsLegend"><table><tr><td><a id="upsImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="ups" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/distributions/ups.png" /></td><td>UPS</td></tr></table></div>', true, "legendData");
					$('#dcData').selectpicker('val', 'usps');
					break;

				case 'reportAlbertsons':
					table = "albertsons";
					idorgid = "gid";
					$("#tableAlbertsonsMulti").show();
					albSource = new ol.source.Vector({
						url: "aza.php?point=" + clickedPoint + "&fInt=" + radFirstInt + "&sInt=" + radSecondInt + "&tInt=" + radThirdInt + "&tab=" + table + "&idorgid=" + idorgid,
						format: new ol.format.GeoJSON(),
						strategy: ol.loadingstrategy.all
					});
					albertsons.setSource(albSource);
					albertsons.setVisible(true);

					addLegendContent('<div id="albertsonsLegend"><table><tr><td><a id="albertsonsImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="albertsons" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/retail/Albertsons/2.png" /></td><td>Albertsons</td></tr></table></div>', true, "legendData");
					$('#retailData').selectpicker('val', 'albertsons');
					break;

				case 'reportCulver':
					table = "culver";
					idorgid = "gid";
					$("#tableCulverMulti").show();
					culSource = new ol.source.Vector({
						url: "aza.php?point=" + clickedPoint + "&fInt=" + radFirstInt + "&sInt=" + radSecondInt + "&tInt=" + radThirdInt + "&tab=" + table + "&idorgid=" + idorgid,
						format: new ol.format.GeoJSON(),
						strategy: ol.loadingstrategy.all
					});
					culver.setSource(culSource);
					culver.setVisible(true);

					addLegendContent('<div id="culverLegend"><table><tr><td><a id="culverImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="culver" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="75px" src="images/Icons/retail/culver.png" /></td><td>Culver\'s Restaurants</td></tr></table></div>', true, "legendData");
					$('#retailData').selectpicker('val', 'culver');
					break;

				case 'reportThornton':
					table = "thornton";
					idorgid = "gid";
					$("#tableThorntonMulti").show();
					culSource = new ol.source.Vector({
						url: "aza.php?point=" + clickedPoint + "&fInt=" + radFirstInt + "&sInt=" + radSecondInt + "&tInt=" + radThirdInt + "&tab=" + table + "&idorgid=" + idorgid,
						format: new ol.format.GeoJSON(),
						strategy: ol.loadingstrategy.all
					});
					thornton.setSource(culSource);
					thornton.setVisible(true);

					addLegendContent('<div id="thorntonLegend"><table><tr><td><a id="thorntonImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="thornton" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="125px" src="images/Icons/thornton.png" /></td><td>Thornton Stores</td></tr></table></div>', true, "legendData");
					$('#retailData').selectpicker('val', 'thornton');
					break;

				case 'reportDicks':
					table = "dicks";
					idorgid = "gid";
					$("#tableDicksMulti").show();
					dicSource = new ol.source.Vector({
						url: "aza.php?point=" + clickedPoint + "&fInt=" + radFirstInt + "&sInt=" + radSecondInt + "&tInt=" + radThirdInt + "&tab=" + table + "&idorgid=" + idorgid,
						format: new ol.format.GeoJSON(),
						strategy: ol.loadingstrategy.all
					});
					dicks.setSource(dicSource);
					dicks.setVisible(true);

					addLegendContent('<div id="dicksLegend"><table><tr><td><a id="dicksImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="dicks" onchange="handleLegend($(this));" checked/></td><td><img height="35px" width="80px" src="images/Icons/retail/dicks.png" /></td><td>Dicks Sporting Goods</td></tr></table></div>', true, "legendData");
					$('#retailData').selectpicker('val', 'dicks');
					break;

				case 'reportPublix':
					table = "publix";
					idorgid = "gid";
					$("#tablePublixMulti").show();
					pubSource = new ol.source.Vector({
						url: "aza.php?point=" + clickedPoint + "&fInt=" + radFirstInt + "&sInt=" + radSecondInt + "&tInt=" + radThirdInt + "&tab=" + table + "&idorgid=" + idorgid,
						format: new ol.format.GeoJSON(),
						strategy: ol.loadingstrategy.all
					});
					publix.setSource(pubSource);
					publix.setVisible(true);

					addLegendContent('<div id="publixLegend"><table><tr><td><a id="publixImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="publix" onchange="handleLegend($(this));" checked/></td><td><img height="20px" width="75px" src="images/Icons/retail/publix.png" /></td><td>Publix Stores</td></tr></table></div>', true, "legendData");
					$('#retailData').selectpicker('val', 'publix');
					break;

				case 'reportGiantEagle':
					table = "gianteagle";
					idorgid = "gid";
					$("#tableGiantEagleMulti").show();
					giantSource = new ol.source.Vector({
						url: "aza.php?point=" + clickedPoint + "&fInt=" + radFirstInt + "&sInt=" + radSecondInt + "&tInt=" + radThirdInt + "&tab=" + table + "&idorgid=" + idorgid,
						format: new ol.format.GeoJSON(),
						strategy: ol.loadingstrategy.all
					});
					gianteagle.setSource(giantSource);
					gianteagle.setVisible(true);

					addLegendContent('<div id="gianteagleLegend"><table><tr><td><a id="gianteagleImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="gianteagle" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/retail/GiantEagle/gianteagle.png" /></td><td>Giant Eagle</td></tr></table></div>', true, "legendData");
					$('#retailData').selectpicker('val', 'gianteagle');
					break;

				case 'reportKroger':
					table = "kroger";
					idorgid = "gid";
					$("#tableKrogerMulti").show();
					krogerSource = new ol.source.Vector({
						url: "aza.php?point=" + clickedPoint + "&fInt=" + radFirstInt + "&sInt=" + radSecondInt + "&tInt=" + radThirdInt + "&tab=" + table + "&idorgid=" + idorgid,
						format: new ol.format.GeoJSON(),
						strategy: ol.loadingstrategy.all
					});
					kroger.setSource(krogerSource);
					kroger.setVisible(true);

					addLegendContent('<div id="krogerLegend"><table><tr><td><a id="krogerImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="kroger" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/retail/Kroger/Kroger.png" /></td><td>Kroger</td></tr></table></div>', true, "legendData");
					$('#retailData').selectpicker('val', 'kroger');
					break;

				case 'reportShopping':
					table = "shoppingcenter";
					idorgid = "gid";
					$("#tableShoppingMulti").show();
					shoSource = new ol.source.Vector({
						url: "aza.php?point=" + clickedPoint + "&fInt=" + radFirstInt + "&sInt=" + radSecondInt + "&tInt=" + radThirdInt + "&tab=" + table + "&idorgid=" + idorgid,
						format: new ol.format.GeoJSON(),
						strategy: ol.loadingstrategy.all
					});
					shoppingcenter.setSource(shoSource);
					shoppingcenter.setVisible(true);

					addLegendContent('<div id="shoppingLegend"><table><tr><td><a id="shoppingImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="shopping" onchange="handleLegend($(this));" checked/></td><td><img height="30px" width="30px" src="images/Icons/retail/shoppingcenter.png" /></td><td>Shopping Centers</td></tr></table></div>', true, "legendData");
					$('#retailData').selectpicker('val', 'shopping');
					break;

				case 'reportFoodPlants':
					table = "foodplants";
					idorgid = "gid";
					$("#tableTysonMulti").show();
					fooSource = new ol.source.Vector({
						url: "aza.php?point=" + clickedPoint + "&fInt=" + radFirstInt + "&sInt=" + radSecondInt + "&tInt=" + radThirdInt + "&tab=" + table + "&idorgid=" + idorgid,
						format: new ol.format.GeoJSON(),
						strategy: ol.loadingstrategy.all
					});
					foodplants.setSource(fooSource);
					foodplants.setVisible(true);

					addLegendContent('<div id="foodplantsLegend"><table><tr><td><a id="foodplantsImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="foodplants" onchange="handleLegend($(this));" checked/></td><td><img height="40px" width="45px" src="images/Icons/retail/tyson.png" /></td><td>Food Plants & Offices</td></tr></table></div>', true, "legendData");
					$('#retailData').selectpicker('val', 'foodplants');
					break;

				case 'reportFarmRanches':
					table = "ranchesandfarms";
					idorgid = "gid";
					$("#tableRanchesMulti").show();
					ranSource = new ol.source.Vector({
						url: "aza.php?point=" + clickedPoint + "&fInt=" + radFirstInt + "&sInt=" + radSecondInt + "&tInt=" + radThirdInt + "&tab=" + table + "&idorgid=" + idorgid,
						format: new ol.format.GeoJSON(),
						strategy: ol.loadingstrategy.all
					});
					ranchesandfarms.setSource(ranSource);
					ranchesandfarms.setVisible(true);

					addLegendContent('<div id="ranchesLegend"><table><tr><td><a id="ranchesImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="ranches" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/ranches.png" /></td><td>Food Plants & Offices</td></tr></table></div>', true, "legendData");
					break;

				case 'reportTraderJoes':
					table = "traderjoes";
					idorgid = "gid";
					$("#tableTraderJoesMulti").show();
					traderSource = new ol.source.Vector({
						url: "aza.php?point=" + clickedPoint + "&fInt=" + radFirstInt + "&sInt=" + radSecondInt + "&tInt=" + radThirdInt + "&tab=" + table + "&idorgid=" + idorgid,
						format: new ol.format.GeoJSON(),
						strategy: ol.loadingstrategy.all
					});
					traderjoes.setSource(traderSource);
					traderjoes.setVisible(true);

                    addLegendContent('<div id="traderjoesLegend"><table><tr><td><a id="traderjoesImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="traderjoes" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="50px" src="images/Icons/retail/traderjoes.png" /></td><td>Trader Joe\'s</td></tr></table></div>', true, "legendData");
					traderjoes.set('displayInLayerSwitcher', true);
					break;

				case 'reportWholeFoods':
					table = "wholefoods";
					idorgid = "gid";
					$("#tableWholeFoodsMulti").show();
					wholeSource = new ol.source.Vector({
						url: "aza.php?point=" + clickedPoint + "&fInt=" + radFirstInt + "&sInt=" + radSecondInt + "&tInt=" + radThirdInt + "&tab=" + table + "&idorgid=" + idorgid,
						format: new ol.format.GeoJSON(),
						strategy: ol.loadingstrategy.all
					});
					wholefoods.setSource(wholeSource);
					wholefoods.setVisible(true);

                    addLegendContent('<div id="wholefoodsLegend"><table><tr><td><a id="wholefoodsImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="wholefoods" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="50px" src="images/Icons/retail/wholefoods.png" /></td><td>Whole Foods</td></tr></table></div>', true, "legendData");
					wholefoods.set('displayInLayerSwitcher', true);
					break;

				case 'reportPopu':
					$("#tablePopuMulti").show();
					break;

				case 'reportDensity':
					$("#tableDenMulti").show();

					densitySource = new ol.source.Vector({
						url: "azb.php?point=" + clickedPoint + "&fInt=" + radFirstInt + "&sInt=" + radSecondInt + "&tInt=" + radThirdInt,
						format: new ol.format.GeoJSON(),
						strategy: ol.loadingstrategy.all
					});
					densityLayer.setSource(densitySource);
					densityLayer.setVisible(true);
					break;

				case 'reportHH':
					$("#tableHHMulti").show();
					break;

				case 'reportIncome':
					$("#tableIncMulti").show();
					break;

				case 'reportVacancy':
					$("#tableVacMulti").show();

					vacancySource = new ol.source.Vector({
						url: "azc.php?point=" + clickedPoint + "&fInt=" + radFirstInt + "&sInt=" + radSecondInt + "&tInt=" + radThirdInt,
						format: new ol.format.GeoJSON(),
						strategy: ol.loadingstrategy.all
					});
					vacancyLayer.setSource(vacancySource);
					vacancyLayer.setVisible(true);
					break;

				default:
					break;
			}
		}

		if (showedOutput == false) {
			$('#mainDivOutput').animate({
				width: 'toggle'
			});
		}
		$("#marketOverviewTableSmall").hide();
		$("#marketOverviewTableBig").show();
		$('#showOutput').css('margin-right', '475px');
		showedOutput = true;
		if (showedInput) {
			$('#mainDivInput').animate({
				width: 'toggle'
			});
		}
		$('#showInput').css('margin-right', '-150px');
		$('#showConditions').css('margin-right', '-150px');
		$('#showDeterminants').css('margin-right', '-150px');
		$('#showFood').css('margin-right', '-150px');
		$('#showHousing').css('margin-right', '-150px');
		$('#showHealth').css('margin-right', '-150px');
		showedInput = false;
		showedConditions = false;
		showedDeterminants = false;
		showedFood = false;
		showedHousing = false;
		showedHealth = false;
		dataGraphModal();
	}catch(ex){}

    analysisSource = new ol.source.Vector({
        url: "azdCombine.php?point=" + clickedPoint + "&fInt=" + radFirstInt + "&sInt=" + radSecondInt + "&tInt=" + radThirdInt,
        format: new ol.format.GeoJSON(),
        strategy: ol.loadingstrategy.all
    });
    analysisLayer.setSource(analysisSource);

    analysisSource.once('change', function(e) {
        if (analysisSource.getState() === 'ready') {
            var features = analysisSource.getFeatures();
            if (features) {
                for (var i = 0; i < features.length; i++) {
                    if (features[i].S.total1M) {
                        document.getElementById('pop1Mile').innerHTML = String(features[i].S.population).replace(/(.)(?=(\d{3})+$)/g, '$1,');
                        document.getElementById('hh1Mile').innerHTML = String(features[i].S.households).replace(/(.)(?=(\d{3})+$)/g, '$1,');
                        document.getElementById('inc1Mile').innerHTML = String(features[i].S.income).replace(/(.)(?=(\d{3})+$)/g, '$1,');
                    }
                    if (features[i].S.total3M) {
                        document.getElementById('pop3Mile').innerHTML = String(features[i].S.population).replace(/(.)(?=(\d{3})+$)/g, '$1,');
                        document.getElementById('hh3Mile').innerHTML = String(features[i].S.households).replace(/(.)(?=(\d{3})+$)/g, '$1,');
                        document.getElementById('inc3Mile').innerHTML = String(features[i].S.income).replace(/(.)(?=(\d{3})+$)/g, '$1,');
                    }
                    if (features[i].S.total6M) {
                        document.getElementById('pop6Mile').innerHTML = String(features[i].S.population).replace(/(.)(?=(\d{3})+$)/g, '$1,');
                        document.getElementById('hh6Mile').innerHTML = String(features[i].S.households).replace(/(.)(?=(\d{3})+$)/g, '$1,');
                        document.getElementById('inc6Mile').innerHTML = String(features[i].S.income).replace(/(.)(?=(\d{3})+$)/g, '$1,');
                    }
                }
                document.getElementById('loading').style.display = "none";
                markerLayer.setVisible(true);

                drawCircleInMeter(map, selectedRadiusLoct, radFirstInt, 1, radiusSource, 111);
                drawCircleInMeter(map, selectedRadiusLoct, radSecondInt, 2, radiusSource, 111);
                drawCircleInMeter(map, selectedRadiusLoct, radThirdInt, 3, radiusSource, 111);

                radiusLayer.setSource(radiusSource);
                radiusLayer.setVisible(true);

                radiusLayer.addFilter(maskFilter);
                maskFilter.set('active', true);
                $("#divMask").show();
                addLegendContent('<div id="analysisLegend"><table><tr><td><a id="analysisImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="analysis" onchange="handleLegend($(this));" checked/></td><td colspan="2">Radius based Analysis</td></tr><tr><td></td><td><div style="height: 25px; width: 25px; margin: 3px; margin-right: 10px; float: left; border:2px solid #2b8cbe; border-radius:50%; -moz-border-radius:50%; -webkit-border-radius:50%;"></div></td><td>' + $("#radFirstInt").val() + ' Mile</td></tr><tr><td></td><td><div style="height: 25px; width: 25px; margin: 3px; margin-right: 10px; float: left; border:2px solid #0868ac; border-radius:50%; -moz-border-radius:50%; -webkit-border-radius:50%;"></div></td><td>' + $("#radSecondInt").val() + ' Mile</td></tr><tr><td></td><td><div style="height: 25px; width: 25px; margin: 3px; margin-right: 10px; float: left; border:2px solid #084081; border-radius:50%; -moz-border-radius:50%; -webkit-border-radius:50%;"></div></td><td>' + $("#radThirdInt").val() + ' Mile</td></tr></table></div>', true, "legendArea");
				updateTables();
                try {
                    map.getView().fit(radiusSource.getExtent(), map.getSize());
                } catch (ex) {}
            }
        }
    });

    analysisLayer.setVisible(true);

    $('#dataForReport').selectpicker('val', selectedOpts);
    $("#dataForReport").bind("change", updateReportDivs);

    $('#dataToGraph').selectpicker('val', $('#dataToGraphModal').val());
    reportDialog.dialog("close");
}

function updateTables(){
	try{
	farSource.once('change', function(e) {
		if (farSource.getState() === 'ready') {
			var features = farSource.getFeatures();
			if (features) {
				for (var i = 0; i < features.length; i++) {
					if (features[i].S.total1M)
						document.getElementById('farmer1Mile').innerHTML = features[i].S.total1M;
					if (features[i].S.total3M)
						document.getElementById('farmer3Mile').innerHTML = features[i].S.total3M;
					if (features[i].S.total6M)
						document.getElementById('farmer6Mile').innerHTML = features[i].S.total6M;
				}
			}
		}
	});}
	catch(ex){}

	try{
	stoSource.once('change', function(e) {
		if (stoSource.getState() === 'ready') {
			var features = stoSource.getFeatures();
			if (features) {
				for (var i = 0; i < features.length; i++) {
					if (features[i].S.total1M)
						document.getElementById('gs1Mile').innerHTML = features[i].S.total1M;
					if (features[i].S.total3M)
						document.getElementById('gs3Mile').innerHTML = features[i].S.total3M;
					if (features[i].S.total6M)
						document.getElementById('gs6Mile').innerHTML = features[i].S.total6M;
				}
			}
		}
	});}
	catch(ex){}
			
	try{		
	logSource.once('change', function(e) {
		if (logSource.getState() === 'ready') {
			var features = logSource.getFeatures();
			if (features) {
				for (var i = 0; i < features.length; i++) {
					if (features[i].S.total1M)
						document.getElementById('sl1Mile').innerHTML = features[i].S.total1M;
					if (features[i].S.total3M)
						document.getElementById('sl3Mile').innerHTML = features[i].S.total3M;
					if (features[i].S.total6M)
						document.getElementById('sl6Mile').innerHTML = features[i].S.total6M;
				}
			}
		}
	});}
	catch(ex){}
			
	try{		
	brownSource.once('change', function(e) {
		if (brownSource.getState() === 'ready') {
			var features = brownSource.getFeatures();
			if (features) {
				for (var i = 0; i < features.length; i++) {
					if (features[i].S.total1M)
						document.getElementById('bf1Mile').innerHTML = features[i].S.total1M;
					if (features[i].S.total3M)
						document.getElementById('bf3Mile').innerHTML = features[i].S.total3M;
					if (features[i].S.total6M)
						document.getElementById('bf6Mile').innerHTML = features[i].S.total6M;
				}
			}
		}
	});}
	catch(ex){}
		
	try{			
	garSource.once('change', function(e) {
		if (garSource.getState() === 'ready') {
			var features = garSource.getFeatures();
			if (features) {
				for (var i = 0; i < features.length; i++) {
					if (features[i].S.total1M)
						document.getElementById('garden1Mile').innerHTML = features[i].S.total1M;
					if (features[i].S.total3M)
						document.getElementById('garden3Mile').innerHTML = features[i].S.total3M;
					if (features[i].S.total6M)
						document.getElementById('garden6Mile').innerHTML = features[i].S.total6M;
				}
			}
		}
	});}
	catch(ex){}
			
	try{		
	natSource.once('change', function(e) {
		if (natSource.getState() === 'ready') {
			var features = natSource.getFeatures();
			if (features) {
				for (var i = 0; i < features.length; i++) {
					if (features[i].S.total1M)
						document.getElementById('natural1Mile').innerHTML = features[i].S.total1M;
					if (features[i].S.total3M)
						document.getElementById('natural3Mile').innerHTML = features[i].S.total3M;
					if (features[i].S.total6M)
						document.getElementById('natural6Mile').innerHTML = features[i].S.total6M;
				}
			}
		}
	});}
	catch(ex){}
		
	try{			
	mmdSource.once('change', function(e) {
		if (mmdSource.getState() === 'ready') {
			var features = mmdSource.getFeatures();
			if (features) {
				for (var i = 0; i < features.length; i++) {
					if (features[i].S.total1M)
						document.getElementById('mmd1Mile').innerHTML = features[i].S.total1M;
					if (features[i].S.total3M)
						document.getElementById('mmd3Mile').innerHTML = features[i].S.total3M;
					if (features[i].S.total6M)
						document.getElementById('mmd6Mile').innerHTML = features[i].S.total6M;
				}
			}
		}
	});}
	catch(ex){}
		
	try{			
	mmfSource.once('change', function(e) {
		if (mmfSource.getState() === 'ready') {
			var features = mmfSource.getFeatures();
			if (features) {
				for (var i = 0; i < features.length; i++) {
					if (features[i].S.total1M)
						document.getElementById('mmf1Mile').innerHTML = features[i].S.total1M;
					if (features[i].S.total3M)
						document.getElementById('mmf3Mile').innerHTML = features[i].S.total3M;
					if (features[i].S.total6M)
						document.getElementById('mmf6Mile').innerHTML = features[i].S.total6M;
				}
			}
		}
	});}
	catch(ex){}
		
	try{			
	mmgSource.once('change', function(e) {
		if (mmgSource.getState() === 'ready') {
			var features = mmgSource.getFeatures();
			if (features) {
				for (var i = 0; i < features.length; i++) {
					if (features[i].S.total1M)
						document.getElementById('mmg1Mile').innerHTML = features[i].S.total1M;
					if (features[i].S.total3M)
						document.getElementById('mmg3Mile').innerHTML = features[i].S.total3M;
					if (features[i].S.total6M)
						document.getElementById('mmg6Mile').innerHTML = features[i].S.total6M;
				}
			}
		}
	});}
	catch(ex){}
		
	try{			
	mmiSource.once('change', function(e) {
		if (mmiSource.getState() === 'ready') {
			var features = mmiSource.getFeatures();
			if (features) {
				for (var i = 0; i < features.length; i++) {
					if (features[i].S.total1M)
						document.getElementById('mmi1Mile').innerHTML = features[i].S.total1M;
					if (features[i].S.total3M)
						document.getElementById('mmi3Mile').innerHTML = features[i].S.total3M;
					if (features[i].S.total6M)
						document.getElementById('mmi6Mile').innerHTML = features[i].S.total6M;
				}
			}
		}
	});}
	catch(ex){}
		
	try{			
	mmpSource.once('change', function(e) {
		if (mmpSource.getState() === 'ready') {
			var features = mmpSource.getFeatures();
			if (features) {
				for (var i = 0; i < features.length; i++) {
					if (features[i].S.total1M)
						document.getElementById('mmp1Mile').innerHTML = features[i].S.total1M;
					if (features[i].S.total3M)
						document.getElementById('mmp3Mile').innerHTML = features[i].S.total3M;
					if (features[i].S.total6M)
						document.getElementById('mmp6Mile').innerHTML = features[i].S.total6M;
				}
			}
		}
	});}
	catch(ex){}
		
	try{			
	mmrSource.once('change', function(e) {
		if (mmrSource.getState() === 'ready') {
			var features = mmrSource.getFeatures();
			if (features) {
				for (var i = 0; i < features.length; i++) {
					if (features[i].S.total1M)
						document.getElementById('mmr1Mile').innerHTML = features[i].S.total1M;
					if (features[i].S.total3M)
						document.getElementById('mmr3Mile').innerHTML = features[i].S.total3M;
					if (features[i].S.total6M)
						document.getElementById('mmr6Mile').innerHTML = features[i].S.total6M;
				}
			}
		}
	});}
	catch(ex){}
		
	try{			
	airSource.once('change', function(e) {
		if (airSource.getState() === 'ready') {
			var features = airSource.getFeatures();
			if (features) {
				for (var i = 0; i < features.length; i++) {
					if (features[i].S.total1M)
						document.getElementById('airports1Mile').innerHTML = features[i].S.total1M;
					if (features[i].S.total3M)
						document.getElementById('airports3Mile').innerHTML = features[i].S.total3M;
					if (features[i].S.total6M)
						document.getElementById('airports6Mile').innerHTML = features[i].S.total6M;
				}
			}
		}
	});}
	catch(ex){}
		
	try{			
	freSource.once('change', function(e) {
		if (freSource.getState() === 'ready') {
			var features = freSource.getFeatures();
			if (features) {
				for (var i = 0; i < features.length; i++) {
					if (features[i].S.total1M)
						document.getElementById('freight1Mile').innerHTML = features[i].S.total1M;
					if (features[i].S.total3M)
						document.getElementById('freight3Mile').innerHTML = features[i].S.total3M;
					if (features[i].S.total6M)
						document.getElementById('freight6Mile').innerHTML = features[i].S.total6M;
				}
			}
		}
	});}
	catch(ex){}
		
	try{			
	intSource.once('change', function(e) {
		if (intSource.getState() === 'ready') {
			var features = intSource.getFeatures();
			if (features) {
				for (var i = 0; i < features.length; i++) {
					if (features[i].S.total1M)
						document.getElementById('crossing1Mile').innerHTML = features[i].S.total1M;
					if (features[i].S.total3M)
						document.getElementById('crossing3Mile').innerHTML = features[i].S.total3M;
					if (features[i].S.total6M)
						document.getElementById('crossing6Mile').innerHTML = features[i].S.total6M;
				}
			}
		}
	});}
	catch(ex){}
		
	try{			
	ianSource.once('change', function(e) {
		if (ianSource.getState() === 'ready') {
			var features = ianSource.getFeatures();
			if (features) {
				for (var i = 0; i < features.length; i++) {
					if (features[i].S.total1M)
						document.getElementById('iana1Mile').innerHTML = features[i].S.total1M;
					if (features[i].S.total3M)
						document.getElementById('iana3Mile').innerHTML = features[i].S.total3M;
					if (features[i].S.total6M)
						document.getElementById('iana6Mile').innerHTML = features[i].S.total6M;
				}
			}
		}
	});}
	catch(ex){}
		
	try{			
	traSource.once('change', function(e) {
		if (traSource.getState() === 'ready') {
			var features = traSource.getFeatures();
			if (features) {
				for (var i = 0; i < features.length; i++) {
					if (features[i].S.total1M)
						document.getElementById('transit1Mile').innerHTML = features[i].S.total1M;
					if (features[i].S.total3M)
						document.getElementById('transit3Mile').innerHTML = features[i].S.total3M;
					if (features[i].S.total6M)
						document.getElementById('transit6Mile').innerHTML = features[i].S.total6M;
				}
			}
		}
	});}
	catch(ex){}
		
	try{			
	porSource.once('change', function(e) {
		if (porSource.getState() === 'ready') {
			var features = porSource.getFeatures();
			if (features) {
				for (var i = 0; i < features.length; i++) {
					if (features[i].S.total1M)
						document.getElementById('port1Mile').innerHTML = features[i].S.total1M;
					if (features[i].S.total3M)
						document.getElementById('port3Mile').innerHTML = features[i].S.total3M;
					if (features[i].S.total6M)
						document.getElementById('port6Mile').innerHTML = features[i].S.total6M;
				}
			}
		}
	});}
	catch(ex){}
		
	try{			
	amaSource.once('change', function(e) {
		if (amaSource.getState() === 'ready') {
			var features = amaSource.getFeatures();
			if (features) {
				for (var i = 0; i < features.length; i++) {
					if (features[i].S.total1M)
						document.getElementById('amazon1Mile').innerHTML = features[i].S.total1M;
					if (features[i].S.total3M)
						document.getElementById('amazon3Mile').innerHTML = features[i].S.total3M;
					if (features[i].S.total6M)
						document.getElementById('amazon6Mile').innerHTML = features[i].S.total6M;
				}
			}
		}
	});}
	catch(ex){}
		
	try{			
	sysSource.once('change', function(e) {
		if (sysSource.getState() === 'ready') {
			var features = sysSource.getFeatures();
			if (features) {
				for (var i = 0; i < features.length; i++) {
					if (features[i].S.total1M)
						document.getElementById('sysco1Mile').innerHTML = features[i].S.total1M;
					if (features[i].S.total3M)
						document.getElementById('sysco3Mile').innerHTML = features[i].S.total3M;
					if (features[i].S.total6M)
						document.getElementById('sysco6Mile').innerHTML = features[i].S.total6M;
				}
			}
		}
	});}
	catch(ex){}
		
	try{			
	usfSource.once('change', function(e) {
		if (usfSource.getState() === 'ready') {
			var features = usfSource.getFeatures();
			if (features) {
				for (var i = 0; i < features.length; i++) {
					if (features[i].S.total1M)
						document.getElementById('usf1Mile').innerHTML = features[i].S.total1M;
					if (features[i].S.total3M)
						document.getElementById('usf3Mile').innerHTML = features[i].S.total3M;
					if (features[i].S.total6M)
						document.getElementById('usf6Mile').innerHTML = features[i].S.total6M;
				}
			}
		}
	});}
	catch(ex){}
		
	try{			
	fedSource.once('change', function(e) {
		if (fedSource.getState() === 'ready') {
			var features = fedSource.getFeatures();
			if (features) {
				for (var i = 0; i < features.length; i++) {
					if (features[i].S.total1M)
						document.getElementById('fedex1Mile').innerHTML = features[i].S.total1M;
					if (features[i].S.total3M)
						document.getElementById('fedex3Mile').innerHTML = features[i].S.total3M;
					if (features[i].S.total6M)
						document.getElementById('fedex6Mile').innerHTML = features[i].S.total6M;
				}
			}
		}
	});}
	catch(ex){}
		
	try{			
	dhlSource.once('change', function(e) {
		if (dhlSource.getState() === 'ready') {
		var features = dhlSource.getFeatures();
			if (features) {
				for (var i = 0; i < features.length; i++) {
					if (features[i].S.total1M)
						document.getElementById('dhl1Mile').innerHTML = features[i].S.total1M;
					if (features[i].S.total3M)
						document.getElementById('dhl3Mile').innerHTML = features[i].S.total3M;
					if (features[i].S.total6M)
						document.getElementById('dhl6Mile').innerHTML = features[i].S.total6M;
				}
			}
		}
	});}
	catch(ex){}
		
	try{			
	upsSource.once('change', function(e) {
		if (upsSource.getState() === 'ready') {
			var features = upsSource.getFeatures();
			if (features) {
				for (var i = 0; i < features.length; i++) {
					if (features[i].S.total1M)
						document.getElementById('ups1Mile').innerHTML = features[i].S.total1M;
					if (features[i].S.total3M)
						document.getElementById('ups3Mile').innerHTML = features[i].S.total3M;
					if (features[i].S.total6M)
						document.getElementById('ups6Mile').innerHTML = features[i].S.total6M;
				}
			}
		}
	});}
	catch(ex){}
		
	try{			
	albSource.once('change', function(e) {
		if (albSource.getState() === 'ready') {
			var features = albSource.getFeatures();
			if (features) {
				for (var i = 0; i < features.length; i++) {
					if (features[i].S.total1M)
						document.getElementById('albertsons1Mile').innerHTML = features[i].S.total1M;
					if (features[i].S.total3M)
						document.getElementById('albertsons3Mile').innerHTML = features[i].S.total3M;
					if (features[i].S.total6M)
						document.getElementById('albertsons6Mile').innerHTML = features[i].S.total6M;
				}
			}
		}
	});}
	catch(ex){}
		
	try{			
	culSource.once('change', function(e) {
		if (culSource.getState() === 'ready') {
			var features = culSource.getFeatures();
			if (features) {
				for (var i = 0; i < features.length; i++) {
					if (features[i].S.total1M)
						document.getElementById('culver1Mile').innerHTML = features[i].S.total1M;
					if (features[i].S.total3M)
						document.getElementById('culver3Mile').innerHTML = features[i].S.total3M;
					if (features[i].S.total6M)
						document.getElementById('culver6Mile').innerHTML = features[i].S.total6M;
				}
			}
		}
	});}
	catch(ex){}
		
	try{			
	dicSource.once('change', function(e) {
		if (dicSource.getState() === 'ready') {
			var features = dicSource.getFeatures();
			if (features) {
				for (var i = 0; i < features.length; i++) {
					if (features[i].S.total1M)
						document.getElementById('dicks1Mile').innerHTML = features[i].S.total1M;
					if (features[i].S.total3M)
						document.getElementById('dicks3Mile').innerHTML = features[i].S.total3M;
					if (features[i].S.total6M)
						document.getElementById('dicks6Mile').innerHTML = features[i].S.total6M;
				}
			}
		}
	});}
	catch(ex){}
		
	try{			
	pubSource.once('change', function(e) {
		if (pubSource.getState() === 'ready') {
			var features = pubSource.getFeatures();
			if (features) {
				for (var i = 0; i < features.length; i++) {
					if (features[i].S.total1M)
						document.getElementById('publix1Mile').innerHTML = features[i].S.total1M;
					if (features[i].S.total3M)
						document.getElementById('publix3Mile').innerHTML = features[i].S.total3M;
					if (features[i].S.total6M)
						document.getElementById('publix6Mile').innerHTML = features[i].S.total6M;
				}
			}
		}
	});}
	catch(ex){}
		
	try{			
	giantSource.once('change', function(e) {
		if (giantSource.getState() === 'ready') {
			var features = giantSource.getFeatures();
			if (features) {
				for (var i = 0; i < features.length; i++) {
					if (features[i].S.total1M)
						document.getElementById('gianteagle1Mile').innerHTML = features[i].S.total1M;
					if (features[i].S.total3M)
						document.getElementById('gianteagle3Mile').innerHTML = features[i].S.total3M;
					if (features[i].S.total6M)
						document.getElementById('gianteagle6Mile').innerHTML = features[i].S.total6M;
				}
			}
		}
	});}
	catch(ex){}
		
	try{			
	krogerSource.once('change', function(e) {
		if (krogerSource.getState() === 'ready') {
			var features = krogerSource.getFeatures();
			if (features) {
				for (var i = 0; i < features.length; i++) {
					if (features[i].S.total1M)
						document.getElementById('kroger1Mile').innerHTML = features[i].S.total1M;
					if (features[i].S.total3M)
						document.getElementById('kroger3Mile').innerHTML = features[i].S.total3M;
					if (features[i].S.total6M)
						document.getElementById('kroger6Mile').innerHTML = features[i].S.total6M;
				}
			}
		}
	});}
	catch(ex){}
		
	try{			
	shoSource.once('change', function(e) {
		if (shoSource.getState() === 'ready') {
			var features = shoSource.getFeatures();
			if (features) {
				for (var i = 0; i < features.length; i++) {
					if (features[i].S.total1M)
						document.getElementById('shopping1Mile').innerHTML = features[i].S.total1M;
					if (features[i].S.total3M)
						document.getElementById('shopping3Mile').innerHTML = features[i].S.total3M;
					if (features[i].S.total6M)
						document.getElementById('shopping6Mile').innerHTML = features[i].S.total6M;
				}
			}
		}
	});}
	catch(ex){}
		
	try{			
	fooSource.once('change', function(e) {
		if (fooSource.getState() === 'ready') {
			var features = fooSource.getFeatures();
			if (features) {
				for (var i = 0; i < features.length; i++) {
					if (features[i].S.total1M)
						document.getElementById('tyson1Mile').innerHTML = features[i].S.total1M;
					if (features[i].S.total3M)
						document.getElementById('tyson3Mile').innerHTML = features[i].S.total3M;
					if (features[i].S.total6M)
						document.getElementById('tyson6Mile').innerHTML = features[i].S.total6M;
				}
			}
		}
	});}
	catch(ex){}
		
	try{			
	ranSource.once('change', function(e) {
		if (ranSource.getState() === 'ready') {
			var features = ranSource.getFeatures();
			if (features) {
				for (var i = 0; i < features.length; i++) {
					if (features[i].S.total1M)
						document.getElementById('ranches1Mile').innerHTML = features[i].S.total1M;
					if (features[i].S.total3M)
						document.getElementById('ranches3Mile').innerHTML = features[i].S.total3M;
					if (features[i].S.total6M)
						document.getElementById('ranches6Mile').innerHTML = features[i].S.total6M;
				}
			}
		}
	});}
	catch(ex){}
		
	try{			
	traderSource.once('change', function(e) {
		if (traderSource.getState() === 'ready') {
			var features = traderSource.getFeatures();
			if (features) {
				for (var i = 0; i < features.length; i++) {
					if (features[i].S.total1M)
						document.getElementById('traderjoes1Mile').innerHTML = features[i].S.total1M;
					if (features[i].S.total3M)
						document.getElementById('traderjoes3Mile').innerHTML = features[i].S.total3M;
					if (features[i].S.total6M)
						document.getElementById('traderjoes6Mile').innerHTML = features[i].S.total6M;
				}
			}
		}
	});}
	catch(ex){}
		
	try{
	wholeSource.once('change', function(e) {
		if (wholeSource.getState() === 'ready') {
			var features = wholeSource.getFeatures();
			if (features) {
				for (var i = 0; i < features.length; i++) {
					if (features[i].S.total1M)
						document.getElementById('wholefoods1Mile').innerHTML = features[i].S.total1M;
					if (features[i].S.total3M)
						document.getElementById('wholefoods3Mile').innerHTML = features[i].S.total3M;
					if (features[i].S.total6M)
						document.getElementById('wholefoods6Mile').innerHTML = features[i].S.total6M;
				}
			}
		}
	});}
	catch(ex){}
			
	try{		
	densitySource.once('change', function(e) {
		if (densitySource.getState() === 'ready') {
			var features = densitySource.getFeatures();
			if (features) {
				for (var i = 0; i < features.length; i++) {
					if (features[i].S.total1M)
						document.getElementById('den1Mile').innerHTML = String(features[i].S.density).replace(/(.)(?=(\d{3})+$)/g, '$1,');
					if (features[i].S.total3M)
						document.getElementById('den3Mile').innerHTML = String(features[i].S.density).replace(/(.)(?=(\d{3})+$)/g, '$1,');
					if (features[i].S.total6M)
						document.getElementById('den6Mile').innerHTML = String(features[i].S.density).replace(/(.)(?=(\d{3})+$)/g, '$1,');
				}
			}
		}
	});}
	catch(ex){}

	try{
	vacancySource.once('change', function(e) {
		if (vacancySource.getState() === 'ready') {
			var features = vacancySource.getFeatures();
			if (features) {
				for (var i = 0; i < features.length; i++) {
					if (features[i].S.total1M)
						document.getElementById('vac1Mile').innerHTML = String(features[i].S.vacancy).replace(/(.)(?=(\d{3})+$)/g, '$1,');
					if (features[i].S.total3M)
						document.getElementById('vac3Mile').innerHTML = String(features[i].S.vacancy).replace(/(.)(?=(\d{3})+$)/g, '$1,');
					if (features[i].S.total6M)
						document.getElementById('vac6Mile').innerHTML = String(features[i].S.vacancy).replace(/(.)(?=(\d{3})+$)/g, '$1,');
				}
			}
		}
	});}
	catch(ex){}
}

function clearRadius() {
    mappingSource.clear();
	
    try {
        mappingLayer.setVisible(false);
        maskFilter.set('active', false);
    } catch (ex) {}
    try {
        searchLayer.setVisible(false);
    } catch (ex) {}
    try {
        densityLayer.setVisible(false);
    } catch (ex) {}
    try {
        vacancyLayer.setVisible(false);
    } catch (ex) {}
    try {
        gardenLayer.setVisible(false);
    } catch (ex) {}
    try {
        storeLayer.setVisible(false);
    } catch (ex) {}
    try {
        analysisLayer.setVisible(false);
    } catch (ex) {}
    try {
        markerLayer.setVisible(false);
    } catch (ex) {}
    try {
        radiusLayer.setVisible(false);
    } catch (ex) {}
    if (showedOutput) {
        $('#mainDivOutput').animate({
            width: 'toggle'
        });
        $('#showOutput').css('margin-right', '0px');
        $('#showInput').css('margin-right', '0px');
        $('#showDeterminants').css('margin-right', '0px');
        $('#showConditions').css('margin-right', '0px');
        $('#showFood').css('margin-right', '0px');
        $('#showHousing').css('margin-right', '0px');
        showedOutput = false;
    }
    $("#analysisLegend").remove();
}

function filterCompanies() {
	$("#freightLegend").remove();
    var result = '';
    var string = '';
    var len = 0;
    try {
        len = $("#carrierFilter").val().length;
    } catch (ex) {
        freightWMS.getSource().updateParams({
            'LAYERS': 'Farmer:freightnetwork',
            'cql_filter': "abbr='bnsf' or abbr='cn' or abbr ='cprs' or abbr ='csxt' or abbr ='kcs' or abbr ='ns' or abbr ='up'",
            'SLD_Body': '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:freightnetwork</Name><UserStyle><FeatureTypeStyle><Rule><LineSymbolizer><Stroke><CssParameter name="stroke"><ogc:Literal>#FF8C00</ogc:Literal></CssParameter><CssParameter name="stroke-width"><ogc:Literal>' + $("#strokeFreight").val() + '</ogc:Literal></CssParameter></Stroke></LineSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>'
        });
        addLegendContent('<div id="freightLegend"><table><tr><td><a id="freightImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="freight" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/freight.png" /></td><td>Freight Network</td></tr></table></div>', true, "legendData");
        return;
    }
    for (i = 0; i < len; i++) {
        result = $("#carrierFilter").val()[i].split(',');
        string += "abbr='" + result + "' OR ";
    }
    if (string == "") {
        string = null;
    } else {
        string = string.substring(0, string.length - 4);
    }
    freightWMS.getSource().updateParams({
        'LAYERS': 'Farmer:freightnetwork',
        'cql_filter': string,
        'SLD_Body': '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:freightnetwork</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>abbr</ogc:PropertyName><ogc:Literal>bnsf</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><LineSymbolizer><Stroke><CssParameter name="stroke"><ogc:Literal>#FFE0B2</ogc:Literal></CssParameter><CssParameter name="stroke-width"><ogc:Literal>' + $("#strokeFreight").val() + '</ogc:Literal></CssParameter></Stroke></LineSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>abbr</ogc:PropertyName><ogc:Literal>cn</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><LineSymbolizer><Stroke><CssParameter name="stroke"><ogc:Literal>#FFB74D</ogc:Literal></CssParameter><CssParameter name="stroke-width"><ogc:Literal>' + $("#strokeFreight").val() + '</ogc:Literal></CssParameter></Stroke></LineSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>abbr</ogc:PropertyName><ogc:Literal>cprs</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><LineSymbolizer><Stroke><CssParameter name="stroke"><ogc:Literal>#FF9800</ogc:Literal></CssParameter><CssParameter name="stroke-width"><ogc:Literal>' + $("#strokeFreight").val() + '</ogc:Literal></CssParameter></Stroke></LineSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>abbr</ogc:PropertyName><ogc:Literal>csxt</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><LineSymbolizer><Stroke><CssParameter name="stroke"><ogc:Literal>#F57C00</ogc:Literal></CssParameter><CssParameter name="stroke-width"><ogc:Literal>' + $("#strokeFreight").val() + '</ogc:Literal></CssParameter></Stroke></LineSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>abbr</ogc:PropertyName><ogc:Literal>kcs</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><LineSymbolizer><Stroke><CssParameter name="stroke"><ogc:Literal>#E65100</ogc:Literal></CssParameter><CssParameter name="stroke-width"><ogc:Literal>' + $("#strokeFreight").val() + '</ogc:Literal></CssParameter></Stroke></LineSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>abbr</ogc:PropertyName><ogc:Literal>ns</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><LineSymbolizer><Stroke><CssParameter name="stroke"><ogc:Literal>#FFEB3B</ogc:Literal></CssParameter><CssParameter name="stroke-width"><ogc:Literal>' + $("#strokeFreight").val() + '</ogc:Literal></CssParameter></Stroke></LineSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>abbr</ogc:PropertyName><ogc:Literal>up</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><LineSymbolizer><Stroke><CssParameter name="stroke"><ogc:Literal>#FDD835</ogc:Literal></CssParameter><CssParameter name="stroke-width"><ogc:Literal>' + $("#strokeFreight").val() + '</ogc:Literal></CssParameter></Stroke></LineSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>'
    });
    addLegendContent('<div id="freightLegend"><table><tr><td><a id="freightImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="freight" onchange="handleLegend($(this));" checked/></td><td>Freight Network</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td><img src="images/Legend/freightnetworks/bnsf.png" width="40px" /></td><td>Burlington Northern and Santa Fe</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td><img src="images/Legend/freightnetworks/cn.png" width="40px" /></td><td>Canadian National Railway</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td><img src="images/Legend/freightnetworks/cprs.png" width="40px" /></td><td>Canadian Pacific Railway</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td><img src="images/Legend/freightnetworks/csxt.png" width="40px" /></td><td>CSX Transportation</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td><img src="images/Legend/freightnetworks/kcs.png" width="40px" /></td><td>Kansas City Southern</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td><img src="images/Legend/freightnetworks/ns.png" width="40px" /></td><td>Norfolk Southern</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td><img src="images/Legend/freightnetworks/up.png" width="40px" /></td><td>Union Pacific</td></tr></table></div>', true, "legendData");
}

function filterMSAS() {
    var result = '';
    var string = '';
    var len = 0;
    try {
        len = $("#msasFilter").val().length;
    } catch (ex) {
        wmsMsas.setVisible(false);
        return;
    }
    for (i = 0; i < len; i++) {
        result = $("#msasFilter").val()[i].split(',');
        string += "lsad='" + result + "' OR ";
    }
    if (string == "") {
        string = null;
    } else {
        string = string.substring(0, string.length - 4);
    }
    wmsMsas.getSource().updateParams({
        'LAYERS': 'Farmer:msas',
        'cql_filter': string,
        'SLD_Body': '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:msas</Name><UserStyle><FeatureTypeStyle><Rule><LineSymbolizer><Stroke><CssParameter name="stroke">#722A78</CssParameter><CssParameter name="stroke-width">' + $("#strokeMsa").val() + '</CssParameter><CssParameter name="stroke-dasharray">5 2</CssParameter></Stroke></LineSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>'
    });
    wmsMsas.setVisible(true);
}

function removePopup() {
    overlay.setPosition(undefined);
    try {
        map.removeLayer(geocoder.getLayer());
    } catch (ex) {}
}

function stringDivider(str, width, spaceReplacer) {
    if (str.length > width) {
        var p = width;
        while (p > 0 && (str[p] != ' ' && str[p] != '-')) {
            p--;
        }
        if (p > 0) {
            var left;
            if (str.substring(p, p + 1) == '-') {
                left = str.substring(0, p + 1);
            } else {
                left = str.substring(0, p);
            }
            var right = str.substring(p + 1);
            return left + spaceReplacer + stringDivider(right, width, spaceReplacer);
        }
    }
    return str;
}

function getCenterOfExtent(Extent) {
    var X = Extent[0] + (Extent[2] - Extent[0]) / 2;
    var Y = Extent[1] + (Extent[3] - Extent[1]) / 2;
    return [X, Y];
}

function clearPrevious(selected) {
    try {
        selectSource.clear();
    } catch (ex) {}
}

function zoomToPolygon() {
    removePopup();
    if (layerName == "Income" || layerName == "Density" || layerName == "Population" || layerName == "Households") {
        layerName = "density";
    }
    if (layerName == "Vacancy") {
        layerName = "vacancies";
    }
    if (layerName == "Port Boundary") {
        layerName = "portspoly";
    }
    if (layerName == "Urban/Rural") {
        layerName = "UrbanRural_2013";
    }
    var url = 'getExtent.php?gid=' + gidSelected + "&table=" + layerName;
    var source = new ol.source.Vector();
    $.ajax({
        url: url,
        dataType: "jsonp",
        success: function(data) {
            var features = geoJSONFormat.readFeature(data[0].geometry);
            source.addFeature(features);
            var extent = source.getExtent();
            map.getView().fit(extent, {
                duration: 2000
            });
        }
    });
}

function gradient(color1, color2, color3, alpha, percent) {
    var newColor = {};

    function makeChannel(a, b, c) {
        if (percent < 50)
            return (a + Math.round((b - a) * (percent / 50)));
        else
            return (a + Math.round((b - a) * ((percent - 50) / 50)));
    }

    var r = makeChannel(color1.r, color2.r, color3.r);
    var g = makeChannel(color1.g, color2.g, color3.g);
    var b = makeChannel(color1.b, color2.b, color3.b);

    return "rgba(" + r + ", " + g + ", " + b + ", " + alpha + ")";
}

function getDoseRate(cpm, factor) {
    var dose = cpm * factor;
    return dose.toFixed(2);
}

function clearOutAll() {
    $("#popup-closer").click();

    if ($('#selSelectionOptions').val() != "none") {
        $('#selSelectionOptions').selectpicker('val', 'none');
        $("#boundaryOpts").hide();
        $("#divType").hide();
    }
    try {
        map.removeInteraction(draw);
    } catch (ex) {}
    try {
        maskFilter.set('active', false);
    } catch (ex) {}
    mappingSource.clear();
    try {
        map.removeFilter(maskFilter);
    } catch (ex) {}
}

function getBoundary(name, lyrName) {
    var color, dashStyle, strokeWidth = 2,
        fontSize = "20px";
		
    var source = new ol.source.Vector({
        loader: function(extent, resolution, projection) {
            var extent = map.getView().calculateExtent(map.getSize());
            extent = ol.extent.applyTransform(extent, ol.proj.getTransform("EPSG:3857", "EPSG:4326"));
            var url;
            if (lyrName == "zip") {
                url = '../geoserver/ows?service=WFS&request=GetFeature&version=1.0.0&typename=Farmer:' + lyrName + '&outputFormat=application/json&PropertyName=gid,colorid,name,geomsimple&srsname=EPSG:3857&bbox=' + extent.join(',');
            }
            else if (lyrName == "districts") {
                url = '../geoserver/ows?service=WFS&request=GetFeature&version=1.0.0&typename=Farmer:' + lyrName + '&outputFormat=application/json&PropertyName=gid,colorid,name,geom,state,count&srsname=EPSG:3857&bbox=' + extent.join(',');
            } 
            else if (lyrName == "subwatershed") {
                url = '../geoserver/ows?service=WFS&request=GetFeature&version=1.0.0&typename=Farmer:' + lyrName + '&outputFormat=application/json&PropertyName=huc,colorid,geomsimple&srsname=EPSG:3857&bbox=' + extent.join(',');
            } 
            else if (lyrName == "subbasinsimple") {
                url = '../geoserver/ows?service=WFS&request=GetFeature&version=1.0.0&typename=Farmer:' + lyrName + '&outputFormat=application/json&PropertyName=huc,colorid,geomsimple&srsname=EPSG:3857&bbox=' + extent.join(',');
            } 
            else if (lyrName == "watershedsubregions") {
                url = '../geoserver/ows?service=WFS&request=GetFeature&version=1.0.0&typename=Farmer:' + lyrName + '&outputFormat=application/json&PropertyName=huc,colorid,geomsimple&srsname=EPSG:3857&bbox=' + extent.join(',');
            }
            else if (lyrName == "watershedregions") {
                url = '../geoserver/ows?service=WFS&request=GetFeature&version=1.0.0&typename=Farmer:' + lyrName + '&outputFormat=application/json&PropertyName=huc,colorid,geomsimple&srsname=EPSG:3857&bbox=' + extent.join(',');
            }
            else if (lyrName == "megareg" || lyrName == "commuters_reg") {
                url = '../geoserver/ows?service=WFS&request=GetFeature&version=1.0.0&typename=Farmer:' + lyrName + '&outputFormat=application/json&PropertyName=gid,colorid,name,geomsimple&srsname=EPSG:3857&bbox=' + extent.join(',');
            } else {
                url = '../geoserver/ows?service=WFS&request=GetFeature&version=1.0.0&typename=Farmer:' + lyrName + '&outputFormat=application/json&PropertyName=gid,colorid,name,geom&srsname=EPSG:3857&bbox=' + extent.join(',');
            }

            $.ajax({
                url: url,
                dataType: 'json',
                beforeSend: function(e) {
                    $('#js-progress-bar').css({
                        'opacity': '1',
                        'height': '5px'
                    });
                    ++tilesPending;
                },
                success: function(data) {
                    ++tilesLoaded;
                    var percentage = Math.round(tilesLoaded / tilesPending * 100);
                    $('#js-progress-bar').css({
                        'width': percentage + '%'
                    });
                    if (percentage >= 100) {
                        setTimeout(function() {
                            $('#js-progress-bar').css({
                                'width': '0',
                                'opacity': '0'
                            });
                            tilesLoaded = 0;
                            tilesPending = 0;
                        }, 600);
                    }
                    var features = geoJSONFormat.readFeatures(data);
                    source.addFeatures(features);
                }
            });
        },
        strategy: ol.loadingstrategy.bbox
    });

    if (lyrName == "censusf" || lyrName == "censusn" || lyrName == "ari" || lyrName == "bea" || lyrName == "rea")
        lyrName == "region";
    if (lyrName == "aristates" || lyrName == "reastates" || lyrName == "states")
        lyrName == "states";
    if (lyrName == "aricounties" || lyrName == "reacounties" || lyrName == "counties")
        lyrName == "counties";

    switch (lyrName) {
        case "schools_ccd":
			color = "#000000";
			dashStyle = [0, 0];
			fontSize = $("#labelCCD").val() + "px";
            break;
        case "scsd":
			color = "#000000";
			dashStyle = [0, 0];
			fontSize = $("#labelSCSD").val() + "px";
            break;
        case "str_coverage":
			color = "#000000";
			dashStyle = [0, 0];
			fontSize = $("#labelSTR").val() + "px";
            break;
        case "megareg":
			color = "#000000";
			dashStyle = [0, 0];
			fontSize = $("#labelMegaregion").val() + "px";
            break;
        case "commuters_reg":
			color = "#000000";
			dashStyle = [0, 0];
			fontSize = $("#labelCommuterRegions").val() + "px";
            break;
        case "triballand":
			color = "#000000";
			dashStyle = [0, 0];
			fontSize = $("#labelTribal").val() + "px";
            break;
        case "hrr":
            color = "#3CABDB";
            dashStyle = [0, 0];
			fontSize = $("#labelHRR").val() + "px";
            break;
        case "hsa":
            color = "#595BD4";
            dashStyle = [0, 0];
			fontSize = $("#labelHSA").val() + "px";
            break;
        case "pcsa":
            color = "#FD3259";
            dashStyle = [0, 0];
			fontSize = $("#labelPCSA").val() + "px";
            break;
        case "region":
            color = "#FAAF18";
            dashStyle = [0, 0];
			fontSize = $("#labelRegions").val() + "px";
            break;
        case "states":
            color = "#000000";
            dashStyle = [0, 0];
			fontSize = $("#labelStates").val() + "px";
            break;
        case "districts":
            color = "#00A54F";
            dashStyle = [5, 10];
			fontSize = $("#labelDistricts").val() + "px";
            break;
        case "cities":
            color = "#F36E21";
            dashStyle = [5, 10];
			fontSize = $("#labelCities").val() + "px";
            break;
        case "counties":
            color = "#A46D05";
            dashStyle = [7, 4];
			fontSize = $("#labelCounties").val() + "px";
            break;
        case "neighbourcities":
            color = "#ED028C";
            dashStyle = [7, 4];
			fontSize = $("#labelNeighbour").val() + "px";
            break;
        case "msas":
            color = "#722A78";
            dashStyle = [7, 4];
			fontSize = $("#labelMsas").val() + "px";
            break;
        case "megareg":
            color = "#AAAAAA";
            dashStyle = [7, 4];
			fontSize = $("#labelMegaregion").val() + "px";
            break;
        case "commuters_reg":
            color = "#AAAAAA";
            dashStyle = [7, 4];
			fontSize = $("#labelCommuterRegions").val() + "px";
            break;
        case "rff":
            color = "#AAAAAA";
            dashStyle = [7, 4];
			fontSize = $("#labelRefrigerated").val() + "px";
            break;
        case "cultural_reg":
            color = "#AAAAAA";
            dashStyle = [7, 4];
			fontSize = $("#labelCR").val() + "px";
            break;
        case "std5":
            color = "#AAAAAA";
            dashStyle = [7, 4];
			fontSize = $("#labelRFF").val() + "px";
            break;
        case "std10":
            color = "#AAAAAA";
            dashStyle = [7, 4];
			fontSize = $("#labelFRT").val() + "px";
            break;
        case "zip":
            color = "#00AEEF";
            dashStyle = [0, 0];
			fontSize = $("#labelZip").val() + "px";
            break;
        case "watershedregions":
            color = "#720101";
            dashStyle = [0, 0];
            break;
        case "watershedsubregions":
            color = "#bb3030";
            dashStyle = [0, 0];
            break;
        default:
            color = "#FF7F00";
            dashStyle = [0, 0];
            break;
    }

    function setStyle(context) {
        context.font = fontSize + " 'Lato'";
        context.fillStyle = color;
        context.strokeStyle = color;
        context.textBaseline = 'hanging';
        context.textAlign = 'start';
    }

    var textMeasureContext = document.createElement('CANVAS').getContext('2d');
    setStyle(textMeasureContext);

    var height = textMeasureContext.measureText('WI').width;

    function createLabel(canvas, text, coord) {
        var halfWidth = canvas.width / 2;
        var halfHeight = canvas.height / 2;
        var bounds = {
            bottomLeft: [Math.round(coord[0] - halfWidth), Math.round(coord[1] - halfHeight)],
            topRight: [Math.round(coord[0] + halfWidth), Math.round(coord[1] + halfHeight)]
        };
        labelEngine.ingestLabel(bounds, coord.toString(), 1, canvas, text, false);
    }

    function sortByWidth(a, b) {
        return ol.extent.getWidth(b.getExtent()) - ol.extent.getWidth(a.getExtent());
    }

    var labelStyle = new ol.style.Style({
        renderer: function(coords, state) {
			var text = state.feature.get('name');
            createLabel(textCache[text], text, coords);
        }
    });

    var boundaryStyle = new ol.style.Style({
        stroke: new ol.style.Stroke({
            color: color,
            width: strokeWidth,
            lineDash: dashStyle
        })
    });

    var styleWithLabel = [boundaryStyle, labelStyle];
    var styleWithoutLabel = [boundaryStyle];
    var vectorLayer = new ol.layer.Vector({
		displayInLayerSwitcher: false,
        name: name,
        declutter: true,
        visible: false,
        source: source,
        style: getBoundaryAndLabelStyle
    });

    vectorLayer.on('precompose', function(e) {
        pixelRatio = e.frameState.pixelRatio;
        labelEngine.destroy();
    });
    vectorLayer.on('postcompose', function(e) {
        var labels = labelEngine.getShown();
        for (var i = 0, ii = labels.length; i < ii; ++i) {
            var label = labels[i];
            e.context.drawImage(label.labelObject, label.minX, label.minY);
        }
    });

    return vectorLayer;
}

function getMaxPoly(polys) {
    var polyObj = [];
    for (var b = 0; b < polys.length; b++) {
        polyObj.push({
            poly: polys[b],
            area: polys[b].getArea()
        });
    }
    polyObj.sort(function(a, b) {
        return a.area - b.area
    });

    return polyObj[polyObj.length - 1].poly;
}

function getBoundaryAndLabelStyle(feature, resolution) {
    var color, dashStyle, strokeWidth = 2,
        fontSize = '20px';
    if (feature.c.split('.', 1)[0] == "region" || feature.c.indexOf("ari") !== -1 || feature.c.indexOf("bea") !== -1 || feature.c.indexOf("censusf") !== -1 || feature.c.indexOf("censusn") !== -1 || feature.c.indexOf("rea") !== -1) {
        color = "#FAAF18";
        dashStyle = [0, 0];
        strokeWidth = $("#strokeRegion").val();
		fontSize = $("#labelRegions").val() + "px";
    }
    else if (feature.c.indexOf("state") !== -1) {
        color = "#000000";
        dashStyle = [0, 0];
        strokeWidth = $("#strokeState").val();
		fontSize = $("#labelStates").val() + "px";
    }
    else if (feature.c.indexOf("district") !== -1 && feature.c.charAt(0) == "d") {
        color = "#00A54F";
        dashStyle = [10, 20];
        strokeWidth = $("#strokePDistrict").val();
		fontSize = $("#labelDistricts").val() + "px";
    }
    else if (feature.c.indexOf("cities") !== -1 && feature.c.charAt(0) == "c") {
        color = "#F36E21";
        dashStyle = [10, 20];
        strokeWidth = $("#strokeCity").val();
		fontSize = $("#labelCities").val() + "px";
    }
    else if (feature.c.indexOf("counties") !== -1) {
        color = "#A46D05";
        dashStyle = [15, 7];
        strokeWidth = $("#strokeCounty").val();
		fontSize = $("#labelCounties").val() + "px";
    }
    else if (feature.c.indexOf("zip") !== -1) {
        color = "#00AEEF";
        dashStyle = [0, 0];
        strokeWidth = $("#strokeZip").val();
		fontSize = $("#labelZip").val() + "px";
    }
    else if (feature.c.indexOf("msa") !== -1) {
        color = "#722A78";
        dashStyle = [15, 7];
        strokeWidth = $("#strokeMsa").val();
		fontSize = $("#labelMsas").val() + "px";
    }
    else if (feature.c.indexOf("neighbourcities") !== -1 && feature.c.charAt(0) == "n") {
        color = "#ED028C";
        dashStyle = [15, 7];
        strokeWidth = $("#strokeNeighbor").val();
		fontSize = $("#labelNeighbour").val() + "px";
    }
    else if (feature.c.indexOf("hrr") !== -1) {
        color = "#3CABDB";
        dashStyle = [0, 0];
        strokeWidth = $("#strokeRegion").val();
		fontSize = $("#labelHRR").val() + "px";
    }
    else if (feature.c.indexOf("hsa") !== -1) {
        color = "#595BD4";
        dashStyle = [0, 0];
        strokeWidth = $("#strokeRegion").val();
		fontSize = $("#labelHSA").val() + "px";
    }
    else if (feature.c.indexOf("pcsa") !== -1) {
        color = "#FD3259";
        dashStyle = [0, 0];
        strokeWidth = $("#strokeRegion").val();
		fontSize = $("#labelPCSA").val() + "px";
    }
    else if (feature.c.indexOf("watershedregions") !== -1) {
        color = "#720101";
        dashStyle = [0, 0];
        strokeWidth = "1.5";
    }
    else if (feature.c.indexOf("watershedsubregions") !== -1) {
        color = "#bb3030";
        dashStyle = [0, 0];
        strokeWidth = "0.5";
    }
    else if (feature.c.indexOf("triballand") !== -1) {
        color = "#000000";
        dashStyle = [0, 0];
        strokeWidth = "0.5";
		fontSize = $("#labelTribal").val() + "px";
    }
    else if (feature.c.indexOf("schools") !== -1) {
        color = "#000000";
        dashStyle = [0, 0];
        strokeWidth = "0.5";
		fontSize = $("#labelCCD").val() + "px";
    }
    else if (feature.c.indexOf("scsd") !== -1) {
        color = "#000000";
        dashStyle = [0, 0];
        strokeWidth = "0.5";
		fontSize = $("#labelSCSD").val() + "px";
    }
    else if (feature.c.indexOf("megareg") !== -1) {
        color = "#000000";
        dashStyle = [0, 0];
        strokeWidth = "0.5";
		fontSize = $("#labelMegaregion").val() + "px";
    }
    else if (feature.c.indexOf("commuters_reg") !== -1) {
        color = "#000000";
        dashStyle = [0, 0];
        strokeWidth = "0.5";
		fontSize = $("#labelCommuterRegions").val() + "px";
    }
    else if (feature.c.indexOf("rff") !== -1) {
        color = "#000000";
        dashStyle = [0, 0];
        strokeWidth = "0.5";
		fontSize = $("#labelRefrigerated").val() + "px";
    }
    else if (feature.c.indexOf("std5") !== -1) {
        color = "#000000";
        dashStyle = [0, 0];
        strokeWidth = "0.5";
		fontSize = $("#labelRFF").val() + "px";
    }
    else if (feature.c.indexOf("std10") !== -1) {
        color = "#000000";
        dashStyle = [0, 0];
        strokeWidth = "0.5";
		fontSize = $("#labelFRT").val() + "px";
    }
    else if (feature.c.indexOf("reg") !== -1) {
        color = "#000000";
        dashStyle = [0, 0];
        strokeWidth = "0.5";
    }
    else if (feature.c.indexOf("cultural_reg") !== -1) {
        color = "#000000";
        dashStyle = [0, 0];
        strokeWidth = "0.5";
		fontSize = $("#labelCR").val() + "px";
    }
    else if (feature.c.indexOf("str_") !== -1) {
        color = "#000000";
        dashStyle = [0, 0];
        strokeWidth = "0.5";
		fontSize = $("#labelSTR").val() + "px";
    }
    else if (feature.c.indexOf("ag_districts") !== -1) {
        color = "#7FD4FF";
        dashStyle = [0, 0];
        strokeWidth = "0.5";
    }
    else if (feature.c.indexOf("ntm_asb") !== -1) {
        color = "#2B6A8B";
        dashStyle = [0, 0];
        strokeWidth = "0.5";
    }
    else if (feature.c.indexOf("ntm_mpo") !== -1) {
        color = "#c1c2ae";
        dashStyle = [0, 0];
        strokeWidth = "0.5";
    }
    else if (feature.c.indexOf("bea10") !== -1) {
        color = "#00FF00";
        dashStyle = [0, 0];
        strokeWidth = "0.5";
    }
    else if (feature.c.indexOf("cbsa10") !== -1) {
        color = "#FF002A";
        dashStyle = [0, 0];
        strokeWidth = "0.5";
    }
    else if (feature.c.indexOf("consumermarket") !== -1) {
        color = "#2a402a";
        dashStyle = [0, 0];
        strokeWidth = "0.5";
    }
    else if (feature.c.indexOf("ers10rep") !== -1) {
        color = "#00FFFF";
        dashStyle = [0, 0];
        strokeWidth = "0.5";
    }
    else if (feature.c.indexOf("ers10") !== -1) {
        color = "#FFFF00";
        dashStyle = [0, 0];
        strokeWidth = "0.5";
    }
    else if (feature.c.indexOf("pea10") !== -1) {
        color = "#007FFF";
        dashStyle = [0, 0];
        strokeWidth = "0.5";
    }
    else if (feature.c.indexOf("tp10metro") !== -1) {
        color = "#C3C3C3";
        dashStyle = [0, 0];
        strokeWidth = "0.5";
    }
    else if (feature.c.indexOf("tp10micro") !== -1) {
        color = "#D4FF00";
        dashStyle = [0, 0];
        strokeWidth = "0.5";
    }
    else if (feature.c.indexOf("tp10") !== -1) {
        color = "#8eab8e";
        dashStyle = [0, 0];
        strokeWidth = "0.5";
    }
    else {
        color = "#FF7F00";
        dashStyle = [0, 0];
        strokeWidth = "0.3";
    }
	function setStyle(context) {
        context.font = fontSize + " 'Lato'";
        context.fillStyle = color;
        context.strokeStyle = color;
        context.textBaseline = 'hanging';
        context.textAlign = 'start';
    }
    var textMeasureContext = document.createElement('CANVAS').getContext('2d');
    setStyle(textMeasureContext);

    var height = textMeasureContext.measureText('WI').width;

    function createLabel(canvas, text, coord) {
        var halfWidth = canvas.width / 2;
        var halfHeight = canvas.height / 2;
        var bounds = {
            bottomLeft: [Math.round(coord[0] - halfWidth), Math.round(coord[1] - halfHeight)],
            topRight: [Math.round(coord[0] + halfWidth), Math.round(coord[1] + halfHeight)]
        };
        labelEngine.ingestLabel(bounds, coord.toString(), 1, canvas, text, false);
    }

    function sortByWidth(a, b) {
        return ol.extent.getWidth(b.getExtent()) - ol.extent.getWidth(a.getExtent());
    }

    var labelStyle = new ol.style.Style({
        renderer: function(coords, state) {
            var text = "";
            if (feature.c.indexOf("district") !== -1) {
                text = state.feature.get('state') + " District # " + state.feature.get('count');
            } if (feature.c.indexOf("subwatershed") !== -1 || feature.c.indexOf("subbasinsimple") !== -1 || feature.c.indexOf("watershedsubregions") !== -1 || feature.c.indexOf("regions") !== -1) {
                text = "HUC " + state.feature.get('huc');
            } else
                text = state.feature.get('name');
            createLabel(textCache[text], text, coords);
        }
    });

    var boundaryStyle = new ol.style.Style({
        stroke: new ol.style.Stroke({
            color: color,
            width: strokeWidth,
            lineDash: dashStyle
        })
    });

    var styleWithLabel = [labelStyle];
    var styleWithoutLabel = [];

    if (hideLabels || hideLabelsRegions)//umair
        return styleWithoutLabel;

    if (hideLabelsWS)
        return styleWithoutLabel;

    var text = "";
    if (feature.c.indexOf("district") !== -1) {
        text = feature.get('state') + " District # " + feature.get('count');
    } if (feature.c.indexOf("subwatershed") !== -1 || feature.c.indexOf("subbasinsimple") !== -1 || feature.c.indexOf("watershedsubregions") !== -1 || feature.c.indexOf("regions") !== -1) {
        text = "HUC " + feature.get('huc');
    }  else
        text = feature.get('name');
    var width = textMeasureContext.measureText(text).width;
	try{
    var geometry = feature.getGeometry();
    if (geometry.getType() == 'MultiPolygon') {
        geometry = geometry.getPolygons().sort(sortByWidth)[0];
    }
    var extentWidth = ol.extent.getWidth(geometry.getExtent());
    if (extentWidth / resolution > width) {
        if (!(text in textCache)) {
            var canvas = textCache[text] = document.createElement('CANVAS');
            canvas.width = width * pixelRatio;
            canvas.height = height * pixelRatio;
            var context = canvas.getContext('2d');
            context.scale(pixelRatio, pixelRatio);
            setStyle(context);
            context.strokeText(text, 0, 0);
            context.fillText(text, 0, 0);
        }
        labelStyle.setGeometry(geometry.getInteriorPoint());
        return styleWithLabel;
    } else {
        return styleWithoutLabel;
    }
	}catch(e){}
}

function addLegendContent(text, condition, id) {
    if (condition == "filteredAlbertsons") {
        $("#" + id + "").append(text);
        return;
    } else if (condition) {
        $("#" + id + "").append(text);

        if (!legendDrawn)
            $("#aLeg").click();

        legendDrawn = true;
    } else {
        if (legendDrawn) {
            if ($('#legendArea').is(':empty') || $('#legendData').is(':empty') || $('#legendConditions').is(':empty') || $('#legendDisplayBoundaries').is(':empty')) {
                legendDrawn = false;
                $("#aLeg").click();
            }
        }
    }
}

function getIso() {
    dialogTwo.dialog("close");
    mappingSource.clear();

    var firstInterval = $("#isoFirstInt").val();
    var secondInterval = $("#isoSecondInt").val();
    var thirdInterval = $("#isoThirdInt").val();
    var fourthInterval = $("#isoFourthInt").val();
    var fifthInterval = $("#isoFifthInt").val();
    var sixthInterval = $("#isoSixthInt").val();
    var url;
    var factorDistance = 1609.4;
    url = 'https://api.openrouteservice.org/isochrones?api_key=58d904a497c67e00015b45fc8c8299308243439ea01903043300fd8d&locations=' +
        selectedRadiusLoct + '&profile=' + $("#isoProfile").val() + '&range=' + firstInterval * factorDistance + ',' + secondInterval * factorDistance + ',' + thirdInterval * factorDistance + ',' + fourthInterval * factorDistance + ',' + fifthInterval * factorDistance + ',' + sixthInterval * factorDistance + '&location_type=start&range_type=distance';

    var tilesLoaded = 0;
    var tilesPending = 0;

    $.ajax({
        url: url,
        dataType: 'json',
        beforeSend: function(e) {
            $('#js-progress-bar').css({
                'opacity': '1',
                'height': '5px',
                'width': '5%'
            });
            ++tilesPending;
        },
        success: function(data) {
            ++tilesLoaded;
            var percentage = Math.round(tilesLoaded / tilesPending * 100);
            $('#js-progress-bar').css({
                'width': percentage + '%'
            });
            if (percentage >= 100) {
                var features = isoFormat.readFeatures(data);
                isoChroneSource.addFeatures(features);
                setTimeout(function() {
                    maskFilter = new ol.filter.Mask({
                        feature: maskFeature,
                        inner: false,
                        fill: new ol.style.Fill({
                            color: [0, 0, 0, 0.4]
                        })
                    });
                    isoChroneLayer.addFilter(maskFilter);
                    maskFilter.set('active', true);

                    reportDialog = $("#modal").dialog({
                        autoOpen: false,
                        height: 500,
                        width: 450,
                        modal: true,
                        buttons: {
                            "Cancel": function() {
                                reportDialog.dialog("close");
                            },
                            "Submit": clipLayers,
                        },
                        close: function() {}
                    });
                    reportDialog.dialog("open");
                    $("#divMask").show();
                    $('#js-progress-bar').css({
                        'width': '0',
                        'opacity': '0'
                    });
                    tilesLoaded = 0;
                    tilesPending = 0;
                }, 600);
            }
        },
        strategy: ol.loadingstrategy.all
    });

    var isoStyleFunction = function(feature, resolution) {
        switch (feature.S.value) {
            case firstInterval * factorDistance:
                fillColor = 'rgba(102, 37, 6,0.3)';
                zindex = 30;
                break;

            case secondInterval * factorDistance:
                fillColor = 'rgba(153, 52, 4,0.3)';
                zindex = 25;
                break;

            case thirdInterval * factorDistance:
                fillColor = 'rgba(204, 76, 2,0.3)';
                zindex = 20;
                break;

            case fourthInterval * factorDistance:
                fillColor = 'rgba(236, 112, 20,0.3)';
                zindex = 15;
                break;

            case fifthInterval * factorDistance:
                fillColor = 'rgba(254, 153, 41,0.3)';
                zindex = 10;
                break;

            case sixthInterval * factorDistance:
                fillColor = 'rgba(254, 196, 79,0.3)';
                zindex = 5;
                maskFeature = feature;

                fetchExtent = ol.extent.applyTransform(feature.getGeometry().getExtent(), ol.proj.getTransform("EPSG:3857", "EPSG:4326"));
                updateLayers(fetchExtent);
                break;

            default:
                break;
        }
        return new ol.style.Style({
            fill: new ol.style.Fill({
                color: fillColor
            }),
            zIndex: zindex
        });
    };

    isoChroneLayer.setStyle(isoStyleFunction);
    isoChroneLayer.setVisible(true);



    isoChroneSource.once('change', function(e) {
        try {
            mappingSource.clear();
            map.getView().fit(isoChroneSource.getExtent(), map.getSize());
        } catch (ex) {}
    });

    $("#isochroneLegend").remove();
    addLegendContent('<div id="isochroneLegend"><table><tr><td><a id="timeDistImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="timeDist" onchange="handleLegend($(this));" checked/></td><td colspan="4">Time/Distance Calculation</td></tr><tr><td style="padding-left:15px;">' + firstInterval + '</td><td style="padding-left:12px;">' + secondInterval + '</td><td style="padding-left:12px;">' + thirdInterval + '</td><td style="padding-left:12px;">' + fourthInterval + '</td><td style="padding-left:12px;">' + fifthInterval + '</td><td style="padding-left:12px;">' + sixthInterval + '</td></tr><tr><td><div style="height: 25px; width: 25px; margin-left: 3px; margin-right: 10px; float: left; background-color:rgb(102, 37, 6);"></div></td><td><div style="height: 25px; width: 25px; margin: 3px; margin-right: 10px; float: left; background-color:rgb(153, 52, 4);"></div></td><td><div style="height: 25px; width: 25px; margin: 3px; margin-right: 10px; float: left; background-color:rgb(204, 76, 2);"></div></td><td><div style="height: 25px; width: 25px; margin: 3px; margin-right: 10px; float: left; background-color:rgb(236, 112, 20);"></div></td><td><div style="height: 25px; width: 25px; margin: 3px; margin-right: 10px; float: left; background-color:rgb(254, 153, 41);"></div></td><td><div style="height: 25px; width: 25px; margin: 3px; margin-right: 10px; float: left; background-color:rgb(254, 196, 79);"></div></td></tr></table>', true, "legendArea");
}

function drawIso(evt) {
    if ($("#firstInterval").val() == "" || $("#secondInterval").val() == "" || $("#thirdInterval").val() == "" || $("#fourthInterval").val() == "" || $("#fifthInterval").val() == "" || $("#sixthInterval").val() == "") {
        toastr.error("Please enter interval values to proceed.");
        return;
    }
    isoDialog.dialog("close");

    if ($('#isochrone').is(":checked"))
        selectionType = "distance";
	else
        selectionType = "time";

    var firstInterval = $("#firstInterval").val();
    var secondInterval = $("#secondInterval").val();
    var thirdInterval = $("#thirdInterval").val();
    var fourthInterval = $("#fourthInterval").val();
    var fifthInterval = $("#fifthInterval").val();
    var sixthInterval = $("#sixthInterval").val();
    var speedLimit = $("#speedLimit").val() / 0.621371;
    var url;

    if (selectionType == "time") {
        factorTime = 60;
        factorType = " Minutes";
        url = 'https://api.openrouteservice.org/isochrones?api_key=58d904a497c67e00015b45fc8c8299308243439ea01903043300fd8d&locations=' +
            isoDrawnCoord + '&profile=' + $("#isoProfile").val() + '&range=' + firstInterval * factorTime + ',' + secondInterval * factorTime + ',' + thirdInterval * factorTime + ',' + fourthInterval * factorTime + ',' + fifthInterval * factorTime + ',' + sixthInterval * factorTime + '&location_type=start&range_type=' + selectionType + '&attributes=area|reachfactor|total_pop&options=%7B%22maximum_speed%22%3A' + speedLimit + '%7D';
    }
    if (selectionType == "distance") {
        factorDistance = 1609.34;
        factorType = " Miles";
        url = 'https://api.openrouteservice.org/isochrones?api_key=58d904a497c67e00015b45fc8c8299308243439ea01903043300fd8d&locations=' +
            isoDrawnCoord + '&profile=' + $("#isoProfile").val() + '&range=' + firstInterval * factorDistance + ',' + secondInterval * factorDistance + ',' + thirdInterval * factorDistance + ',' + fourthInterval * factorDistance + ',' + fifthInterval * factorDistance + ',' + sixthInterval * factorDistance + '&location_type=start&range_type=' + selectionType + '&options=%7B%22maximum_speed%22%3A' + speedLimit + '%7D';
    }

    var tilesLoaded = 0;
    var tilesPending = 0;

    $.ajax({
        url: url,
        dataType: 'json',
        beforeSend: function(e) {
            $('#js-progress-bar').css({
                'opacity': '1',
                'height': '5px',
                'width': '5%'
            });
            ++tilesPending;
        },
        success: function(data) {
            ++tilesLoaded;
            var percentage = Math.round(tilesLoaded / tilesPending * 100);
            $('#js-progress-bar').css({
                'width': percentage + '%'
            });
            if (percentage >= 100) {
                var features = isoFormat.readFeatures(data);
                isoChroneSource.addFeatures(features);
                setTimeout(function() {
                    $('#js-progress-bar').css({
                        'width': '0',
                        'opacity': '0'
                    });
                    tilesLoaded = 0;
                    tilesPending = 0;
                }, 600);
            }
        },
        strategy: ol.loadingstrategy.all
    });

    var isoStyleFunction = function(feature, resolution) {
        var fillColor, zindex;
        if (feature.S.value == firstInterval * factorTime) {
            fillColor = 'rgba(102, 37, 6,0.3)';
            zindex = 30;
        } else if (feature.S.value == secondInterval * factorTime) {
            fillColor = 'rgba(153, 52, 4,0.3)';
            zindex = 25;
        } else if (feature.S.value == thirdInterval * factorTime) {
            fillColor = 'rgba(204, 76, 2,0.3)';
            zindex = 20;
        } else if (feature.S.value == fourthInterval * factorTime) {
            fillColor = 'rgba(236, 112, 20,0.3)';
            zindex = 15;
        } else if (feature.S.value == fifthInterval * factorTime) {
            fillColor = 'rgba(254, 153, 41,0.3)';
            zindex = 10;
        } else if (feature.S.value == sixthInterval * factorTime) {
            fillColor = 'rgba(254, 196, 79,0.3)';
            zindex = 5;
        } else if (feature.S.value == firstInterval * factorDistance) {
            fillColor = 'rgba(102, 37, 6,0.3)';
            zindex = 30;
        } else if (feature.S.value == secondInterval * factorDistance) {
            fillColor = 'rgba(153, 52, 4,0.3)';
            zindex = 25;
        } else if (feature.S.value == thirdInterval * factorDistance) {
            fillColor = 'rgba(204, 76, 2,0.3)';
            zindex = 20;
        } else if (feature.S.value == fourthInterval * factorDistance) {
            fillColor = 'rgba(236, 112, 20,0.3)';
            zindex = 15;
        } else if (feature.S.value == fifthInterval * factorDistance) {
            fillColor = 'rgba(254, 153, 41,0.3)';
            zindex = 10;
        } else if (feature.S.value == sixthInterval * factorDistance) {
            fillColor = 'rgba(254, 196, 79,0.3)';
            zindex = 5;
        }
        return new ol.style.Style({
            fill: new ol.style.Fill({
                color: fillColor
            }),
            zIndex: zindex
        });
    };

    isoChroneLayer.setSource(isoChroneSource);
    isoChroneLayer.setStyle(isoStyleFunction);
    isoChroneLayer.setVisible(true);

    isoChroneSource.once('change', function(e) {
        try {
            mappingSource.clear();
            if ($('#cbMultiIso').is(":checked")) {
                addInteraction('Point');
            }
            map.getView().fit(isoChroneSource.getExtent(), map.getSize());
            $("#isoTrans").show();
        } catch (ex) {}
    });

    $("#isochroneLegend").remove();
    addLegendContent('<div id="isochroneLegend"><table><tr><td><a id="isochroneImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="isochrone" onchange="handleLegend($(this));" checked/></td><td colspan="4">Accessibility</td></tr><tr><td style="padding-left:15px;">' + firstInterval + '</td><td style="padding-left:12px;">' + secondInterval + '</td><td style="padding-left:12px;">' + thirdInterval + '</td><td style="padding-left:12px;">' + fourthInterval + '</td><td style="padding-left:12px;">' + fifthInterval + '</td><td style="padding-left:12px;">' + sixthInterval + '</td></tr><tr><td><div style="height: 25px; width: 25px; margin-left: 3px; margin-right: 10px; float: left; background-color:rgb(102, 37, 6);"></div></td><td><div style="height: 25px; width: 25px; margin: 3px; margin-right: 10px; float: left; background-color:rgb(153, 52, 4);"></div></td><td><div style="height: 25px; width: 25px; margin: 3px; margin-right: 10px; float: left; background-color:rgb(204, 76, 2);"></div></td><td><div style="height: 25px; width: 25px; margin: 3px; margin-right: 10px; float: left; background-color:rgb(236, 112, 20);"></div></td><td><div style="height: 25px; width: 25px; margin: 3px; margin-right: 10px; float: left; background-color:rgb(254, 153, 41);"></div></td><td><div style="height: 25px; width: 25px; margin: 3px; margin-right: 10px; float: left; background-color:rgb(254, 196, 79);"></div></td></tr></table>', true, "legendArea");

    $("#refLegendArea").click();
}

function limitInputs() {
    $("#firstInterval").change(function() {
        var max = parseInt($(this).attr('max'));
        var min = parseInt($(this).attr('min'));
        if ($(this).val() > max) {
            $(this).val(max);
        } else if ($(this).val() < min) {
            $(this).val(min);
        }
    });

    $("#secondInterval").change(function() {
        var max = parseInt($(this).attr('max'));
        var min = parseInt($(this).attr('min'));
        if ($(this).val() > max) {
            $(this).val(max);
        } else if ($(this).val() < min) {
            $(this).val(min);
        }
    });

    $("#thirdInterval").change(function() {
        var max = parseInt($(this).attr('max'));
        var min = parseInt($(this).attr('min'));
        if ($(this).val() > max) {
            $(this).val(max);
        } else if ($(this).val() < min) {
            $(this).val(min);
        }
    });

    $("#fourthInterval").change(function() {
        var max = parseInt($(this).attr('max'));
        var min = parseInt($(this).attr('min'));
        if ($(this).val() > max) {
            $(this).val(max);
        } else if ($(this).val() < min) {
            $(this).val(min);
        }
    });

    $("#fifthInterval").change(function() {
        var max = parseInt($(this).attr('max'));
        var min = parseInt($(this).attr('min'));
        if ($(this).val() > max) {
            $(this).val(max);
        } else if ($(this).val() < min) {
            $(this).val(min);
        }
    });

    $("#sixthInterval").change(function() {
        var max = parseInt($(this).attr('max'));
        var min = parseInt($(this).attr('min'));
        if ($(this).val() > max) {
            $(this).val(max);
        } else if ($(this).val() < min) {
            $(this).val(min);
        }
    });


    $("#speedLimit").change(function() {
        var max = parseInt($(this).attr('max'));
        var min = parseInt($(this).attr('min'));
        if ($(this).val() > max) {
            $(this).val(max);
        } else if ($(this).val() < min) {
            $(this).val(min);
        }
    });
}

function addHealthBoundaries() {
}

function addHealthFacilities(){
	$("#primaryLegend").remove();
	$("#dentalLegend").remove();
	$("#ascLegend").remove();
	$("#dermasoloLegend").remove();
	$("#dermagroupLegend").remove();
	$("#plasticsurgerysoloLegend").remove();
	$("#plasticsurgerygroupLegend").remove();
	$("#providersLegend").remove();
	$("#mentalLegend").remove();
    try {
        $("#popup-closer").click();
    } catch (ex) {}

	radiusAscHealthLayer.setVisible(false);
	radiusDermaSoloHealthLayer.setVisible(false);
	radiusDermaGroupHealthLayer.setVisible(false);
	radiusPSSoloHealthLayer.setVisible(false);
	radiusPSGroupHealthLayer.setVisible(false);
	radiusProvidersHealthLayer.setVisible(false);
	radiusPrimaryHealth.setVisible(false);
	radiusDentalHealthLayer.setVisible(false);
	radiusMentalHealthLayer.setVisible(false);

    primaryHealth.setVisible(false);
    mentalHealth.setVisible(false);
    dentalHealth.setVisible(false);
    ascHealth.setVisible(false);
    dermasoloHealth.setVisible(false);
    dermagroupHealth.setVisible(false);
    plasticsurgerysoloHealth.setVisible(false);
    plasticsurgerygroupHealth.setVisible(false);
    providersHealth.setVisible(false);
	
	$("#radiusHealth").hide();
	$("#divVorHealthFacilities").hide();

	if ($('#cbHealthFacilitiesVoronoi').is(":checked")) 
		toggleClusterVor('WFS','HealthFacilities'); 

    var len = 0;
    try {
        len = $("#healthFacilitiesSel").val().length;
    } catch (ex) {}
    if (len > 0) {
		if ($('#chkLogo').is(":checked") || $('#chkIcon').is(":checked")) {
			$("#radiusHealth").show();
		}
		if ($('#chkVoronoi').is(":checked")) {
			$("#divVorHealthFacilities").show();
		}
        for (i = 0; i < len; i++) {
            switch ($("#healthFacilitiesSel").val()[i]) {
                case 'primary':
                    if ($('#switchRadiusHealth').prop('checked'))
                        radiusPrimaryHealth.setVisible(true);
					primaryHealth.setVisible(true);
                    addLegendContent('<div id="primaryLegend"><table><tr><td><a id="primaryHealthImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="primaryHealth" onchange="handleLegend($(this));" checked/></td><td><img height="40px" width="45px" src="images/Icons/health/primarycare.png" /></td><td>Primary Care</td></tr></table></div>', true, "legendData");
					primaryHealth.set('displayInLayerSwitcher', true);
                    break;

                case 'dental':
                    if ($('#switchRadiusHealth').prop('checked'))
                        radiusDentalHealthLayer.setVisible(true);
					dentalHealth.setVisible(true);
                    addLegendContent('<div id="dentalLegend"><table><tr><td><a id="dentalHealthImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="dentalHealth" onchange="handleLegend($(this));" checked/></td><td><img height="40px" width="45px" src="images/Icons/health/dentalfacility.png" /></td><td>Dental Health</td></tr></table></div>', true, "legendData");
					dentalHealth.set('displayInLayerSwitcher', true);
                    break;

                case 'asc':
                    if ($('#switchRadiusHealth').prop('checked'))
						radiusAscHealthLayer.setVisible(true);
					ascHealth.setVisible(true);
                    addLegendContent('<div id="ascLegend"><table><tr><td><a id="ascHealthImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="ascHealth" onchange="handleLegend($(this));" checked/></td><td><img height="30px" width="20px" src="images/Icons/health/asc.png" /></td><td>Ambulatory Surgical Centers</td></tr></table></div>', true, "legendData");
					ascHealth.set('displayInLayerSwitcher', true);
                    break;

                case 'dermasolo':
                    if ($('#switchRadiusHealth').prop('checked'))
						radiusDermaSoloHealthLayer.setVisible(true);
					dermasoloHealth.setVisible(true);
                    addLegendContent('<div id="dermasoloLegend"><table><tr><td><a id="dermasoloHealthImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="dermasoloHealth" onchange="handleLegend($(this));" checked/></td><td><img height="30px" width="20px" src="images/Icons/health/dermasolo.png" /></td><td>Derma Solo</td></tr></table></div>', true, "legendData");
					dermasoloHealth.set('displayInLayerSwitcher', true);
                    break;

                case 'dermagroup':
                    if ($('#switchRadiusHealth').prop('checked'))
						radiusDermaGroupHealthLayer.setVisible(true);
					dermagroupHealth.setVisible(true);
                    addLegendContent('<div id="dermagroupLegend"><table><tr><td><a id="dermagroupHealthImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="dermagroupHealth" onchange="handleLegend($(this));" checked/></td><td><img height="30px" width="20px" src="images/Icons/health/dermagroup.png" /></td><td>Derma Group</td></tr></table></div>', true, "legendData");
					dermagroupHealth.set('displayInLayerSwitcher', true);
                    break;

                case 'plasticsurgerysolo':
                    if ($('#switchRadiusHealth').prop('checked'))
						radiusPSSoloHealthLayer.setVisible(true);
					plasticsurgerysoloHealth.setVisible(true);
                    addLegendContent('<div id="plasticsurgerysoloLegend"><table><tr><td><a id="plasticsurgerysoloHealthImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="plasticsurgerysoloHealth" onchange="handleLegend($(this));" checked/></td><td><img height="30px" width="20px" src="images/Icons/health/plasticsurgerysolo.png" /></td><td>Plastic Surgery Solo</td></tr></table></div>', true, "legendData");
					plasticsurgerysoloHealth.set('displayInLayerSwitcher', true);
                    break;

                case 'plasticsurgerygroup':
                    if ($('#switchRadiusHealth').prop('checked'))
						radiusPSGroupHealthLayer.setVisible(true);
					plasticsurgerygroupHealth.setVisible(true);
                    addLegendContent('<div id="plasticsurgerygroupLegend"><table><tr><td><a id="plasticsurgerygroupHealthImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="plasticsurgerygroupHealth" onchange="handleLegend($(this));" checked/></td><td><img height="30px" width="20px" src="images/Icons/health/plasticsurgerygroup.png" /></td><td>Plastic Surgery Group</td></tr></table></div>', true, "legendData");
					plasticsurgerygroupHealth.set('displayInLayerSwitcher', true);
                    break;

                case 'providers':
                    if ($('#switchRadiusHealth').prop('checked'))
						radiusProvidersHealthLayer.setVisible(true);
					providersHealth.setVisible(true);
                    addLegendContent('<div id="providersLegend"><table><tr><td><a id="providersHealthImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="providersHealth" onchange="handleLegend($(this));" checked/></td><td><img height="30px" width="20px" src="images/Icons/health/providers.png" /></td><td>Providers</td></tr></table></div>', true, "legendData");
					providersHealth.set('displayInLayerSwitcher', true);
                    break;

                case 'mental':
                    if ($('#switchRadiusHealth').prop('checked'))
                        radiusMentalHealthLayer.setVisible(true);
					mentalHealth.setVisible(true);
                    addLegendContent('<div id="mentalLegend"><table><tr><td><a id="mentalHealthImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="mentalHealth" onchange="handleLegend($(this));" checked/></td><td><img height="40px" width="45px" src="images/Icons/health/mentalhealth.png" /></td><td>Mental Health</td></tr></table></div>', true, "legendData");
					mentalHealth.set('displayInLayerSwitcher', true);
                    break;

                default:
                    break;
            }
        }
    } else {
        if ($('#switchRadiusHealth').prop('checked'))
            $("#switchRadiusHealth").click();
    }
}

function addHealthConditions() {
	healthCond.setVisible(false);
	healthCond.set('displayInLayerSwitcher', false);
	
	$("#healthcondLegend").remove();
    
	switch ($("#selHealthCond").val()) {
        case 'none':
			healthCond.setVisible(false);
			healthCond.set('displayInLayerSwitcher', false);
			$("#healthcondLegend").remove();
            break;
        case 'healthy':
            sldHealthCond = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:healthcare</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>condition</ogc:PropertyName><ogc:Literal>2</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#add8e6</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>condition</ogc:PropertyName><ogc:Literal>1</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#529b47</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>condition</ogc:PropertyName><ogc:Literal>3</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#ffffe0</CssParameter></Fill></PolygonSymbolizer></Rule><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>condition</ogc:PropertyName><ogc:Literal>4</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#b3b4b7</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
			
			addLegendContent('<div id="healthcondLegend"><table><tr><td><a id="healthcondOneImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="healthcond" onchange="handleLegend($(this));" checked/></td><td>Health Conditions</td><td>&nbsp;</td></tr></table><table id="tableInsideTable"><tr><td><input type="checkbox" id="1" onchange="handlecohort(umair,$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#529b47;"></div></td><td>Recreational / THC</td></tr><tr><td><input type="checkbox" id="2" onchange="handlecohort(umair,$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#add8e6;"></div></td><td>Medical / CBD</td></tr><tr><td><input type="checkbox" id="3" onchange="handlecohort(umair,$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#ffffe0;"></div></td><td>Restricted CBD</td></tr><tr><td><input type="checkbox" id="4" onchange="handlecohort(umair,$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#b3b4b7;"></div></td><td>No Legal Use</td></tr></table></div>', true, "legendConditions");
	
			healthCond.getSource().updateParams({
				'SLD_Body': sldHealthCond
			});
			healthCond.setVisible(true);
			healthCond.set('displayInLayerSwitcher', true);
			map.render();
			$("#divTransHealthCond").show();
            break;
        case '1':
            sldHealthCond = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:healthcare</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>condition</ogc:PropertyName><ogc:Literal>1</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#529b47</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
   
			addLegendContent('<div id="healthcondLegend"><table><tr><td><a id="healthcondOneImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="healthcond" onchange="handleLegend($(this));" checked/></td><td>Health Conditions</td><td>&nbsp;</td></tr></table><table id="tableInsideTable"><tr><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#529b47;"></div></td><td>Recreational / THC</td></tr></table></div>', true, "legendConditions");
	
			healthCond.getSource().updateParams({
				'SLD_Body': sldHealthCond
			});
			healthCond.setVisible(true);
			healthCond.set('displayInLayerSwitcher', true);
			map.render();
            break;
        case '2':
            sldHealthCond = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:healthcare</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>condition</ogc:PropertyName><ogc:Literal>2</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#add8e6</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
   
			addLegendContent('<div id="healthcondLegend"><table><tr><td><a id="healthcondTwoImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="healthcond" onchange="handleLegend($(this));" checked/></td><td>Health Conditions</td><td>&nbsp;</td></tr></table><table id="tableInsideTable"><tr><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#add8e6;"></div></td><td>Medical / CBD</td></tr></table></div>', true, "legendConditions");
	
			healthCond.getSource().updateParams({
				'SLD_Body': sldHealthCond
			});
			healthCond.setVisible(true);
			healthCond.set('displayInLayerSwitcher', true);
			map.render();
            break;
        case '3':
            sldHealthCond = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:healthcare</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>condition</ogc:PropertyName><ogc:Literal>3</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#ffffe0</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
   
			addLegendContent('<div id="healthcondLegend"><table><tr><td><a id="healthcondThreeImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="healthcond" onchange="handleLegend($(this));" checked/></td><td>Health Conditions</td><td>&nbsp;</td></tr></table><table id="tableInsideTable"><tr><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#ffffe0;"></div></td><td>Restricted CBD</td></tr></table></div>', true, "legendConditions");
	
			healthCond.getSource().updateParams({
				'SLD_Body': sldHealthCond
			});
			healthCond.setVisible(true);
			healthCond.set('displayInLayerSwitcher', true);
			map.render();
            break;
        case '4':
            sldHealthCond = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:healthcare</Name><UserStyle><FeatureTypeStyle><Rule><ogc:Filter><ogc:PropertyIsEqualTo><ogc:PropertyName>condition</ogc:PropertyName><ogc:Literal>4</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter><PolygonSymbolizer><Fill><CssParameter name="fill">#b3b4b7</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
   
			addLegendContent('<div id="healthcondLegend"><table><tr><td><a id="healthcondFourImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="healthcond" onchange="handleLegend($(this));" checked/></td><td>Health Conditions</td><td>&nbsp;</td></tr></table><table id="tableInsideTable"><tr><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#b3b4b7;"></div></td><td>No Legal Use</td></tr></table></div>', true, "legendConditions");
	
			healthCond.getSource().updateParams({
				'SLD_Body': sldHealthCond
			});
			healthCond.setVisible(true);
			healthCond.set('displayInLayerSwitcher', true);
			map.render();
            break;
        default:
            break;
    }
}

function addMUAPConditions() {
	$("#muapLegend").remove();
    $("#divTransMuap").hide();
	muap.setVisible(false);
	muap.set('displayInLayerSwitcher', false);
	
	$("#healthcondLegend").remove();

    updateLook();
    
	switch ($("#selMUAP").val()) {
        case 'none':
			$("#divTransMuap").hide();
			muap.setVisible(false);
			muap.set('displayInLayerSwitcher', false);
			$("#muapLegend").remove();
            break;
        case 'muarscivpp':
			muap.getSource().updateParams({
				'SLD_Body': sldMuapOne
			});
			muap.setVisible(true);
			muap.set('displayInLayerSwitcher', true);
			$("#divTransMuap").show();
            break;
        case 'muascore':
			muap.getSource().updateParams({
				'SLD_Body': sldMuapTwo
			});
			muap.setVisible(true);
			muap.set('displayInLayerSwitcher', true);
			$("#divTransMuap").show();
            break;
        case 'ppage65pct':
			muap.getSource().updateParams({
				'SLD_Body': sldMuapThree
			});
			muap.setVisible(true);
			muap.set('displayInLayerSwitcher', true);
			$("#divTransMuap").show();
            break;
        case 'pvt100pnum':
			muap.getSource().updateParams({
				'SLD_Body': sldMuapFour
			});
			muap.setVisible(true);
			muap.set('displayInLayerSwitcher', true);
			$("#divTransMuap").show();
            break;
        case 'prvd1000pp':
			muap.getSource().updateParams({
				'SLD_Body': sldMuapFive
			});
			muap.setVisible(true);
			muap.set('displayInLayerSwitcher', true);
			$("#divTransMuap").show();
            break;
        default:
            break;
    }
}

// function fetchInitialVoronoi() {
    // var source = new ol.source.Vector({
        // format: new ol.format.GeoJSON(),
        // loader: function(extent, resolution, projection) {
            // var url = '../geoserver/ows?service=WFS&version=1.0.0&request=GetFeature&typename=Farmer:Hospitals_Speciality&outputFormat=application/json&srsname=EPSG:3857';

            // var tilesLoaded = 0;
            // var tilesPending = 0;

            // $.ajax({
                // url: url,
                // dataType: 'json',
                // beforeSend: function(e) {
                    // $('#js-progress-bar').css({
                        // 'opacity': '1',
                        // 'height': '5px',
                        // 'width': '5%'
                    // });
                    // ++tilesPending;
                // },
                // success: function(data) {
                    // ++tilesLoaded;
                    // var percentage = Math.round(tilesLoaded / tilesPending * 100);
                    // $('#js-progress-bar').css({
                        // 'width': percentage + '%'
                    // });

                    // if (percentage >= 100) {
                        // var features = geoJSONFormat.readFeatures(data);
                        // source.addFeatures(features);
                        // setTimeout(function() {
                            // $('#js-progress-bar').css({
                                // 'width': '0',
                                // 'opacity': '0'
                            // });
                            // tilesLoaded = 0;
                            // tilesPending = 0;
                        // }, 600);
                    // }
                // }
            // });
        // },
        // strategy: ol.loadingstrategy.all
    // });

    // voronoiHospitals = new ol.layer.Vector({
        // title: 'Hospitals',
        // name: 'Hospitals',
        // style: getVoronoiStyle
    // });

    // map.addLayer(voronoiHospitals);
// }

function addHospitals() {
    $("#voronoiLegend").remove();
    if ($("#selHospitals").val() == "none") {
		// $("#divVorHealth").hide();
		voronoiHospitals.setVisible(false);
		voronoiHospitals.set('displayInLayerSwitcher', false);
        clearVoronoiData('all');
		return;
    }
	if ($('#chkLogo').is(":checked") || $('#chkIcon').is(":checked")) {
		$("#logosHospitals").show();
	}
	if ($('#chkVoronoi').is(":checked")) {
		$("#divVorHealth").show();
	}

    if ($("#selHospitals").val() == "all") {
        applyVoroFilters('nonfiltered');
    } else
        applyVoroFilters('filtered');
}

function applyVoroFilters(val) {
    $("#voronoiLegend").remove();
    if (val == "filtered") {
        url = '../geoserver/ows?service=WFS&' +
            'version=1.0.0&request=GetFeature&cql_filter="type"=%27' + $("#selHospitals").val() + '%27&typename=Farmer:Hospitals_Speciality&' +
            'outputFormat=application/json&srsname=EPSG:3857';
        if ($("#selHospitals").val() == "PSYCH") {
            addLegendContent('<div id="voronoiLegend"><table><tr><td><a id="healthcareImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="healthcare" onchange="handleLegend($(this));" checked/></td><td>Hospitals</td><td>&nbsp;</td></tr></table><table id="tableInsideTable"><tr><td><img height="25px" width="25px" src="images/Icons/health/psych.png" /></td><td>PSYCH</td></tr></table></div>', true, "legendConditions");
        } else if ($("#selHospitals").val() == "CHILDRENS") {
            addLegendContent('<div id="voronoiLegend"><table><tr><td><a id="healthcareImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="healthcare" onchange="handleLegend($(this));" checked/></td><td>Hospitals</td><td>&nbsp;</td></tr></table><table id="tableInsideTable"><tr><td><img height="25px" width="25px" src="images/Icons/health/childrens.png" /></td><td>CHILDRENS</td></tr></table></div>', true, "legendConditions");
        } else if ($("#selHospitals").val() == "LTACH") {
            addLegendContent('<div id="voronoiLegend"><table><tr><td><a id="healthcareImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="healthcare" onchange="handleLegend($(this));" checked/></td><td>Hospitals</td><td>&nbsp;</td></tr></table><table id="tableInsideTable"><tr><td><img height="25px" width="25px" src="images/Icons/health/ltach.png" /></td><td>LTACH</td></tr></table></div>', true, "legendConditions");
        } else if ($("#selHospitals").val() == "RELIGIOUS/NONMED") {
            addLegendContent('<div id="voronoiLegend"><table><tr><td><a id="healthcareImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="healthcare" onchange="handleLegend($(this));" checked/></td><td>Hospitals</td><td>&nbsp;</td></tr></table><table id="tableInsideTable"><tr><td><img height="25px" width="25px" src="images/Icons/health/religious.png" /></td><td>RELIGIOUS/NONMED</td></tr></table></div>', true, "legendConditions");
        } else if ($("#selHospitals").val() == "REHAB") {
            addLegendContent('<div id="voronoiLegend"><table><tr><td><a id="healthcareImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="healthcare" onchange="handleLegend($(this));" checked/></td><td>Hospitals</td><td>&nbsp;</td></tr></table><table id="tableInsideTable"><tr><td><img height="25px" width="25px" src="images/Icons/health/rehab.png" /></td><td>REHAB</td></tr></table></div>', true, "legendConditions");
        }
    } else {
        url = '../geoserver/ows?service=WFS&' +
            'version=1.0.0&request=GetFeature&typename=Farmer:Hospitals_Speciality&' +
            'outputFormat=application/json&srsname=EPSG:3857';

        addLegendContent('<div id="voronoiLegend"><table><tr><td><a id="healthcareImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="healthcare" onchange="handleLegend($(this));" checked/></td><td>Hospitals</td><td>&nbsp;</td></tr></table><table id="tableInsideTable"><tr><td><img height="25px" width="25px" src="images/Icons/health/psych.png" /></td><td>PSYCH</td></tr><tr><td><img height="25px" width="25px" src="images/Icons/health/childrens.png" /></td><td>CHILDRENS</td></tr><tr><td><img height="25px" width="25px" src="images/Icons/health/ltach.png" /></td><td>LTACH</td></tr><tr><td><img height="25px" width="25px" src="images/Icons/health/religious.png" /></td><td>RELIGIOUS/NONMED</td></tr><tr><td><img height="25px" width="25px" src="images/Icons/health/rehab.png" /></td><td>REHAB</td></tr></table></div>', true, "legendConditions");
    }

    var hospitalsource = new ol.source.Vector({
        format: new ol.format.GeoJSON(),
        loader: function(extent, resolution, projection) {
            var tilesLoaded = 0;
            var tilesPending = 0;

            $.ajax({
                url: url,
                dataType: 'json',
                beforeSend: function(e) {
                    $('#js-progress-bar').css({
                        'opacity': '1',
                        'height': '5px',
                        'width': '5%'
                    });
                    ++tilesPending;
                },
                success: function(data) {
                    ++tilesLoaded;
                    var percentage = Math.round(tilesLoaded / tilesPending * 100);
                    $('#js-progress-bar').css({
                        'width': percentage + '%'
                    });

                    if (percentage >= 100) {
                        var features = geoJSONFormat.readFeatures(data);
                        hospitalsource.addFeatures(features);
                        setTimeout(function() {
                            $('#js-progress-bar').css({
                                'width': '0',
                                'opacity': '0'
                            });
                            tilesLoaded = 0;
                            tilesPending = 0;
                        }, 600);
                    }
                }
            });
        },
        strategy: ol.loadingstrategy.all
    });

    var clusterSource = new ol.source.Cluster({
        distance: 30,
        source: hospitalsource
    });
	voronoiHospitals.setVisible(true);
    voronoiHospitals.setSource(clusterSource);
	voronoiHospitals.set('displayInLayerSwitcher', true);
}
function getFeaturesInSelection(AOI)
{
	voronoiLayersCount = 0;
	var visibileFeatures = [];
	if($("#cbPrimaryVoronoi").is(":checked")) {
		try {var lenPrimary = $("#primaryData").val().length;} catch(e) {}
		voronoiLayersCount = lenPrimary;
		for (i = 0; i < lenPrimary; i++) {
			var optSelected=$("#primaryData").val()[i];
			if( optSelected=='brownfields' ) {
				visibileFeatures.push(brownfields.getSource().getFeaturesInExtent(AOI));
			}
			else if( optSelected=='datafiberbuildings' ) {
				try {var lenDataFiber = $("#datafiberBuildingsFilter").val().length;} catch(e) {}
				if (lenDataFiber > 0) {
					for (i = 0; i < lenDataFiber; i++) {
						switch ($("#datafiberBuildingsFilter").val()[i]) {
							case 'enterprisebuildings':
								visibileFeatures.push(enterprisebuildings.getSource().getFeaturesInExtent(AOI));
								break;
							case 'networkbuildings':
								visibileFeatures.push(networkbuildings.getSource().getFeaturesInExtent(AOI));
								break;
						}
					}
				}
			}
			else if( optSelected=='dicks' ) {
				visibileFeatures.push(dicks.getSource().getFeaturesInExtent(AOI));
			}
			else if( optSelected=='keef' ) {
				visibileFeatures.push(keef.getSource().getFeaturesInExtent(AOI));
			}
			else if( optSelected=='grainger' ) {
				visibileFeatures.push(grainger.getSource().getFeaturesInExtent(AOI));
			}
			else if( optSelected=='parkway' ) {
				visibileFeatures.push(parkway.getSource().getFeaturesInExtent(AOI));
			}
			else if( optSelected=='tartan' ) {
				visibileFeatures.push(tartan.getSource().getFeaturesInExtent(AOI));
			}
			else if( optSelected=='uhaul' ) {
				visibileFeatures.push(uhaul.getSource().getFeaturesInExtent(AOI));
			}
			else if( optSelected=='fortune' ) {
				visibileFeatures.push(fortune.getSource().getFeaturesInExtent(AOI));
			}
			else if( optSelected=='paca' ) {
				visibileFeatures.push(paca.getSource().getFeaturesInExtent(AOI));
			}
			else if( optSelected=='poultryfacilities' ) {
				visibileFeatures.push(poultryfacilities.getSource().getFeaturesInExtent(AOI));
			}
			else if( optSelected=='fairgrounds' ) {
				visibileFeatures.push(fairgrounds.getSource().getFeaturesInExtent(AOI));
			}
			else if( optSelected=='shopping' ) {
				visibileFeatures.push(shoppingcenter.getSource().getFeaturesInExtent(AOI));
			}
			else if( optSelected=='closings' ) {
				try {var lenClosings = $("#closingsData").val().length;} catch(e) {}
				if (lenClosings > 0) {
					for (i = 0; i < lenClosings; i++) {
						console.log($("#closingsData").val()[i]);
						switch ($("#closingsData").val()[i]) {
							case 'sears':
								visibileFeatures.push(closings.getSource().getFeaturesInExtent(AOI));
								break;
							case 'toys':
								visibileFeatures.push(toysrus.getSource().getFeaturesInExtent(AOI));
								break;
							case 'gymboree':
								visibileFeatures.push(gymboree.getSource().getFeaturesInExtent(AOI));
								break;
							default:
								break;
						}
					}
				}
			}
			else if( optSelected=='logos' ) {
				visibileFeatures.push(logo.getSource().getFeaturesInExtent(AOI));
			}
		}
	}
	if($("#cbEnergyVoronoi").is(":checked")) {
		try {var lenEnergy = $("#energyData").val().length;} catch(e) {}
		voronoiLayersCount = lenEnergy;
		for (i = 0; i < lenEnergy; i++) {
			var optSelected=$("#energyData").val()[i];
			if( optSelected=='biodieselplants' ) {
				visibileFeatures.push(biodieselplants.getSource().getFeaturesInExtent(AOI));
			}
			else if( optSelected=='ethanol' ) {
				visibileFeatures.push(ethanol.getSource().getFeaturesInExtent(AOI));
			}
			else if( optSelected=='oilrefineries' ) {
				visibileFeatures.push(oilrefineries.getSource().getFeaturesInExtent(AOI));
			}
			else if( optSelected=='tapetro' ) {
				visibileFeatures.push(tapetro.getSource().getFeaturesInExtent(AOI));
			}
		}
	}
	if($("#cbOwnVoronoi").is(":checked")) {
		try {var len = $("#ownData").val().length;} catch(e) {}
		voronoiLayersCount = len;
		if (len > 0) {
			for (i = 0; i < len; i++) {
				var optSelected=$("#ownData").val()[i];
				if( optSelected=='gardens' ) {
					visibileFeatures.push(garden.getSource().getFeaturesInExtent(AOI));
				}
				else if( optSelected=='hot_springs' ) {
					visibileFeatures.push(hot_springs.getSource().getFeaturesInExtent(AOI));
				}
				else if( optSelected=='landbanks' ) {
					visibileFeatures.push(landbanks.getSource().getFeaturesInExtent(AOI));
				}
				else if( optSelected=='shelter' ) {
					visibileFeatures.push(shelter.getSource().getFeaturesInExtent(AOI));
				}
				else if( optSelected=='unitsa' ) {
					visibileFeatures.push(unitsa.getSource().getFeaturesInExtent(AOI));
				}
				else if( optSelected=='unitsb' ) {
					visibileFeatures.push(unitsb.getSource().getFeaturesInExtent(AOI));
				}
				else if( optSelected=='natural' ) {
					visibileFeatures.push(natural.getSource().getFeaturesInExtent(AOI));
				}
				else if( optSelected=='manmade' ) {
					var lenManmade = $("#manmadeData").val().length;
					if (lenManmade > 0) {
						for (i = 0; i < lenManmade; i++) {
							switch ($("#manmadeData").val()[i]) {
								case 'destinations':
									visibileFeatures.push(manmade_destinations.getSource().getFeaturesInExtent(AOI));
									break;
								case 'faith':
									visibileFeatures.push(manmade_faith.getSource().getFeaturesInExtent(AOI));
									break;
								case 'govt':
									visibileFeatures.push(manmade_govt_places.getSource().getFeaturesInExtent(AOI));
									break;
								case 'infrastructure':
									visibileFeatures.push(manmade_infrastructure.getSource().getFeaturesInExtent(AOI));
									break;
								case 'public':
									visibileFeatures.push(manmade_public_spaces.getSource().getFeaturesInExtent(AOI));
									break;
								case 'retail':
									visibileFeatures.push(manmade_retail_prices.getSource().getFeaturesInExtent(AOI));
									break;
							}
						}
					}
				}
			}
		}
	} 
	if($("#cbTptVoronoi").is(":checked")) {
		try {var len = $("#tptData").val().length;} catch(e) {}
		voronoiLayersCount = len;
		if (len > 0) {
			for (i = 0; i < len; i++) {
				var optSelected=$("#tptData").val()[i];
				if( optSelected=='airports' ) {
					visibileFeatures.push(airport.getSource().getFeaturesInExtent(AOI));
				}
				else if( optSelected=='flag' ) {
					visibileFeatures.push(freightIntersects.getSource().getFeaturesInExtent(AOI));
				}
				else if( optSelected=='traffic' ) {
					visibileFeatures.push(traffic.getSource().getFeaturesInExtent(AOI));
				}
				else if( optSelected=='interchange' ) {
					visibileFeatures.push(interchange.getSource().getFeaturesInExtent(AOI));
				}
				else if( optSelected=='iana' ) {
					visibileFeatures.push(iana.getSource().getFeaturesInExtent(AOI));
				}
				else if( optSelected=='ports' ) {
					visibileFeatures.push(ports.getSource().getFeaturesInExtent(AOI));
				}
				else if( optSelected=='transStops' ) {
					visibileFeatures.push(transStop.getSource().getFeaturesInExtent(AOI));
				}
				else if( optSelected=='portFacility' ) {
					visibileFeatures.push(portFacility.getSource().getFeaturesInExtent(AOI));
				}
			}
		}
	} 
	if($("#cbSchoolsVoronoi").is(":checked")) {
		try {var len = $("#schoolData").val().length;} catch(e) {}
		voronoiLayersCount = len;
		if (len > 0) {
			for (i = 0; i < len; i++) {
				var optSelected=$("#schoolData").val()[i];
				if( optSelected=='primary' ) {
					visibileFeatures.push(primary.getSource().getFeaturesInExtent(AOI));
				}
				else if( optSelected=='private' ) {
					visibileFeatures.push(pssprivate.getSource().getFeaturesInExtent(AOI));
				}
			}
		}
	}//idher dalna hai
	if($("#cbFinVoronoi").is(":checked")) {
		try {var len = $("#finData").val().length;} catch(e) {}
		voronoiLayersCount = len;
		if (len > 0) {
			for (i = 0; i < len; i++) {
				var optSelected=$("#finData").val()[i];
				if( optSelected=='agencies' ) {
					visibileFeatures.push(agencies.getSource().getFeaturesInExtent(AOI));
				}
				else if( optSelected=='agent_ca' ) {
					visibileFeatures.push(agent_ca.getSource().getFeaturesInExtent(AOI));
				}
				else if( optSelected=='agent_za' ) {
					visibileFeatures.push(agent_za.getSource().getFeaturesInExtent(AOI));
				}
				else if( optSelected=='edwardjones' ) {
					visibileFeatures.push(edwardjones.getSource().getFeaturesInExtent(AOI));
				}
			}
		}
	}
	if($("#cbBanksVoronoi").is(":checked")) {
		try {var len = $("#bankData").val().length;} catch(e) {}
		voronoiLayersCount = len;
		if (len > 0) {
			for (i = 0; i < len; i++) {
				var optSelected=$("#bankData").val()[i];
				if( optSelected=='2012' ) {
					visibileFeatures.push(banks_2012.getSource().getFeaturesInExtent(AOI));
				}
				else if( optSelected=='2016' ) {
					visibileFeatures.push(banks_2016.getSource().getFeaturesInExtent(AOI));
				}
				else if( optSelected=='2017' ) {
					visibileFeatures.push(banks_2017.getSource().getFeaturesInExtent(AOI));
				}
				else if( optSelected=='creditunions' ) {
					visibileFeatures.push(creditunions.getSource().getFeaturesInExtent(AOI));
				}
			}
		}
	}
	if($("#cbFoodVoronoi").is(":checked")) {
		try {var len = $("#foodProd").val().length;} catch(e) {}
		voronoiLayersCount = len;
		if (len > 0) {
			for (i = 0; i < len; i++) {
				var optSelected=$("#foodProd").val()[i];
				if( optSelected=='ranchesandfarms' ) {
					visibileFeatures.push(ranchesandfarms.getSource().getFeaturesInExtent(AOI));
				}
				else if( optSelected=='foodplants') {
					visibileFeatures.push(foodplants.getSource().getFeaturesInExtent(AOI));
				}
				else if( optSelected=='hydroponics') {
					visibileFeatures.push(hydroponics.getSource().getFeaturesInExtent(AOI));
				}
			}
		}
	} 
	if($("#cbBeveragesVoronoi").is(":checked")) {
		try {var len = $("#beveragesSelect").val().length;} catch(e) {}
		voronoiLayersCount = len;
		if (len > 0) {
			for (i = 0; i < len; i++) {
				var optSelected=$("#beveragesSelect").val()[i];
				if( optSelected=='cbrands' ) {
					visibileFeatures.push(cbrands.getSource().getFeaturesInExtent(AOI));
				}
			}
		}
	}
	if($("#cbRefVoronoi").is(":checked")) {
		try{ var len = $("#selRefrigerated").val().length; } catch (ex) {}
		voronoiLayersCount = len;
		if(len > 0){
			for (i = 0; i < len; i++) {
				switch ($("#selRefrigerated").val()[i]) {
					case 'refrigerated':
						visibileFeatures.push(refrigeratedlocations.getSource().getFeaturesInExtent(AOI));
						break;
				}
			}
		}
	}
	if($("#cbFoodHomeVoronoi").is(":checked")) {
		try{ var len = $("#selFoodHome").val().length; } catch (ex) {}
		voronoiLayersCount = len;
		if (len > 0) {
			for (i = 0; i < len; i++) {
				switch ($("#selFoodHome").val()[i]) {
					case 'supermarkets':
						try{
							var len2 = $("#retailData").val().length;
						} catch (ex) {}
						if(len2 > 0) {
							for (i = 0; i < len2; i++) { 
								switch ($("#retailData").val()[i]) {
									case 'albertsons':
										visibileFeatures.push(albertsons.getSource().getFeaturesInExtent(AOI));
										break;
									case 'kroger':
										visibileFeatures.push(kroger.getSource().getFeaturesInExtent(AOI));
										break;
									case 'publix':
										visibileFeatures.push(publix.getSource().getFeaturesInExtent(AOI));
										break;
									case 'gianteagle':
										visibileFeatures.push(gianteagle.getSource().getFeaturesInExtent(AOI));
										break;
									case 'traderjoes':
										visibileFeatures.push(traderjoes.getSource().getFeaturesInExtent(AOI));
										break;
									case 'wholefoods':
										visibileFeatures.push(wholefoods.getSource().getFeaturesInExtent(AOI));
										break;
									case 'stores':
										visibileFeatures.push(stores.getSource().getFeaturesInExtent(AOI));
										break;
									default:
										break;
								}
							}
						}
						break;
					case 'farmers':
							visibileFeatures.push(farmer.getSource().getFeaturesInExtent(AOI));
						break;
				}
			}
		}
	} 
	if($("#cbFoodAwayVoronoi").is(":checked")) {
		var lenFoodAway = $("#selFoodaway").val().length;
		voronoiLayersCount = lenFoodAway;
		if (lenFoodAway > 0) {
			for (i = 0; i < lenFoodAway; i++) {
				switch ($("#selFoodaway").val()[i]) {
					case 'culver':
						visibileFeatures.push(culver.getSource().getFeaturesInExtent(AOI));
						break;
					case 'potbelly':
						visibileFeatures.push(potbelly.getSource().getFeaturesInExtent(AOI));
						break;
					case 'thornton':
						visibileFeatures.push(thornton.getSource().getFeaturesInExtent(AOI));
						break;
					case 'starbucks':
						visibileFeatures.push(starbucks.getSource().getFeaturesInExtent(AOI));
						break;
					case 'fiveguys':
						visibileFeatures.push(fiveguys.getSource().getFeaturesInExtent(AOI));
						break;
					case 'raisingcanes':
						visibileFeatures.push(raisingcanes.getSource().getFeaturesInExtent(AOI));
						break;
					default:
						break;
				}
			}
		}
	}
	if($("#cbFoodSuperMarketVoronoi").is(":checked")) {
		try {var len = $("#selFoodSuperMarket").val().length;} catch(e) {}
		voronoiLayersCount = len;
		if (len > 0) {
			for (i = 0; i < len; i++) {
				var optSelected=$("#selFoodSuperMarket").val()[i];
				if( optSelected=='aldiSixteen' ) {
					visibileFeatures.push(aldiSixteen.getSource().getFeaturesInExtent(AOI));
				}
				else if( optSelected=='aldiSixteenClosed') {
					visibileFeatures.push(aldiSixteenClosed.getSource().getFeaturesInExtent(AOI));
				}
				else if( optSelected=='aldiEighteen') {
					visibileFeatures.push(aldiEighteen.getSource().getFeaturesInExtent(AOI));
				}
				else if( optSelected=='aldiEighteenNew') {
					visibileFeatures.push(aldiEighteenNew.getSource().getFeaturesInExtent(AOI));
				}
			}
		}
	}
	if($("#cbDCVoronoi").is(":checked")) {
		try {var len = $("#dcData").val().length;} catch(e) {}
		voronoiLayersCount = len;
		if (len > 0) {
			for (i = 0; i < len; i++) {
				switch ($("#dcData").val()[i]) {
					case 'mclane':
						visibileFeatures.push(mclane.getSource().getFeaturesInExtent(AOI));
						break;
					case 'amazon':
						visibileFeatures.push(amazon.getSource().getFeaturesInExtent(AOI));
						break;
					case 'sysco':
						visibileFeatures.push(sysco.getSource().getFeaturesInExtent(AOI));
						break;
					case 'robinsonfresh':
						visibileFeatures.push(robinsonfresh.getSource().getFeaturesInExtent(AOI));
						break;
					case 'kehe':
						visibileFeatures.push(kehe.getSource().getFeaturesInExtent(AOI));
						break;
					case 'sygma':
						visibileFeatures.push(sygma.getSource().getFeaturesInExtent(AOI));
						break;
					case 'dmadcs':
						visibileFeatures.push(dmadcs.getSource().getFeaturesInExtent(AOI));
						break;
					case 'pfgpfs':
						visibileFeatures.push(pfgpfs.getSource().getFeaturesInExtent(AOI));
						break;
					case 'vistar':
						visibileFeatures.push(vistar.getSource().getFeaturesInExtent(AOI));
						break;
					case 'usfoods':
						visibileFeatures.push(usf.getSource().getFeaturesInExtent(AOI));
						break;
					case 'dma':
						visibileFeatures.push(dma.getSource().getFeaturesInExtent(AOI));
						break;
					case 'fedex':
						visibileFeatures.push(fedex.getSource().getFeaturesInExtent(AOI));
						break;
					case 'dhl':
						visibileFeatures.push(dhl.getSource().getFeaturesInExtent(AOI));
						break;
					case 'usps':
						visibileFeatures.push(ups.getSource().getFeaturesInExtent(AOI));
						break;
					default:
						break;
				}
			}
		}
	}
	if($("#cbVoronoi").is(":checked")){
		voronoiLayersCount = 1;
		visibileFeatures.push(voronoiHospitals.getSource().getFeaturesInExtent(AOI));
	}
	if($("#cbHealthFacilitiesVoronoi").is(":checked")) {
		try {var len = $("#healthFacilitiesSel").val().length;} catch(e) {}
		voronoiLayersCount = len;
		if (len > 0) {
			for (i = 0; i < len; i++) {
				var optSelected=$("#healthFacilitiesSel").val()[i];
				if( optSelected=='asc' ) {
					visibileFeatures.push(ascHealth.getSource().getFeaturesInExtent(AOI));
				}
				else if( optSelected=='primary' ) {
					visibileFeatures.push(primaryHealth.getSource().getFeaturesInExtent(AOI));
				}
				else if( optSelected=='dental' ) {
					visibileFeatures.push(dentalHealth.getSource().getFeaturesInExtent(AOI));
				}
				else if( optSelected=='mental' ) {
					visibileFeatures.push(mentalHealth.getSource().getFeaturesInExtent(AOI));
				}
				else if( optSelected=='dermagroup' ) {
					visibileFeatures.push(dermagroupHealth.getSource().getFeaturesInExtent(AOI));
				}
				else if( optSelected=='plasticsurgerygroup' ) {
					visibileFeatures.push(plasticsurgerygroupHealth.getSource().getFeaturesInExtent(AOI));
				}
				else if( optSelected=='plasticsurgerysolo' ) {
					visibileFeatures.push(plasticsurgerysoloHealth.getSource().getFeaturesInExtent(AOI));
				}
				else if( optSelected=='dermasolo' ) {
					visibileFeatures.push(dermasoloHealth.getSource().getFeaturesInExtent(AOI));
				}
				else if( optSelected=='providers' ) {
					visibileFeatures.push(providersHealth.getSource().getFeaturesInExtent(AOI));
				}
			}
		}
	}
	return visibileFeatures;
}

function toggleClusterVor(val,lyr) {
	if(val=='WFS') {
		if(lyr=='Primary'){
			try {var lenPrimary = $("#primaryData").val().length;} catch(e) {}
			if (lenPrimary > 0) {
				for (i = 0; i < lenPrimary; i++) {
					var optSelected=$("#primaryData").val()[i];
						if( optSelected=='brownfields' ) {
							brownfields.getSource().setDistance(0);
						}
						else if( optSelected=='datafiberbuildings' ) {
							try {var lenDataFiber = $("#datafiberBuildingsFilter").val().length;} catch(e) {}
							if (lenDataFiber > 0) {
								for (i = 0; i < lenDataFiber; i++) {
									switch ($("#datafiberBuildingsFilter").val()[i]) {
										case 'enterprisebuildings':
											enterprisebuildings.getSource().setDistance(0);
											break;
										case 'networkbuildings':
											networkbuildings.getSource().setDistance(0);
											break;
										default:
											break;
									}
								}
							}
						}
						else if( optSelected=='dicks' ) {
							dicks.getSource().setDistance(0);
						}
						else if( optSelected=='keef' ) {
							keef.getSource().setDistance(0);
						}
						else if( optSelected=='grainger' ) {
							grainger.getSource().setDistance(0);
						}
						else if( optSelected=='parkway' ) {
							parkway.getSource().setDistance(0);
						}
						else if( optSelected=='uhaul' ) {
							uhaul.getSource().setDistance(0);
						}
						else if( optSelected=='fortune' ) {
							fortune.getSource().setDistance(0);
						}
						else if( optSelected=='paca' ) {
							paca.getSource().setDistance(0);
						}
						else if( optSelected=='poultryfacilities' ) {
							poultryfacilities.getSource().setDistance(0);
						}
						else if( optSelected=='fairgrounds' ) {
							fairgrounds.getSource().setDistance(0);
						}
						else if( optSelected=='tartan' ) {
							tartan.getSource().setDistance(0);
						}
						else if( optSelected=='shopping' ) {
							shoppingcenter.getSource().setDistance(0);
						}
						else if( optSelected=='closings' ) {
							try {var lenClosings = $("#closingsData").val().length;} catch(e) {}
							if (lenClosings > 0) {
								for (i = 0; i < lenClosings; i++) {
									switch ($("#closingsData").val()[i]) {
										case 'sears':
											closings.getSource().setDistance(0);
											break;
										case 'toys':
											toysrus.getSource().setDistance(0);
											break;
										case 'gymboree':
											gymboree.getSource().setDistance(0);
											break;
										default:
											break;
									}
								}
							}
						}
						else if( optSelected=='logos' ) {
							logo.getSource().setDistance(0);
						}
				}
			}
		}
		else if(lyr=='Health'){
			if($("#selHospitals").val() !== "none")
				voronoiHospitals.getSource().setDistance(0);			
		}
		else if(lyr=='Energy'){
			try {var len = $("#energyData").val().length;} catch(e) {}
			if (len > 0) {
				for (i = 0; i < len; i++) {
					var optSelected=$("#energyData").val()[i];
					if( optSelected=='biodieselplants' ) {
						biodieselplants.getSource().setDistance(0);
					}
					else if( optSelected=='ethanol' ) {
						ethanol.getSource().setDistance(0);
					}
					else if( optSelected=='oilrefineries' ) {
						oilrefineries.getSource().setDistance(0);
					}
					else if( optSelected=='tapetro' ) {
						tapetro.getSource().setDistance(0);
					}
				}
			}
		}
		else if(lyr=='Own'){
			try {var len = $("#ownData").val().length;} catch(e) {}
			if (len > 0) {
				for (i = 0; i < len; i++) {
					var optSelected=$("#ownData").val()[i];
						if( optSelected=='gardens' ) {
							garden.getSource().setDistance(0);
						}
						else if( optSelected=='potbellytwo' ) {
							potbellytwo.getSource().setDistance(0);
						}
						else if( optSelected=='hot_springs' ) {
							hot_springs.getSource().setDistance(0);
						}
						else if( optSelected=='landbanks' ) {
							landbanks.getSource().setDistance(0);
						}
						else if( optSelected=='shelter' ) {
							shelter.getSource().setDistance(0);
						}
						else if( optSelected=='unitsa' ) {
							unitsa.getSource().setDistance(0);
						}
						else if( optSelected=='unitsb' ) {
							unitsb.getSource().setDistance(0);
						}
						else if( optSelected=='natural' ) {
							natural.getSource().setDistance(0);
						}
						else if( optSelected=='manmade' ) {
							var lenManmade = $("#manmadeData").val().length;
							if (lenManmade > 0) {
								for (i = 0; i < lenManmade; i++) {
									switch ($("#manmadeData").val()[i]) {
										case 'destinations':
											manmade_destinations.getSource().setDistance(0);
											break;
										case 'faith':
											manmade_faith.getSource().setDistance(0);
											break;
										case 'govt':
											manmade_govt_places.getSource().setDistance(0);
											break;
										case 'infrastructure':
											manmade_infrastructure.getSource().setDistance(0);
											break;
										case 'public':
											manmade_public_spaces.getSource().setDistance(0);
											break;
										case 'retail':
											manmade_retail_prices.getSource().setDistance(0);
											break;
										default:
											break;
									}
								}
							}
						}
				}
			}
		}
		else if(lyr=='Tpt'){
			try {var len = $("#tptData").val().length;} catch(e) {}
			if (len > 0) {
				for (i = 0; i < len; i++) {
					var optSelected=$("#tptData").val()[i];
						if( optSelected=='airports' ) {
							airport.getSource().setDistance(0);
						}
						else if( optSelected=='flag' ) {
							freightIntersects.getSource().setDistance(0);
						}
						else if( optSelected=='traffic' ) {
							traffic.getSource().setDistance(0);
						}
						else if( optSelected=='interchange' ) {
							interchange.getSource().setDistance(0);
						}
						else if( optSelected=='iana' ) {
							iana.getSource().setDistance(0);
						}
						else if( optSelected=='ports' ) {
							ports.getSource().setDistance(0);
						}
						else if( optSelected=='transStops' ) {
							transStop.getSource().setDistance(0);
						}
						else if( optSelected=='portFacility' ) {
							portFacility.getSource().setDistance(0);
						}
				}
			}
		}
		else if(lyr=='Schools'){
			try {var len = $("#schoolData").val().length;} catch(e) {}
			if (len > 0) {
				for (i = 0; i < len; i++) {
					var optSelected=$("#schoolData").val()[i];
						if( optSelected=='primary' ) {
							primary.getSource().setDistance(0);
						}
						else if( optSelected=='private' ) {
							pssprivate.getSource().setDistance(0);
						}
				}
			}
		}
		else if(lyr=='Banks'){
			try {var len = $("#bankData").val().length;} catch(e) {}
			if (len > 0) {
				for (i = 0; i < len; i++) {
					var optSelected=$("#bankData").val()[i];
						if( optSelected=='2012' ) {
							banks_2012.getSource().setDistance(0);
						}
						else if( optSelected=='2016' ) {
							banks_2016.getSource().setDistance(0);
						}
						else if( optSelected=='2017' ) {
							banks_2017.getSource().setDistance(0);
						}
						else if( optSelected=='creditunions' ) {
							creditunions.getSource().setDistance(0);
						}
				}
			}
		}
		else if(lyr=='Finance'){
			try {var len = $("#finData").val().length;} catch(e) {}
			if (len > 0) {
				for (i = 0; i < len; i++) {
					var optSelected=$("#finData").val()[i];
					if( optSelected=='agencies' ) {
						agencies.getSource().setDistance(0);
					}
					else if( optSelected=='agent_ca' ) {
						agent_ca.getSource().setDistance(0);
					}
					else if( optSelected=='agent_za' ) {
						agent_za.getSource().setDistance(0);
					}
					else if( optSelected=='edwardjones' ) {
						edwardjones.getSource().setDistance(0);
					}
				}
			}
		}
		else if(lyr=='Food'){
			try {var len = $("#foodProd").val().length;} catch(e) {}
			if (len > 0) {
				for (i = 0; i < len; i++) {
					var optSelected=$("#foodProd").val()[i];
						if( optSelected=='ranchesandfarms' ) {
							ranchesandfarms.getSource().setDistance(0);
						}
						else if( optSelected=='foodplants') {
							foodplants.getSource().setDistance(0);
						}
						else if( optSelected=='hydroponics') {
							hydroponics.getSource().setDistance(0);
						}
				}
			}
		}
		else if(lyr=='Beverages'){
			try {var len = $("#beveragesSelect").val().length;} catch(e) {}
			if (len > 0) {
				for (i = 0; i < len; i++) {
					var optSelected=$("#beveragesSelect").val()[i];
						if( optSelected=='cbrands' ) {
							cbrands.getSource().setDistance(0);
						}
				}
			}
		}
		else if(lyr=='Refrigerated'){
			try{ var len = $("#selRefrigerated").val().length; } catch (ex) {}
			if(len > 0){
				for (i = 0; i < len; i++) {
					switch ($("#selRefrigerated").val()[i]) {
						case 'refrigerated':
							refrigeratedlocations.getSource().setDistance(0);
							break;
					}
				}
			}
		}
		else if(lyr=='FoodHome'){
			try {var lenFoodHome = $("#selFoodHome").val().length;} catch(e) {}
			if (lenFoodHome > 0) {
				for (i = 0; i < lenFoodHome; i++) {
					var optSelected=$("#selFoodHome").val()[i];
						if( optSelected=='supermarkets' ) {
							try
							{
								var retail=$("#retailData").val();
								retail.forEach(function(entry) {
									if( entry=='albertsons') {
										albertsons.getSource().setDistance(0);
									}
									if( entry=='kroger') {
										kroger.getSource().setDistance(0);
									}
									else if( entry=='publix') {
										publix.getSource().setDistance(0);
									}
									else if( entry=='gianteagle') {
										gianteagle.getSource().setDistance(0);
									}
									else if( entry=='traderjoes') {
										traderjoes.getSource().setDistance(0);
									}
									else if( entry=='wholefoods') {
										wholefoods.getSource().setDistance(0);
									}
									else if( entry=='stores') {
										stores.getSource().setDistance(0);
									}
								});
							}
							catch(e)
							{}
						}
						else if( optSelected=='farmers') {
							farmer.getSource().setDistance(0);
						}
				}
			}
		}
		else if(lyr=='FoodAway'){
			var lenFoodAway = $("#selFoodaway").val().length;
			if (lenFoodAway > 0) {
				for (i = 0; i < lenFoodAway; i++) {
					switch ($("#selFoodaway").val()[i]) {
						case 'culver':
							culver.getSource().setDistance(0);
							break;
						case 'potbelly':
							potbelly.getSource().setDistance(0);
							break;
						case 'thornton':
							thornton.getSource().setDistance(0);
							break;
						case 'starbucks':
							starbucks.getSource().setDistance(0);
							break;
						case 'raisingcanes':
							raisingcanes.getSource().setDistance(0);
							break;
						case 'fiveguys':
							fiveguys.getSource().setDistance(0);
							break;
						default:
							break;
					}
				}
			}
		}
		else if(lyr=='FoodSuperMarket'){
			try {var len = $("#selFoodSuperMarket").val().length;} catch(e) {}
			if (len > 0) {
				for (i = 0; i < len; i++) {
					var optSelected=$("#selFoodSuperMarket").val()[i];
						if( optSelected=='aldiSixteen' ) {
							aldiSixteen.getSource().setDistance(0);
						}
						else if( optSelected=='aldiSixteenClosed') {
							aldiSixteenClosed.getSource().setDistance(0);
						}
						else if( optSelected=='aldiEighteen') {
							aldiEighteen.getSource().setDistance(0);
						}
						else if( optSelected=='aldiEighteenNew') {
							aldiEighteenNew.getSource().setDistance(0);
						}
				}
			}
		}
		else if(lyr=='Distribution'){
			try {var len = $("#dcData").val().length;} catch(e) {}
			if (len > 0) {
				for (i = 0; i < len; i++) {
					switch ($("#dcData").val()[i]) {
						case 'mclane':
							mclane.getSource().setDistance(0);
							break;
						case 'amazon':
							amazon.getSource().setDistance(0);
							break;
						case 'sysco':
							sysco.getSource().setDistance(0);
							break;
						case 'robinsonfresh':
							robinsonfresh.getSource().setDistance(0);
							break;
						case 'kehe':
							kehe.getSource().setDistance(0);
							break;
						case 'vistar':
							vistar.getSource().setDistance(0);
							break;
						case 'sygma':
							sygma.getSource().setDistance(0);
							break;
						case 'dmadcs':
							dmadcs.getSource().setDistance(0);
							break;
						case 'pfgpfs':
							pfgpfs.getSource().setDistance(0);
							break;
						case 'usfoods':
							usf.getSource().setDistance(0);
							break;
						case 'dma':
							dma.getSource().setDistance(0);
							break;
						case 'fedex':
							fedex.getSource().setDistance(0);
							break;
						case 'dhl':
							dhl.getSource().setDistance(0);
							break;
						case 'usps':
							ups.getSource().setDistance(0);
							break;
						default:
							break;
					}
				}
			}
		}
		else if (lyr=='HealthFacilities') {
			try {var len = $("#dcData").val().length;} catch(e) {}
			if (len > 0) {
				for (i = 0; i < len; i++) {
					switch ($("#dcData").val()[i]) {
						case 'mclane':
							mclane.getSource().setDistance(0);
							break;
						case 'amazon':
							amazon.getSource().setDistance(0);
							break;
						case 'sysco':
							sysco.getSource().setDistance(0);
							break;
						case 'robinsonfresh':
							robinsonfresh.getSource().setDistance(0);
							break;
						case 'kehe':
							kehe.getSource().setDistance(0);
							break;
						case 'vistar':
							vistar.getSource().setDistance(0);
							break;
						case 'sygma':
							sygma.getSource().setDistance(0);
							break;
						case 'dmadcs':
							dmadcs.getSource().setDistance(0);
							break;
						case 'pfgpfs':
							pfgpfs.getSource().setDistance(0);
							break;
						case 'usfoods':
							usf.getSource().setDistance(0);
							break;
						case 'dma':
							dma.getSource().setDistance(0);
							break;
						case 'fedex':
							fedex.getSource().setDistance(0);
							break;
						case 'dhl':
							dhl.getSource().setDistance(0);
							break;
						case 'usps':
							ups.getSource().setDistance(0);
							break;
						default:
							break;
					}
				}
			}
		}
		else if (lyr=='Hospitals') {
			voronoiHospitals.getSource().setDistance(0);
		}
	}
	else if(val=='Cluster')	{
		if(lyr=='Primary'){
			try {var len = $("#primaryData").val().length;} catch(e) {}
				if (len > 0) {
					for (i = 0; i < len; i++) {
						var optSelected=$("#primaryData").val()[i];
							if( optSelected=='brownfields' ) {
								brownfields.getSource().setDistance($("#clusterIntBrownfields").val());
							}
							else if( optSelected=='datafiberbuildings' ) {
								try {var lenDataFiber = $("#datafiberBuildingsFilter").val().length;} catch(e) {}
								if (lenDataFiber > 0) {
									for (i = 0; i < lenDataFiber; i++) {
										switch ($("#datafiberBuildingsFilter").val()[i]) {
											case 'enterprisebuildings':
												enterprisebuildings.getSource().setDistance(30);
												break;
											case 'networkbuildings':
												networkbuildings.getSource().setDistance(30);
												break;
											default:
												break;
										}
									}
								}
							}
							else if( optSelected=='dicks' ) {
								dicks.getSource().setDistance($("#clusterIntDicks").val());
							}
							else if( optSelected=='keef' ) {
								keef.getSource().setDistance($("#clusterIntKeef").val());
							}
							else if( optSelected=='grainger' ) {
								grainger.getSource().setDistance($("#clusterIntGrainger").val());
							}
							else if( optSelected=='parkway' ) {
								parkway.getSource().setDistance($("#clusterIntParkway").val());
							}
							else if( optSelected=='tartan' ) {
								tartan.getSource().setDistance($("#clusterIntTartan").val());
							}
							else if( optSelected=='uhaul' ) {
								uhaul.getSource().setDistance($("#clusterIntUhaul").val());
							}
							else if( optSelected=='paca' ) {
								paca.getSource().setDistance($("#clusterIntUhaul").val());
							}
							else if( optSelected=='poultryfacilities' ) {
								poultryfacilities.getSource().setDistance($("#clusterIntUhaul").val());
							}
							else if( optSelected=='fairgrounds' ) {
								fairgrounds.getSource().setDistance($("#clusterIntUhaul").val());
							}
							else if( optSelected=='fortune' ) {
								fortune.getSource().setDistance($("#clusterIntUhaul").val());
							}
							else if( optSelected=='shopping' ) {
								shoppingcenter.getSource().setDistance($("#clusterIntShopping").val());
							}
							else if( optSelected=='closings' ) {
								try{var lenClosings = $("#closingsData").val().length;}catch(ex){}
								if (lenClosings > 0) {
									for (i = 0; i < lenClosings; i++) {
										switch ($("#closingsData").val()[i]) {
											case 'sears':
												closings.getSource().setDistance($("#clusterIntSears").val());
												break;
											case 'toys':
												toysrus.getSource().setDistance($("#clusterIntToys").val());
												break;
											case 'gymboree':
												gymboree.getSource().setDistance($("#clusterIntGymboree").val());
												break;
											default:
												break;
										}
									}
								}
							}
							else if( optSelected=='logos' ) {
								logo.getSource().setDistance($("#clusterIntLogo").val());
							}
					}
				}
		}
		else if(lyr=='Health'){
			if($("#selHospitals").val() !== "none")
				voronoiHospitals.getSource().setDistance(30);
		}
		else if(lyr=='Energy'){
			try {var len = $("#energyData").val().length;} catch(e) {}
			if (len > 0) {
				for (i = 0; i < len; i++) {
					var optSelected=$("#energyData").val()[i];
					if( optSelected=='biodieselplants' ) {
						biodieselplants.getSource().setDistance($("#clusterIntBiodieselplants").val());
					}
					else if( optSelected=='ethanol' ) {
						ethanol.getSource().setDistance($("#clusterIntEthanol").val());
					}
					else if( optSelected=='oilrefineries' ) {
						oilrefineries.getSource().setDistance($("#clusterIntOilrefineries").val());
					}
					else if( optSelected=='tapetro' ) {
						tapetro.getSource().setDistance($("#clusterIntTAPetro").val());
					}
				}
			}
		}
		else if(lyr=='Own'){
			try {var len = $("#ownData").val().length;} catch(e) {}
			if (len > 0) {
				for (i = 0; i < len; i++) {
					var optSelected=$("#ownData").val()[i];
						if( optSelected=='gardens' ) {
							garden.getSource().setDistance($("#clusterIntGarden").val());
						}
						if( optSelected=='potbellytwo' ) {
							potbellytwo.getSource().setDistance($("#clusterIntShelter").val());
						}
						if( optSelected=='hot_springs' ) {
							hot_springs.getSource().setDistance($("#clusterIntHotSprings").val());
						}
						if( optSelected=='landbanks' ) {
							landbanks.getSource().setDistance($("#clusterIntHotSprings").val());
						}
						else if( optSelected=='shelter' ) {
							shelter.getSource().setDistance($("#clusterIntShelter").val());
						}
						else if( optSelected=='unitsa' ) {
							unitsa.getSource().setDistance($("#clusterIntShelter").val());
						}
						else if( optSelected=='unitsb' ) {
							unitsb.getSource().setDistance($("#clusterIntShelter").val());
						}
						else if( optSelected=='natural' ) {
							natural.getSource().setDistance($("#clusterIntNatural").val());
						}
						else if( optSelected=='manmade' ) {
							var len = $("#manmadeData").val().length;
							if (len > 0) {
								for (i = 0; i < len; i++) {
									switch ($("#manmadeData").val()[i]) {
										case 'destinations':
											manmade_destinations.getSource().setDistance($("#clusterIntManmade").val());
											break;
										case 'faith':
											manmade_faith.getSource().setDistance($("#clusterIntManmade").val());
											break;
										case 'govt':
											manmade_govt_places.getSource().setDistance($("#clusterIntManmade").val());
											break;
										case 'infrastructure':
											manmade_infrastructure.getSource().setDistance($("#clusterIntManmade").val());
											break;
										case 'public':
											manmade_public_spaces.getSource().setDistance($("#clusterIntManmade").val());
											break;
										case 'retail':
											manmade_retail_prices.getSource().setDistance($("#clusterIntManmade").val());
											break;
										default:
											break;
									}
								}
							}
						}
				}
			}
		}
		else if(lyr=='Tpt'){
			try {var len = $("#tptData").val().length;} catch(e) {}
			if (len > 0) {
				for (i = 0; i < len; i++) {
					var optSelected=$("#tptData").val()[i];
						if( optSelected=='airports' ) {
							airport.getSource().setDistance($("#clusterIntAirport").val());
						}
						else if( optSelected=='flag' ) {
							freightIntersects.getSource().setDistance($("#clusterIntFreight").val());
						}
						else if( optSelected=='traffic' ) {
							traffic.getSource().setDistance($("#clusterIntTraffic").val());
						}
						else if( optSelected=='interchange' ) {
							interchanges.getSource().setDistance($("#clusterIntInterchanges").val());
						}
						else if( optSelected=='iana' ) {
							iana.getSource().setDistance($("#clusterIntIana").val());
						}
						else if( optSelected=='ports' ) {
							ports.getSource().setDistance($("#clusterIntPorts").val());
						}
						else if( optSelected=='transStops' ) {
							transitstations.getSource().setDistance($("#clusterIntTransit").val());
						}
						else if( optSelected=='portFacility' ) {
							port_facility.getSource().setDistance($("#clusterIntPort").val());
						}
				}
			}
		}
		else if(lyr=='Schools'){
			try {var len = $("#schoolData").val().length;} catch(e) {}
			if (len > 0) {
				for (i = 0; i < len; i++) {
					var optSelected=$("#schoolData").val()[i];
						if( optSelected=='primary' ) {
							primary.getSource().setDistance($("#clusterIntPrimary").val());
						}
						else if( optSelected=='pssprivate' ) {
							pssprivate.getSource().setDistance($("#clusterIntPss").val());
						}
				}
			}
		}
		else if(lyr=='Banks'){
			try {var len = $("#bankData").val().length;} catch(e) {}
			if (len > 0) {
				for (i = 0; i < len; i++) {
					var optSelected=$("#bankData").val()[i];
						if( optSelected=='2012' ) {
							banks_2012.getSource().setDistance($("#clusterIntBank").val());
						}
						else if( optSelected=='2016' ) {
							banks_2016.getSource().setDistance($("#clusterIntBank").val());
						}
						else if( optSelected=='2017' ) {
							banks_2017.getSource().setDistance($("#clusterIntBank").val());
						}
						else if( optSelected=='creditunions' ) {
							creditunions.getSource().setDistance($("#clusterIntBank").val());
						}
				}
			}
		}
		else if(lyr=='Finance'){
			try {var len = $("#finData").val().length;} catch(e) {}
			if (len > 0) {
				for (i = 0; i < len; i++) {
					var optSelected=$("#finData").val()[i];
					if( optSelected=='agencies' ) {
						agencies.getSource().setDistance($("#clusterIntAgencies").val());
					}
					else if( optSelected=='agent_za' ) {
						agent_za.getSource().setDistance($("#clusterIntZA").val());
					}
					else if( optSelected=='agent_ca' ) {
						agent_ca.getSource().setDistance($("#clusterIntCA").val());
					}
					else if( optSelected=='edwardjones' ) {
						edwardjones.getSource().setDistance($("#clusterIntEdwardJones").val());
					}
				}
			}
		}
		else if(lyr=='Food'){
			try {var len = $("#foodProd").val().length;} catch(e) {}
			if (len > 0) {
				for (i = 0; i < len; i++) {
					var optSelected=$("#foodProd").val()[i];
						if( optSelected=='ranchesandfarms' ) {
							ranchesandfarms.getSource().setDistance($("#clusterIntRanches").val());
						}
						else if( optSelected=='foodplants') {
							foodplants.getSource().setDistance($("#clusterIntTyson").val());
						}
						else if( optSelected=='hydroponics') {
							hydroponics.getSource().setDistance($("#clusterIntHydroponics").val());
						}
				}
			}
		}
		else if(lyr=='Beverages'){
			try {var len = $("#beveragesSelect").val().length;} catch(e) {}
			if (len > 0) {
				for (i = 0; i < len; i++) {
					var optSelected=$("#beveragesSelect").val()[i];
						if( optSelected=='cbrands' ) {
							cbrands.getSource().setDistance(30);
						}
				}
			}
		}
		else if(lyr=='Refrigerated'){
			try{ var len = $("#selRefrigerated").val().length; } catch (ex) {}
			if(len > 0){
				for (i = 0; i < len; i++) {
					switch ($("#selRefrigerated").val()[i]) {
						case 'refrigerated':
							refrigeratedlocations.getSource().setDistance($("#clusterIntRefri").val());
							break;
					}
				}
			}
		}
		else if(lyr=='FoodHome'){
				try{ var len = $("#selFoodHome").val().length; } catch (ex) {}
				if (len > 0) {
					for (i = 0; i < len; i++) {
						switch ($("#selFoodHome").val()[i]) {
							case 'supermarkets':
								try{
									var len2 = $("#retailData").val().length;
								} catch (ex) {}
								if(len2 > 0) {
									for (i = 0; i < len2; i++) { 
										switch ($("#retailData").val()[i]) {
											case 'albertsons':
												albertsons.getSource().setDistance($("#clusterIntAlbertsons").val());
												break;
											case 'kroger':
												kroger.getSource().setDistance($("#clusterIntKroger").val());
												break;
											case 'publix':
												publix.getSource().setDistance($("#clusterIntPublix").val());
												break;
											case 'gianteagle':
												gianteagle.getSource().setDistance($("#clusterIntGiantEagle").val());
												break;
											case 'traderjoes':
												traderjoes.getSource().setDistance($("#clusterIntTraderJoes").val());
												break;
											case 'wholefoods':
												wholefoods.getSource().setDistance($("#clusterIntWholeFoods").val());
												break;
											case 'stores':
												stores.getSource().setDistance($("#clusterIntStores"));
												break;
											default:
												break;
										}
									}
								}
								break;
							case 'farmers':
								farmer.getSource().setDistance($("#clusterIntFarmers").val());
								break;
							default:
								break;
						}
					}
				}
		}
		else if(lyr=='FoodAway'){
			var lenFoodAway = $("#selFoodaway").val().length;
			if (lenFoodAway > 0) {
				for (i = 0; i < lenFoodAway; i++) {
					switch ($("#selFoodaway").val()[i]) {
						case 'culver':
							culver.getSource().setDistance($("#clusterIntCulver").val());
							break;
						case 'potbelly':
							potbelly.getSource().setDistance($("#clusterIntPotbelly").val());
							break;
						case 'thornton':
							thornton.getSource().setDistance($("#clusterIntThornton").val());
							break;
						case 'starbucks':
							starbucks.getSource().setDistance($("#clusterIntStarbucks").val());
							break;
						case 'fiveguys':
							fiveguys.getSource().setDistance($("#clusterIntFiveGuys").val());
							break;
						case 'raisingcanes':
							raisingcanes.getSource().setDistance($("#clusterIntRaisingCanes").val());
							break;
						default:
							break;
					}
				}
			}
		}
		else if(lyr=='FoodSuperMarket'){
			try {var len = $("#selFoodSuperMarket").val().length;} catch(e) {}
			if (len > 0) {
				for (i = 0; i < len; i++) {
					var optSelected=$("#selFoodSuperMarket").val()[i];
						if( optSelected=='aldiSixteen' ) {
							aldiSixteen.getSource().setDistance($("#clusterIntAldi").val());
						}
						else if( optSelected=='aldiSixteenClosed') {
							aldiSixteenClosed.getSource().setDistance($("#clusterIntAldi").val());
						}
						else if( optSelected=='aldiEighteen') {
							aldiEighteen.getSource().setDistance($("#clusterIntAldi").val());
						}
						else if( optSelected=='aldiEighteenNew') {
							aldiEighteenNew.getSource().setDistance($("#clusterIntAldi").val());
						}
				}
			}
		}
		else if (lyr=='Distribution') {
			var len = 0;
			try {len = $("#dcData").val().length;} catch(e) {}
			if (len > 0) {
				for (i = 0; i < len; i++) {
					switch ($("#dcData").val()[i]) {
						case 'mclane':
							mclane.getSource().setDistance($("#clusterIntMclane").val());
							break;
						case 'amazon':
							amazon.getSource().setDistance($("#clusterIntAmazon").val());
							break;
						case 'sysco':
							sysco.getSource().setDistance($("#clusterIntSysco").val());
							break;
						case 'robinsonfresh':
							robinsonfresh.getSource().setDistance($("#clusterIntRobinsonFresh").val());
							break;
						case 'kehe':
							kehe.getSource().setDistance($("#clusterIntKeHE").val());
							break;
						case 'pfgpfs':
							pfgpfs.getSource().setDistance($("#clusterIntPfgpfs").val());
							break;
						case 'sygma':
							sygma.getSource().setDistance($("#clusterIntSygma").val());
							break;
						case 'dmadcs':
							dmadcs.getSource().setDistance($("#clusterIntDmaDcs").val());
							break;
						case 'vistar':
							vistar.getSource().setDistance($("#clusterIntVistar").val());
							break;
						case 'usfoods':
							usf.getSource().setDistance($("#clusterIntUsf").val());
							break;
						case 'dma':
							dma.getSource().setDistance($("#clusterIntDMA").val());
							break;
						case 'fedex':
							fedex.getSource().setDistance($("#clusterIntFedex").val());
							break;
						case 'dhl':
							dhl.getSource().setDistance($("#clusterIntDHL").val());
							break;
						case 'usps':
							ups.getSource().setDistance($("#clusterIntUPS").val());
							break;
						default:
							break;
					}
				}
			}
		}
		else if (lyr=='HealthFacilities') {
			var len = 0;
			try {len = $("#healthFacilitiesSel").val().length;} catch(e) {}
			if (len > 0) {
				for (i = 0; i < len; i++) {
					switch ($("#healthFacilitiesSel").val()[i]) {
						case 'asc':
							ascHealth.getSource().setDistance(30);
							break;
						case 'dermagroup':
							dermagroupHealth.getSource().setDistance(30);
							break;
						case 'dermasolo':
							dermasoloHealth.getSource().setDistance(30);
							break;
						case 'plasticsurgerysolo':
							plasticsurgerysoloHealth.getSource().setDistance(30);
							break;
						case 'plasticsurgerygroup':
							plasticsurgerygHealth.getSource().setDistance(30);
							break;
						case 'providers':
							providersHealth.getSource().setDistance(30);
							break;
						case 'primary':
							primaryHealth.getSource().setDistance(30);
							break;
						case 'dental':
							dentalHealth.getSource().setDistance(30);
							break;
						case 'mental':
							mentalHealth.getSource().setDistance(30);
							break;
					}
				}
			}
		}
	}
	else if(val == true || val == false){
		if(lyr=='Primary'){
			try {var len = $("#primaryData").val().length;} catch(e) {}
				if (len > 0) {
					for (i = 0; i < len; i++) {
						var optSelected=$("#primaryData").val()[i];
							if( optSelected=='brownfields' ) {
								brownfields.setVisible(val);
							}
							else if( optSelected=='datafiberbuildings' ) {
								try {var lenDataFiber = $("#datafiberBuildingsFilter").val().length;} catch(e) {}
								if (lenDataFiber > 0) {
									for (i = 0; i < lenDataFiber; i++) {
										switch ($("#datafiberBuildingsFilter").val()[i]) {
											case 'enterprisebuildings':
												enterprisebuildings.setVisible(val);
												break;
											case 'networkbuildings':
												networkbuildings.setVisible(val);
												break;
											default:
												break;
										}
									}
								}
							}
							else if( optSelected=='dicks' ) {
								dicks.setVisible(val);
							}
							else if( optSelected=='keef' ) {
								keef.setVisible(val);
							}
							else if( optSelected=='grainger' ) {
								grainger.setVisible(val);
							}
							else if( optSelected=='parkway' ) {
								parkway.setVisible(val);
							}
							else if( optSelected=='tartan' ) {
								tartan.setVisible(val);
							}
							else if( optSelected=='uhaul' ) {
								uhaul.setVisible(val);
							}
							else if( optSelected=='fortune' ) {
								fortune.setVisible(val);
							}
							else if( optSelected=='paca' ) {
								paca.setVisible(val);
							}
							else if( optSelected=='poultryfacilities' ) {
								poultryfacilities.setVisible(val);
							}
							else if( optSelected=='fairgrounds' ) {
								fairgrounds.setVisible(val);
							}
							else if( optSelected=='shopping' ) {
								shoppingcenter.setVisible(val);
							}
							else if( optSelected=='closings' ) {
								try{var lenClosings = $("#closingsData").val().length;}catch(ex){}
								if (lenClosings > 0) {
									for (i = 0; i < lenClosings; i++) {
										switch ($("#closingsData").val()[i]) {
											case 'sears':
												closings.setVisible(val);
												break;
											case 'toys':
												toysrus.setVisible(val);
												break;
											case 'gymboree':
												gymboree.setVisible(val);
												break;
											default:
												break;
										}
									}
								}
							}
							else if( optSelected=='logos' ) {
								logo.setVisible(val);
							}
					}
				}
		}
		else if(lyr=='Health'){
			if($("#selHospitals").val() !== "none")
				voronoiHospitals.setVisible(val);			
		}
		else if(lyr=='Energy'){
			try {var len = $("#energyData").val().length;} catch(e) {}
			if (len > 0) {
				for (i = 0; i < len; i++) {
					var optSelected=$("#energyData").val()[i];
					if( optSelected=='biodieselplants' ) {
						biodieselplants.setVisible(val);
					}
					else if( optSelected=='ethanol' ) {
						ethanol.setVisible(val);
					}
					else if( optSelected=='oilrefineries' ) {
						oilrefineries.setVisible(val);
					}
					else if( optSelected=='tapetro' ) {
						tapetro.setVisible(val);
					}
				}
			}
		}
		else if(lyr=='Own'){
			try {var len = $("#ownData").val().length;} catch(e) {}
			if (len > 0) {
				for (i = 0; i < len; i++) {
					var optSelected=$("#ownData").val()[i];
						if( optSelected=='gardens' ) {
							garden.setVisible(val);
						}
						if( optSelected=='hot_springs' ) {
							hot_springs.setVisible(val);
						}
						if( optSelected=='landbanks' ) {
							landbanks.setVisible(val);
						}
						else if( optSelected=='shelter' ) {
							shelter.setVisible(val);
						}
						else if( optSelected=='unitsa' ) {
							unitsa.setVisible(val);
						}
						else if( optSelected=='unitsb' ) {
							unitsb.setVisible(val);
						}
						else if( optSelected=='natural' ) {
							natural.setVisible(val);
						}
						else if( optSelected=='manmade' ) {
							var len = $("#manmadeDiv").val().length;
							if (len > 0) {
								for (i = 0; i < len; i++) {
									switch ($("#manmadeDiv").val()[i]) {
										case 'destinations':
											manmade_destinations.setVisible(val);
											break;
										case 'faith':
											manmade_faith.setVisible(val);
											break;
										case 'govt':
											manmade_govt_places.setVisible(val);
											break;
										case 'infrastructure':
											manmade_infrastructure.setVisible(val);
											break;
										case 'public':
											manmade_public_spaces.setVisible(val);
											break;
										case 'retail':
											manmade_retail_prices.setVisible(val);
											break;
										default:
											break;
									}
								}
							}
						}
				}
			}
		}
		else if(lyr=='Tpt'){
			try {var len = $("#tptData").val().length;} catch(e) {}
			if (len > 0) {
				for (i = 0; i < len; i++) {
					var optSelected=$("#tptData").val()[i];
						if( optSelected=='airports' ) {
							airport.setVisible(val);
						}
						else if( optSelected=='flag' ) {
							freightIntersects.setVisible(val);
						}
						else if( optSelected=='traffic' ) {
							traffic.setVisible(val);
						}
						else if( optSelected=='interchange' ) {
							interchanges.setVisible(val);
						}
						else if( optSelected=='iana' ) {
							iana.setVisible(val);
						}
						else if( optSelected=='ports' ) {
							ports.setVisible(val);
						}
						else if( optSelected=='transStops' ) {
							transitstations.setVisible(val);
						}
						else if( optSelected=='portFacility' ) {
							port_facility.setVisible(val);
						}
				}
			}
		}
		else if(lyr=='Schools'){
			try {var len = $("#schoolData").val().length;} catch(e) {}
			if (len > 0) {
				for (i = 0; i < len; i++) {
					var optSelected=$("#schoolData").val()[i];
						if( optSelected=='primary' ) {
							primary.setVisible(val);
						}
						else if( optSelected=='pssprivate' ) {
							pssprivate.setVisible(val);
						}
				}
			}
		}
		else if(lyr=='Banks'){
			try {var len = $("#bankData").val().length;} catch(e) {}
			if (len > 0) {
				for (i = 0; i < len; i++) {
					var optSelected=$("#bankData").val()[i];
						if( optSelected=='2012' ) {
							banks_2012.setVisible(val);
						}
						else if( optSelected=='2016' ) {
							banks_2016.setVisible(val);
						}
						else if( optSelected=='2017' ) {
							banks_2017.setVisible(val);
						}
						else if( optSelected=='creditunions' ) {
							creditunions.setVisible(val);
						}
				}
			}
		}
		else if(lyr=='Finance'){
			try {var len = $("#finData").val().length;} catch(e) {}
			if (len > 0) {
				for (i = 0; i < len; i++) {
					var optSelected=$("#finData").val()[i];
					if( optSelected=='agencies' ) {
						agencies.setVisible(val);
					}
					else if( optSelected=='agent_za' ) {
						agent_za.setVisible(val);
					}
					else if( optSelected=='agent_ca' ) {
						agent_ca.setVisible(val);
					}
					else if( optSelected=='edwardjones' ) {
						edwardjones.setVisible(val);
					}
				}
			}
		}
		else if(lyr=='Food'){
			try {var len = $("#foodProd").val().length;} catch(e) {}
			if (len > 0) {
				for (i = 0; i < len; i++) {
					var optSelected=$("#foodProd").val()[i];
						if( optSelected=='ranchesandfarms' ) {
							ranchesandfarms.setVisible(val);
						}
						else if( optSelected=='foodplants') {
							foodplants.setVisible(val);
						}
						else if( optSelected=='hydroponics') {
							hydroponics.setVisible(val);
						}
				}
			}
		}
		else if(lyr=='Beverages'){
			try {var len = $("#beveragesSelect").val().length;} catch(e) {}
			if (len > 0) {
				for (i = 0; i < len; i++) {
					var optSelected=$("#beveragesSelect").val()[i];
						if( optSelected=='cbrands' ) {
							cbrands.setVisible(val);
						}
				}
			}
		}
		else if(lyr=='Refrigerated'){
			try{ var len = $("#selRefrigerated").val().length; } catch (ex) {}
			if(len > 0){
				for (i = 0; i < len; i++) {
					switch ($("#selRefrigerated").val()[i]) {
						case 'refrigerated':
							refrigeratedlocations.setVisible(val);
							break;
					}
				}
			}
		}
		else if(lyr=='FoodHome'){
				try{ var len = $("#selFoodHome").val().length; } catch (ex) {}
				if (len > 0) {
					for (i = 0; i < len; i++) {
						switch ($("#selFoodHome").val()[i]) {
							case 'supermarkets':
								try{
									var len2 = $("#retailData").val().length;
								} catch (ex) {}
								if(len2 > 0) { 
									for (i = 0; i < len2; i++) { 
										switch ($("#retailData").val()[i]) {
											case 'albertsons':
												albertsons.setVisible(val);
												break;
											case 'kroger':
												kroger.setVisible(val);
												break;
											case 'publix':
												publix.setVisible(val);
												break;
											case 'gianteagle':
												gianteagle.setVisible(val);
												break;
											case 'traderjoes':
												traderjoes.setVisible(val);
												break;
											case 'wholefoods':
												wholefoods.setVisible(val);
												break;
											case 'stores':
												stores.setVisible(val);
												break;
											default:
												break;
										}
									}
								}
								break;
							case 'farmers':
								farmer.setVisible(val);
								break;
							default:
								break;
						}
					}
				}
		}
		else if(lyr=='FoodAway'){
			try{var lenFoodAway = $("#selFoodaway").val().length;}catch(ex){}
			if (lenFoodAway > 0) {
				for (i = 0; i < lenFoodAway; i++) {
					switch ($("#selFoodaway").val()[i]) {
						case 'culver':
							culver.setVisible(val);
							break;
						case 'potbelly':
							potbelly.setVisible(val);
							break;
						case 'thornton':
							thornton.setVisible(val);
							break;
						case 'starbucks':
							starbucks.setVisible(val);
							break;
						case 'raisingcanes':
							raisingcanes.setVisible(val);
							break;
						case 'fiveguys':
							fiveguys.setVisible(val);
							break;
						default:
							break;
					}
				}
			}
		}
		else if(lyr=='FoodSuperMarket'){
			try {var len = $("#selFoodSuperMarket").val().length;} catch(e) {}
			if (len > 0) {
				for (i = 0; i < len; i++) {
					var optSelected=$("#selFoodSuperMarket").val()[i];
						if( optSelected=='aldiSixteen' ) {
							aldiSixteen.setVisible(val);
						}
						else if( optSelected=='aldiSixteenClosed') {
							aldiSixteenClosed.setVisible(val);
						}
						else if( optSelected=='aldiEighteen') {
							aldiEighteen.setVisible(val);
						}
						else if( optSelected=='aldiEighteenNew') {
							aldiEighteenNew.setVisible(val);
						}
				}
			}
		}
		else if (lyr=='Distribution') {
			var len = 0;
			try {len = $("#dcData").val().length;} catch(e) {}
			if (len > 0) {
				for (i = 0; i < len; i++) {
					switch ($("#dcData").val()[i]) {
						case 'mclane':
							mclane.setVisible(val);
							break;
						case 'amazon':
							amazon.setVisible(val);
							break;
						case 'sysco':
							sysco.setVisible(val);
							break;
						case 'robinsonfresh':
							robinsonfresh.setVisible(val);
							break;
						case 'kehe':
							kehe.setVisible(val);
							break;
						case 'vistar':
							vistar.setVisible(val);
							break;
						case 'sygma':
							sygma.setVisible(val);
							break;
						case 'dmadcs':
							dmadcs.setVisible(val);
							break;
						case 'pfgpfs':
							pfgpfs.setVisible(val);
							break;
						case 'usfoods':
							usf.setVisible(val);
							break;
						case 'dma':
							dma.setVisible(val);
							break;
						case 'fedex':
							fedex.setVisible(val);
							break;
						case 'dhl':
							dhl.setVisible(val);
							break;
						case 'usps':
							ups.setVisible(val);
							break;
						default:
							break;
					}
				}
			}
		}
		else if (lyr=='HealthFacilities') {
			var len = 0;
			try {len = $("#healthFacilitiesSel").val().length;} catch(e) {}
			if (len > 0) {
				for (i = 0; i < len; i++) {
					switch ($("#healthFacilitiesSel").val()[i]) {
						case 'asc':
							ascHealth.setVisible(val);
							break;
						case 'dermasolo':
							dermasoloHealth.setVisible(val);
							break;
						case 'dermagroup':
							dermagroupHealth.setVisible(val);
							break;
						case 'plasticsurgerygroup':
							plasticsurgerygroupHealth.setVisible(val);
							break;
						case 'plasticsurgerysolo':
							plasticsurgerysoloHealth.setVisible(val);
							break;
						case 'providers':
							providersHealth.setVisible(val);
							break;
						case 'primary':
							primaryHealth.setVisible(val);
							break;
						case 'dental':
							dentalHealth.setVisible(val);
							break;
						case 'mental':
							mentalHealth.setVisible(val);
							break;
					}
				}
			}
		}
	}
}

function showCrosswalk(value){
	if(value == "active"){
		$("#divCrosswalk").show();
		initCR();
	}
	else{
		$("#divCrosswalk").hide();
		removeLayers();
		// try{map.removeLayer(baseStates);} catch(e){}
		// toggleBaseLayers(null);
		try{baseStates.setVisible(false);}catch(e){}
	}
}

function showVorOpts(value,id) {
	try{
		voronoiPointsSource.clear();
		voronoiPolygonsSource.clear();

		voronoiPoints.set('displayInLayerSwitcher', false);
		voronoiPolygons.set('displayInLayerSwitcher', false);

		voronoiPoints.setVisible(false);
		voronoiPolygons.setVisible(false);

		$("#voronoiPolygonsLegend").remove();
		$("#voronoiPointsLegend").remove();
	}catch(ex){}
	
	try {
		map.removeInteraction(draw);
	} catch (ex) {}
	try {
		map.removeLayer(statesWFSVoronoi);
	} catch (ex) {}
	
	// if($("#cbPrimaryVoronoi").is(":checked"))
		// $("#cbPrimaryVoronoi").click();
	// if($("#cbEnergyVoronoi").is(":checked"))
		// $("#cbEnergyVoronoi").click();
	// if($("#cbOwnVoronoi").is(":checked"))
		// $("#cbOwnVoronoi").click();
	// if($("#cbTptVoronoi").is(":checked"))
		// $("#cbTptVoronoi").click();
	// if($("#cbSchoolsVoronoi").is(":checked"))
		// $("#cbSchoolsVoronoi").click();
	// if($("#cbBanksVoronoi").is(":checked"))
		// $("#cbBanksVoronoi").click();
	// if($("#cbFoodVoronoi").is(":checked"))
		// $("#cbFoodVoronoi").click();
	// if($("#cbBeveragesVoronoi").is(":checked"))
		// $("#cbBeveragesVoronoi").click();
	// if($("#cbDCVoronoi").is(":checked"))
		// $("#cbDCVoronoi").click();
	// if($("#cbRefVoronoi").is(":checked"))
		// $("#cbRefVoronoi").click();
	// if($("#cbFoodHomeVoronoi").is(":checked"))
		// $("#cbFoodHomeVoronoi").click();
	// if($("#cbFoodAwayVoronoi").is(":checked"))
		// $("#cbFoodAwayVoronoi").click();
	// if($("#cbFoodSuperMarketVoronoi").is(":checked"))
		// $("#cbFoodSuperMarketVoronoi").click();
	// if($("#cbVoronoi").is(":checked"))
		// $("#cbVoronoi").click();
	// if($("#cbHealthFacilitiesVoronoi").is(":checked"))
		// $("#cbHealthFacilitiesVoronoi").click();
	
	$("#chkPanPrimary").prop("checked",true);
	$("#chkPanEnergy").prop("checked",true);
	$("#chkPanOwn").prop("checked",true);
	$("#chkPanTpt").prop("checked",true);
	$("#chkPanSchools").prop("checked",true);
	$("#chkPanBanks").prop("checked",true);
	$("#chkPanFood").prop("checked",true);
	$("#chkPanBeverages").prop("checked",true);
	$("#chkPanDC").prop("checked",true);
	$("#chkPanRef").prop("checked",true);
	$("#chkPanFoodHome").prop("checked",true);
	$("#chkPanFoodAway").prop("checked",true);
	$("#chkPanFoodSuperMarket").prop("checked",true);
	$("#chkPan").prop( "checked", true);
	$("#chkPanHealthFacilities").prop( "checked", true);
	$("#chkPanFin").prop( "checked", true);
	
	$("#voronoiControlsFin").hide();
	$("#voroFinAreaDiv").hide();
	$("#voronoiControlsHospital").hide();
	$("#voronoiControlsPrimary").hide();
	$("#voronoiControlsEnergy").hide();
	$("#voroHospitalAreaDiv").hide();
	$("#voroPrimaryAreaDiv").hide();
	$("#voroEnergyAreaDiv").hide();
	$("#voronoiControlsOwn").hide();
	$("#voroOwnAreaDiv").hide();	
	$("#voronoiControlsTpt").hide();
	$("#voroTptAreaDiv").hide();	
	$("#voronoiControlsSchools").hide();
	$("#voroSchoolsAreaDiv").hide();	
	$("#voronoiControlsBanks").hide();
	$("#voroBanksAreaDiv").hide();
	$("#voronoiControlsFood").hide();
	$("#voroFoodAreaDiv").hide();
	$("#voronoiControlsBeverages").hide();
	$("#voroBeveragesAreaDiv").hide();
	$("#voronoiControlsDC").hide();
	$("#voroDCAreaDiv").hide();
	$("#voronoiControlsRef").hide();
	$("#voroRefAreaDiv").hide();
	$("#voronoiControlsFoodHome").hide();
	$("#voroFoodHomeAreaDiv").hide();
	$("#voronoiControlsFoodAway").hide();
	$("#voroFoodAwayAreaDiv").hide();
	$("#voronoiControlsFoodSuperMarket").hide();
	$("#voroFoodSuperMarketAreaDiv").hide();
	$("#voronoiControlsHospital").hide();
	$("#voroHospitalAreaDiv").hide();
	$("#voronoiControlsHealthFacilities").hide();
	$("#voroHealthFacilitiesAreaDiv").hide();

	toggleClusterVor(true,'Distribution'); 
	toggleClusterVor(true,'Refrigerated'); 
	toggleClusterVor(true,'FoodAway'); 
	toggleClusterVor(true,'FoodHome'); 
	toggleClusterVor(true,'FoodSuperMarket'); 
	toggleClusterVor(true,'Food'); 
	toggleClusterVor(true,'Beverages'); 
	toggleClusterVor(true,'Primary'); 
	toggleClusterVor(true,'Energy'); 
	toggleClusterVor(true,'Own'); 
	toggleClusterVor(true,'Tpt'); 
	toggleClusterVor(true,'Schools'); 
	toggleClusterVor(true,'Banks');
	toggleClusterVor(true,'HealthFacilities');
	toggleClusterVor(true,'Health');
	toggleClusterVor(true,'Finance');
	
	if (value == "active") {
		hoverInteraction.setActive(false);      
	} 
	else if (value == "dull") 
	{			
		hoverInteraction.setActive(true);

		try{voronoiPointsSource.clear();}catch(ex){}
		try{voronoiPolygonsSource.clear();}catch(ex){}

		voronoiPoints.set('displayInLayerSwitcher', false);
		voronoiPolygons.set('displayInLayerSwitcher', false);

		voronoiPoints.setVisible(false);
		voronoiPolygons.setVisible(false);
		
		$("#voronoiPolygonsLegend").remove();
		$("#voronoiPointsLegend").remove();
	}
	   
	if (id=='cbPrimaryVoronoi') {
		if (value == "active") {
			toggleClusterVor('WFS','Primary');
			$("#voroPrimaryAreaDiv").show();  
		} else if (value == "dull") {
			$("#voroPrimaryAreaDiv").hide();  
			toggleClusterVor('Cluster','Primary');
			$('#voroPrimaryAreaType').selectpicker('val', 'none');
	   }
	}
	else if (id=='cbEnergyVoronoi') {
		if (value == "active") {
			toggleClusterVor('WFS','Energy'); 
			$("#voroEnergyAreaDiv").show();       
		} else if (value == "dull") {
			$("#voroEnergyAreaDiv").hide();    
			toggleClusterVor('Cluster','Energy');
			$('#voroEnergyAreaType').selectpicker('val', 'none');
	   }
	} 
	else if (id=='cbOwnVoronoi') {
		if (value == "active") {
			toggleClusterVor('WFS','Own'); 
			$("#voroOwnAreaDiv").show();       
		} else if (value == "dull") {
			$("#voroOwnAreaDiv").hide();   
			toggleClusterVor('Cluster','Own');
			$('#voroOwnAreaType').selectpicker('val', 'none');
	   }
	} 
	else if (id=='cbTptVoronoi') {
		if (value == "active") {
			toggleClusterVor('WFS','Tpt'); 
			$("#voroTptAreaDiv").show();       
		} else if (value == "dull") {
			$("#voroTptAreaDiv").hide();     
			toggleClusterVor('Cluster','Tpt');
			$('#voroTptAreaType').selectpicker('val', 'none');
	   }
	} 
	else if (id=='cbSchoolsVoronoi') {
		if (value == "active") {
			toggleClusterVor('WFS','Schools');  
			$("#voroSchoolsAreaDiv").show();      
		} else if (value == "dull") {
			$("#voroSchoolsAreaDiv").hide();
			toggleClusterVor('Cluster','Schools');
			$('#voroSchoolsAreaType').selectpicker('val', 'none');
	   }
	}
	else if (id=='cbBanksVoronoi') {
		if (value == "active") {
			toggleClusterVor('WFS','Banks'); 
			$("#voroBanksAreaDiv").show();
		} else if (value == "dull") {
			$("#voroBanksAreaDiv").hide();
			toggleClusterVor('Cluster','Banks');
			$('#voroBanksAreaType').selectpicker('val', 'none');
	   }
	}
	else if (id=='cbFoodVoronoi') {
		if (value == "active") {
			toggleClusterVor('WFS','Food'); 
			$("#voroFoodAreaDiv").show();
		} else if (value == "dull") {
			$("#voroFoodAreaDiv").hide();
			toggleClusterVor('Cluster','Food');
			$('#voroFoodAreaType').selectpicker('val', 'none');
	   }
	} 
	else if (id=='cbBeveragesVoronoi') {
		if (value == "active") {
			toggleClusterVor('WFS','Beverages');
			$("#voroBeveragesAreaDiv").show();
		} else if (value == "dull") {
			$("#voroBeveragesAreaDiv").hide();
			toggleClusterVor('Cluster','Beverages');	
			$('#voroBeveragesAreaType').selectpicker('val', 'none');
	   }
	}
	else if (id=='cbRefVoronoi') {
		if (value == "active") {
			toggleClusterVor('WFS','Refrigerated');
			$("#voroRefAreaDiv").show();
		} else if (value == "dull") {
			$("#voroRefAreaDiv").hide();
			toggleClusterVor('Cluster','Refrigerated');
			$('#voroRefAreaType').selectpicker('val', 'none');
	   }
	}
	else if (id=='cbFoodHomeVoronoi') {
		if (value == "active") {
			toggleClusterVor('WFS','FoodHome'); 
			$("#voroFoodHomeAreaDiv").show();
		} else if (value == "dull") {
			$("#voroFoodHomeAreaDiv").hide();
			toggleClusterVor('Cluster','FoodHome');
			$('#voroFoodHomeAreaType').selectpicker('val', 'none');
	   }
	} 
	else if (id=='cbFoodAwayVoronoi') {
		if (value == "active") {
			toggleClusterVor('WFS','FoodAway'); 
			$("#voroFoodAwayAreaDiv").show();
		} else if (value == "dull") {
			$("#voroFoodAwayAreaDiv").hide();
			toggleClusterVor('Cluster','FoodAway');
			$('#voroFoodAwayAreaType').selectpicker('val', 'none');
	   }
	} 
	else if (id=='cbFoodSuperMarketVoronoi') {
		if (value == "active") {
			toggleClusterVor('WFS','FoodSuperMarket');
			$("#voroFoodSuperMarketAreaDiv").show();
		} else if (value == "dull") {
			$("#voroFoodSuperMarketAreaDiv").hide();
			toggleClusterVor('Cluster','FoodSuperMarket');
			$('#voroFoodSuperMarketAreaType').selectpicker('val', 'none');
	   }
	}
	else if (id=='cbDCVoronoi') {
		if (value == "active") {
			toggleClusterVor('WFS','Distribution'); 
			$("#voroDCAreaDiv").show();       
		} else if (value == "dull") {
			$("#voroDCAreaDiv").show();       
			toggleClusterVor('Cluster','Distribution');
			$('#voroDCAreaDiv').selectpicker('val', 'none');
	   }
	}
	else if (id=='cbVoronoi') {
		if (value == "active") {
			toggleClusterVor('WFS','Health');
			$("#voroHospitalAreaDiv").show();
		} else if (value == "dull") {
			$("#voroHospitalAreaDiv").hide();
			toggleClusterVor('Cluster','Health');
			$('#voroAreaType').selectpicker('val', 'none');
		}
	}
	if (id=='cbHealthFacilitiesVoronoi') {
		if (value == "active") {
			toggleClusterVor('WFS','HealthFacilities');
			$("#voroHealthFacilitiesAreaDiv").show();
		} else if (value == "dull") {
			$("#voroHealthFacilitiesAreaDiv").hide();
			toggleClusterVor('Cluster','HealthFacilities');
			$('#voroHealthFacilitiesAreaType').selectpicker('val', 'none');
	   }
	}
	if (id=='cbFinVoronoi') {
		if (value == "active") {
			toggleClusterVor('WFS','Finance');
			$("#voroFinAreaDiv").show();
		} else if (value == "dull") {
			$("#voroFinAreaDiv").hide();
			toggleClusterVor('Cluster','Finance');
			$('#voroFinAreaType').selectpicker('val', 'none');
	   }
	}
}

function activateVorArea(val) {
	try{
		voronoiPointsSource.clear();
		voronoiPolygonsSource.clear();

		voronoiPoints.set('displayInLayerSwitcher', false);
		voronoiPolygons.set('displayInLayerSwitcher', false);
						
		voronoiPoints.setVisible(false);
		voronoiPolygons.setVisible(false);
		
		$("#voronoiPolygonsLegend").remove();
		$("#voronoiPointsLegend").remove();
	}catch(ex){}
	
	try {
		map.removeInteraction(draw);
	} catch (ex) {}
	try {
		map.removeLayer(statesWFSVoronoi);
	} catch (ex) {}

	toggleClusterVor(true,'Distribution'); 
	toggleClusterVor(true,'Refrigerated'); 
	toggleClusterVor(true,'FoodAway'); 
	toggleClusterVor(true,'FoodHome'); 
	toggleClusterVor(true,'FoodSuperMarket'); 
	toggleClusterVor(true,'Food'); 
	toggleClusterVor(true,'Beverages'); 
	toggleClusterVor(true,'Primary'); 
	toggleClusterVor(true,'Energy'); 
	toggleClusterVor(true,'Own'); 
	toggleClusterVor(true,'Tpt'); 
	toggleClusterVor(true,'Schools'); 
	toggleClusterVor(true,'Banks');
	toggleClusterVor(true,'Finance');
	toggleClusterVor(true,'HealthFacilities');
	
	if ($("#voroAreaType").val() == "none" || $("#voroDCAreaType").val() == "none" || $("#voroRefAreaType").val() == "none" || $("#voroFoodAwayAreaType").val() == "none" || $("#voroFoodHomeAreaType").val() == "none" || $("#voroFoodSuperMarketAreaType").val() == "none" || $("#voroFoodAreaType").val() == "none" || $("#voroBeveragesAreaType").val() == "none" || $("#voroPrimaryAreaType").val() == "none" || $("#voroEnergyAreaType").val() == "none" || $("#voroOwnAreaType").val() == "none" || $("#voroTptAreaType").val() == "none" || $("#voroSchoolsAreaType").val() == "none" || $("#voroBanksAreaType").val() == "none" || $("#voroHealthFacilitiesAreaType").val() == "none" || $("#voroFinAreaType").val() == "none") {
	}
	if ($("#voroAreaType").val() == "CAS" || $("#voroDCAreaType").val() == "CAS" || $("#voroRefAreaType").val() == "CAS" || $("#voroFoodAwayAreaType").val() == "CAS" || $("#voroFoodHomeAreaType").val() == "CAS" || $("#voroFoodSuperMarketAreaType").val() == "CAS" || $("#voroFoodAreaType").val() == "CAS" || $("#voroBeveragesAreaType").val() == "CAS" || $("#voroPrimaryAreaType").val() == "CAS" || $("#voroEnergyAreaType").val() == "CAS" || $("#voroOwnAreaType").val() == "CAS" || $("#voroTptAreaType").val() == "CAS" || $("#voroSchoolsAreaType").val() == "CAS" || $("#voroBanksAreaType").val() == "CAS" || $("#voroHealthFacilitiesAreaType").val() == "CAS" || $("#voroFinAreaType").val() == "CAS") {
		addInteraction('Box');
	} if ($("#voroAreaType").val() == "state" || $("#voroDCAreaType").val() == "state" || $("#voroRefAreaType").val() == "state" || $("#voroFoodAwayAreaType").val() == "state" || $("#voroFoodHomeAreaType").val() == "state" || $("#voroFoodSuperMarketAreaType").val() == "state" || $("#voroFoodAreaType").val() == "state" || $("#voroBeveragesAreaType").val() == "state" || $("#voroPrimaryAreaType").val() == "state" || $("#voroEnergyAreaType").val() == "state" || $("#voroOwnAreaType").val() == "state" || $("#voroTptAreaType").val() == "state" || $("#voroSchoolsAreaType").val() == "state" || $("#voroBanksAreaType").val() == "state" || $("#voroHealthFacilitiesAreaType").val() == "state" || $("#voroFinAreaType").val() == "state") {
		addStatesVoro('VoronoiStates','states', true);
	} if ($("#voroAreaType").val() == "full" || $("#voroDCAreaType").val() == "full" || $("#voroRefAreaType").val() == "full" || $("#voroFoodAwayAreaType").val() == "full" || $("#voroFoodHomeAreaType").val() == "full" || $("#voroFoodSuperMarketAreaType").val() == "full" || $("#voroFoodAreaType").val() == "full" || $("#voroBeveragesAreaType").val() == "full" || $("#voroPrimaryAreaType").val() == "full" || $("#voroEnergyAreaType").val() == "full" || $("#voroOwnAreaType").val() == "full" || $("#voroTptAreaType").val() == "full" || $("#voroSchoolsAreaType").val() == "full" || $("#voroBanksAreaType").val() == "full" || $("#voroHealthFacilitiesAreaType").val() == "full" || $("#voroFinAreaType").val() == "full") {
		FullMap();
	}
}

function FullMap() {
    // extentVoronoi = map.getView().calculateExtent(map.getSize());
    extentVoronoi = ol.proj.transformExtent([-125.052, 24.3988, -66.6608, 49.5087], 'EPSG:4326', 'EPSG:3857');
	selectedExtentForVoronoi = extentVoronoi;

	var options = {
		bbox: extentVoronoi
	};
	var turfFeatures = [];
	var features = getFeaturesInSelection(map.getView().calculateExtent(map.getSize()));
	for (j = 0; j < features.length; j++){
		for (i = 0; i < features[j].length; i++){
			turfFeatures.push(turf.point(features[j][i].getGeometry().getCoordinates(),features[j][i].S));
		}
		voronoiPointsSource.addFeatures(features[j]);
	}
	var fc = turf.featureCollection(turfFeatures);
	var voronoi = turf.voronoi(fc, options);
	voronoiPolygonsSource = new ol.source.Vector({
		features: (new ol.format.GeoJSON()).readFeatures(voronoi)
	});
	
	showRespectiveOpts(false);
}

function handleVorRamp(value, condition)
{
	var pointFeatures = voronoiPoints.getSource().getFeatures();
	var polygonFeatures = voronoiPolygons.getSource().getFeatures();
	var firstLayer = pointFeatures[0].S.features[0].c.substr(0, pointFeatures[0].S.features[0].c.indexOf('.'));
	if(value=='dull'){
		for(i=0; i < pointFeatures.length; i++)
		{
			try
			{
				if(pointFeatures[i].S.features[0].c.substr(0, pointFeatures[i].S.features[0].c.indexOf('.')) == firstLayer)
				{
					var voronoiPin = new Image();
					voronoiPin.src = 'data:image/svg+xml,' + escape('<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="' + $("#strokePin").val() + '" height="' + $("#strokePin").val() + '" viewBox="0 0 30 30" enable-background="new 0 0 30 30" xml:space="preserve">'+    
					'<path fill="' + $("#voronoiPin").val() + '" d="M22.906,10.438c0,4.367-6.281,14.312-7.906,17.031c-1.719-2.75-7.906-12.665-7.906-17.031S10.634,2.531,15,2.531S22.906,6.071,22.906,10.438z"/>'+
					'<circle fill="' + $("#voronoiPinCircle").val() + '" cx="15" cy="10.677" r="3.291"/></svg>');
					pointFeatures[i].setStyle(new ol.style.Style({
						image: new ol.style.Icon({
							img: voronoiPin,
							imgSize:[$("#strokePin").val() , $("#strokePin").val()]
						})
					}));
				}
				else{
					var voronoiPin = new Image();
					voronoiPin.src = 'data:image/svg+xml,' + escape('<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="' + $("#strokePin").val() + '" height="' + $("#strokePin").val() + '" viewBox="0 0 30 30" enable-background="new 0 0 30 30" xml:space="preserve">'+    
					'<path fill="' + $("#voronoiPinTwo").val() + '" d="M22.906,10.438c0,4.367-6.281,14.312-7.906,17.031c-1.719-2.75-7.906-12.665-7.906-17.031S10.634,2.531,15,2.531S22.906,6.071,22.906,10.438z"/>'+
					'<circle fill="' + $("#voronoiPinCircle").val() + '" cx="15" cy="10.677" r="3.291"/></svg>');
					pointFeatures[i].setStyle(new ol.style.Style({
						image: new ol.style.Icon({
							img: voronoiPin,
							imgSize:[$("#strokePin").val() , $("#strokePin").val()]
						})
					}));			
				}
				for(j=0; j < polygonFeatures.length; j++)
				{
					var coords = pointFeatures[i].getGeometry().getCoordinates();
					var polygonGeometry = polygonFeatures[j].getGeometry();
					var randOne = rampFirstTheme[Math.floor(Math.random() * rampFirstTheme.length)];
					var randTwo = rampSecondTheme[Math.floor(Math.random() * rampSecondTheme.length)];
					if(polygonGeometry.intersectsCoordinate(coords))
					{
						if(pointFeatures[i].S.features[0].c.substr(0, pointFeatures[i].S.features[0].c.indexOf('.')) != firstLayer)
						{
							polygonFeatures[j].setStyle(new ol.style.Style({
								fill: new ol.style.Fill({
									color: $("#voronoiPolygonTwo").val()
								}),
								stroke: new ol.style.Stroke({
									color: '#FFFFFF',
									width: $("#strokeVoronoi").val()
								})
							}));
						}
						else
						{
							polygonFeatures[j].setStyle(new ol.style.Style({
								fill: new ol.style.Fill({
									color: $("#voronoiPolygon").val()
								}),
								stroke: new ol.style.Stroke({
									color: '#FFFFFF',
									width: $("#strokeVoronoi").val()
								})
							}));
						}
					}
				}
			}catch(e){
				pointFeatures[i].setStyle(new ol.style.Style({
					image: new ol.style.Icon({
						img: voronoiPin,
						imgSize:[$("#strokePin").val() , $("#strokePin").val()]
					})
				}));
			}
		}
	}
	if(value=='active'){
		for(i=0; i < pointFeatures.length; i++)
		{
			try
			{
				if(pointFeatures[i].S.features[0].c.substr(0, pointFeatures[i].S.features[0].c.indexOf('.')) == firstLayer)
				{
					var voronoiPin = new Image();
					voronoiPin.src = 'data:image/svg+xml,' + escape('<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="' + $("#strokePin").val() + '" height="' + $("#strokePin").val() + '" viewBox="0 0 30 30" enable-background="new 0 0 30 30" xml:space="preserve">'+    
					'<path fill="' + $("#voronoiPin").val() + '" d="M22.906,10.438c0,4.367-6.281,14.312-7.906,17.031c-1.719-2.75-7.906-12.665-7.906-17.031S10.634,2.531,15,2.531S22.906,6.071,22.906,10.438z"/>'+
					'<circle fill="' + $("#voronoiPinCircle").val() + '" cx="15" cy="10.677" r="3.291"/></svg>');
					pointFeatures[i].setStyle(new ol.style.Style({
						image: new ol.style.Icon({
							img: voronoiPin,
							imgSize:[$("#strokePin").val() , $("#strokePin").val()]
						})
					}));
				}
				else{
					var voronoiPin = new Image();
					voronoiPin.src = 'data:image/svg+xml,' + escape('<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="' + $("#strokePin").val() + '" height="' + $("#strokePin").val() + '" viewBox="0 0 30 30" enable-background="new 0 0 30 30" xml:space="preserve">'+    
					'<path fill="' + $("#voronoiPinTwo").val() + '" d="M22.906,10.438c0,4.367-6.281,14.312-7.906,17.031c-1.719-2.75-7.906-12.665-7.906-17.031S10.634,2.531,15,2.531S22.906,6.071,22.906,10.438z"/>'+
					'<circle fill="' + $("#voronoiPinCircle").val() + '" cx="15" cy="10.677" r="3.291"/></svg>');
					pointFeatures[i].setStyle(new ol.style.Style({
						image: new ol.style.Icon({
							img: voronoiPin,
							imgSize:[$("#strokePin").val() , $("#strokePin").val()]
						})
					}));			
				}
				for(j=0; j < polygonFeatures.length; j++)
				{
					var coords = pointFeatures[i].getGeometry().getCoordinates();
					var polygonGeometry = polygonFeatures[j].getGeometry();
					var randOne = rampFirstTheme[Math.floor(Math.random() * rampFirstTheme.length)];
					var randTwo = rampSecondTheme[Math.floor(Math.random() * rampSecondTheme.length)];
					if(polygonGeometry.intersectsCoordinate(coords))
					{
						if(pointFeatures[i].S.features[0].c.substr(0, pointFeatures[i].S.features[0].c.indexOf('.')) != firstLayer)
						{
							polygonFeatures[j].setStyle(new ol.style.Style({
								fill: new ol.style.Fill({
									color: convertHex(randOne,0.8)
								}),
								stroke: new ol.style.Stroke({
									color: '#FFFFFF',
									width: $("#strokeVoronoi").val()
								})
							}));
						}
						else
						{
							polygonFeatures[j].setStyle(new ol.style.Style({
								fill: new ol.style.Fill({
									color: convertHex(randTwo,0.8)
								}),
								stroke: new ol.style.Stroke({
									color: '#FFFFFF',
									width: $("#strokeVoronoi").val()
								})
							}));
						}
					}
				}
			}catch(e){
				pointFeatures[i].setStyle(new ol.style.Style({
					image: new ol.style.Icon({
						img: voronoiPin,
						imgSize:[$("#strokePin").val() , $("#strokePin").val()]
					})
				}));
			}
		}
	}
}

function showRespectiveOpts(val)
{
	$("#voronoiPolygonsLegend").remove();
	$("#voronoiPointsLegend").remove();
	voronoiPolygons.setSource(voronoiPolygonsSource);
	voronoiPoints.setSource(voronoiPointsSource);
	
	updateVoronoiStyle(val);
	
	if(!user)
	{
		if ($("#voroAreaType").val() == "state" || $("#voroDCAreaType").val() == "state" || $("#voroRefAreaType").val() == "state" || $("#voroFoodAwayAreaType").val() == "state" || $("#voroFoodHomeAreaType").val() == "state" || $("#voroFoodSuperMarketAreaType").val() == "state" || $("#voroFoodAreaType").val() == "state" || $("#voroBeveragesAreaType").val() == "state" || $("#voroPrimaryAreaType").val() == "state" || $("#voroEnergyAreaType").val() == "state" || $("#voroOwnAreaType").val() == "state" || $("#voroTptAreaType").val() == "state" || $("#voroSchoolsAreaType").val() == "state" || $("#voroBanksAreaType").val() == "state") {
			voronoiPolygons.on('precompose', function(event) {
				var ctx = event.context;
				var vecCtx = event.vectorContext;
				ctx.save();
				vecCtx.setStyle(new ol.style.Style({fill: new ol.style.Fill({color: 'rgba(0,0,0,0)'})}), null);
				vecCtx.drawGeometry(selectedExtentForVoronoi);

				ctx.clip();
				});

			voronoiPolygons.on('postcompose', function(event) {
				var ctx = event.context;
				ctx.restore();
			});
			
			// voronoiPoints.on('precompose', function(event) {
				// var ctx = event.context;
				// var vecCtx = event.vectorContext;
				// ctx.save();
				// vecCtx.setStyle(new ol.style.Style({fill: new ol.style.Fill({color: 'rgba(0,0,0,0)'})}), null);
				// vecCtx.drawGeometry(selectedExtentForVoronoi);

				// ctx.clip();
				// });

			// voronoiPoints.on('postcompose', function(event) {
				// var ctx = event.context;
				// ctx.restore();
			// });
		}

		if ($("#voroAreaType").val() == "full" || $("#voroDCAreaType").val() == "full" || $("#voroRefAreaType").val() == "full" || $("#voroFoodAwayAreaType").val() == "full" || $("#voroFoodHomeAreaType").val() == "full" || $("#voroFoodSuperMarketAreaType").val() == "full" || $("#voroFoodAreaType").val() == "full" || $("#voroBeveragesAreaType").val() == "full" || $("#voroPrimaryAreaType").val() == "full" || $("#voroEnergyAreaType").val() == "full" || $("#voroOwnAreaType").val() == "full" || $("#voroTptAreaType").val() == "full" || $("#voroSchoolsAreaType").val() == "full" || $("#voroBanksAreaType").val() == "full") {
			voronoiPolygons.on('precompose', function(event) {
				var ctx = event.context;
				var vecCtx = event.vectorContext;
				ctx.save();
				vecCtx.setStyle(new ol.style.Style({fill: new ol.style.Fill({color: 'rgba(0,0,0,0)'})}), null);
				vecCtx.drawGeometry(usFullGeometry);

				ctx.clip();
			});

			voronoiPolygons.on('postcompose', function(event) {
				var ctx = event.context;
				ctx.restore();
			});
			
			voronoiPoints.on('precompose', function(event) {
				var ctx = event.context;
				var vecCtx = event.vectorContext;
				ctx.save();
				vecCtx.setStyle(new ol.style.Style({fill: new ol.style.Fill({color: 'rgba(0,0,0,0)'})}), null);
				vecCtx.drawGeometry(usFullGeometry);

				ctx.clip();
				});

			voronoiPoints.on('postcompose', function(event) {
				var ctx = event.context;
				ctx.restore();
			});
		}
	}
	
	voronoiPoints.set('displayInLayerSwitcher', true);
	voronoiPolygons.set('displayInLayerSwitcher', true);

	voronoiPoints.setVisible(true);
	voronoiPolygons.setVisible(true);
	
    addLegendContent('<div id="voronoiPointsLegend"><table><tr><td><a id="voronoiPointsImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="voronoiPoints" onchange="handleLegend($(this));" checked/></td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td>Voronoi Points</td></tr></table></div>', true, "legendData");
	
    addLegendContent('<div id="voronoiPolygonsLegend"><table><tr><td><a id="voronoiPolygonsImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="voronoiPolygons" onchange="handleLegend($(this));" checked/></td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td>Voronoi Polygons</td></tr></table></div>', true, "legendData");
	
	if ($('#cbDCVoronoi').is(":checked")) {
		$("#voronoiControlsDC").show();
		if(pan)
			$( "#chkPanDC" ).prop( "checked", true );
		toggleClusterVor(false,'Distribution');
		toggleClusterVor(true,'Refrigerated'); 
		toggleClusterVor(true,'FoodAway'); 
		toggleClusterVor(true,'FoodHome'); 
		toggleClusterVor(true,'FoodSuperMarket'); 
		toggleClusterVor(true,'Food'); 
		toggleClusterVor(true,'Beverages'); 
		toggleClusterVor(true,'Primary'); 
		toggleClusterVor(true,'Energy'); 
		toggleClusterVor(true,'Own'); 
		toggleClusterVor(true,'Tpt'); 
		toggleClusterVor(true,'Schools'); 
		toggleClusterVor(true,'Banks'); 
		toggleClusterVor(true,'Finance'); 
		toggleClusterVor(true,'HealthFacilities');
		toggleClusterVor(true,'Health');
	}
	else if ($('#cbRefVoronoi').is(":checked")) {
		$("#voronoiControlsRef").show();
		if(pan)
			$( "#chkPanRef" ).prop( "checked", true );
		toggleClusterVor(true,'Distribution');
		toggleClusterVor(false,'Refrigerated'); 
		toggleClusterVor(true,'FoodAway'); 
		toggleClusterVor(true,'FoodHome'); 
		toggleClusterVor(true,'FoodSuperMarket'); 
		toggleClusterVor(true,'Food'); 
		toggleClusterVor(true,'Beverages'); 
		toggleClusterVor(true,'Primary'); 
		toggleClusterVor(true,'Energy'); 
		toggleClusterVor(true,'Own'); 
		toggleClusterVor(true,'Tpt'); 
		toggleClusterVor(true,'Schools'); 
		toggleClusterVor(true,'Banks'); 
		toggleClusterVor(true,'Finance'); 
		toggleClusterVor(true,'HealthFacilities');
		toggleClusterVor(true,'Health');
	}
	else if ($('#cbFoodAwayVoronoi').is(":checked")) {
		$("#voronoiControlsFoodAway").show();
		if(pan)
			$( "#chkPanFoodAway" ).prop( "checked", true );
		toggleClusterVor(true,'Distribution');
		toggleClusterVor(true,'Refrigerated'); 
		toggleClusterVor(false,'FoodAway'); 
		toggleClusterVor(true,'FoodHome'); 
		toggleClusterVor(true,'FoodSuperMarket'); 
		toggleClusterVor(true,'Food'); 
		toggleClusterVor(true,'Beverages'); 
		toggleClusterVor(true,'Primary'); 
		toggleClusterVor(true,'Energy'); 
		toggleClusterVor(true,'Own'); 
		toggleClusterVor(true,'Tpt'); 
		toggleClusterVor(true,'Schools'); 
		toggleClusterVor(true,'Banks'); 
		toggleClusterVor(true,'Finance'); 
		toggleClusterVor(true,'HealthFacilities');
		toggleClusterVor(true,'Health');
	}
	else if ($('#cbFoodHomeVoronoi').is(":checked")) {
		$("#voronoiControlsFoodHome").show();
		if(pan)
			$( "#chkPanFoodHome" ).prop( "checked", true );
		toggleClusterVor(true,'Distribution');
		toggleClusterVor(true,'Refrigerated'); 
		toggleClusterVor(true,'FoodAway'); 
		toggleClusterVor(false,'FoodHome'); 
		toggleClusterVor(true,'FoodSuperMarket'); 
		toggleClusterVor(true,'Food'); 
		toggleClusterVor(true,'Beverages'); 
		toggleClusterVor(true,'Primary'); 
		toggleClusterVor(true,'Energy'); 
		toggleClusterVor(true,'Own'); 
		toggleClusterVor(true,'Tpt'); 
		toggleClusterVor(true,'Schools'); 
		toggleClusterVor(true,'Banks'); 
		toggleClusterVor(true,'Finance'); 
		toggleClusterVor(true,'HealthFacilities');
		toggleClusterVor(true,'Health');
	}
	else if ($('#cbFoodSuperMarketVoronoi').is(":checked")) {
		$("#voronoiControlsFoodSuperMarket").show();
		if(pan)
			$( "#chkPanFoodSuperMarket" ).prop( "checked", true );
		toggleClusterVor(true,'Distribution');
		toggleClusterVor(true,'Refrigerated'); 
		toggleClusterVor(true,'FoodAway'); 
		toggleClusterVor(true,'FoodHome'); 
		toggleClusterVor(false,'FoodSuperMarket'); 
		toggleClusterVor(true,'Food'); 
		toggleClusterVor(true,'Beverages'); 
		toggleClusterVor(true,'Primary'); 
		toggleClusterVor(true,'Energy'); 
		toggleClusterVor(true,'Own'); 
		toggleClusterVor(true,'Tpt'); 
		toggleClusterVor(true,'Schools'); 
		toggleClusterVor(true,'Banks'); 
		toggleClusterVor(true,'Finance'); 
		toggleClusterVor(true,'HealthFacilities');
		toggleClusterVor(true,'Health');
	}
	else if ($('#cbFoodVoronoi').is(":checked")) {
		$("#voronoiControlsFood").show();
		if(pan)
			$( "#chkPanFood" ).prop( "checked", true );
		toggleClusterVor(true,'Distribution');
		toggleClusterVor(true,'Refrigerated'); 
		toggleClusterVor(true,'FoodAway'); 
		toggleClusterVor(true,'FoodHome'); 
		toggleClusterVor(true,'FoodSuperMarket'); 
		toggleClusterVor(false,'Food'); 
		toggleClusterVor(true,'Beverages'); 
		toggleClusterVor(true,'Primary'); 
		toggleClusterVor(true,'Energy'); 
		toggleClusterVor(true,'Own'); 
		toggleClusterVor(true,'Tpt'); 
		toggleClusterVor(true,'Schools'); 
		toggleClusterVor(true,'Banks'); 
		toggleClusterVor(true,'Finance'); 
		toggleClusterVor(true,'HealthFacilities');
		toggleClusterVor(true,'Health');
	}
	else if ($('#cbBeveragesVoronoi').is(":checked")) {
		$("#voronoiControlsBeverages").show();
		if(pan)
			$( "#chkPanBeverages" ).prop( "checked", true );
		toggleClusterVor(true,'Distribution');
		toggleClusterVor(true,'Refrigerated'); 
		toggleClusterVor(true,'FoodAway'); 
		toggleClusterVor(true,'FoodHome'); 
		toggleClusterVor(true,'FoodSuperMarket'); 
		toggleClusterVor(true,'Food'); 
		toggleClusterVor(false,'Beverages'); 
		toggleClusterVor(true,'Primary'); 
		toggleClusterVor(true,'Energy'); 
		toggleClusterVor(true,'Own'); 
		toggleClusterVor(true,'Tpt'); 
		toggleClusterVor(true,'Schools'); 
		toggleClusterVor(true,'Banks'); 
		toggleClusterVor(true,'Finance'); 
		toggleClusterVor(true,'HealthFacilities');
		toggleClusterVor(true,'Health');
	}
	else if ($('#cbPrimaryVoronoi').is(":checked")) {
		$("#voronoiControlsPrimary").show();
		if(pan)
			$( "#chkPanPrimary" ).prop( "checked", true );
		toggleClusterVor(true,'Distribution');
		toggleClusterVor(true,'Refrigerated'); 
		toggleClusterVor(true,'FoodAway'); 
		toggleClusterVor(true,'FoodHome'); 
		toggleClusterVor(true,'FoodSuperMarket'); 
		toggleClusterVor(true,'Food'); 
		toggleClusterVor(true,'Beverages'); 
		toggleClusterVor(false,'Primary'); 
		toggleClusterVor(true,'Energy'); 
		toggleClusterVor(true,'Own'); 
		toggleClusterVor(true,'Tpt'); 
		toggleClusterVor(true,'Schools'); 
		toggleClusterVor(true,'Banks');
		toggleClusterVor(true,'Finance');
		toggleClusterVor(true,'HealthFacilities');
		toggleClusterVor(true,'Health'); 
	}
	else if ($('#cbEnergyVoronoi').is(":checked")) {
		$("#voronoiControlsEnergy").show();
		if(pan)
			$( "#chkPanEnergy" ).prop( "checked", true );
		toggleClusterVor(true,'Distribution');
		toggleClusterVor(true,'Refrigerated'); 
		toggleClusterVor(true,'FoodAway'); 
		toggleClusterVor(true,'FoodHome'); 
		toggleClusterVor(true,'FoodSuperMarket'); 
		toggleClusterVor(true,'Food'); 
		toggleClusterVor(true,'Beverages'); 
		toggleClusterVor(true,'Primary'); 
		toggleClusterVor(false,'Energy'); 
		toggleClusterVor(true,'Own'); 
		toggleClusterVor(true,'Tpt'); 
		toggleClusterVor(true,'Schools'); 
		toggleClusterVor(true,'Banks');
		toggleClusterVor(true,'Finance');
		toggleClusterVor(true,'HealthFacilities'); 
		toggleClusterVor(true,'Health');
	}
	else if ($('#cbOwnVoronoi').is(":checked")) {
		$("#voronoiControlsOwn").show();
		if(pan)
			$( "#chkPanOwn" ).prop( "checked", true );
		toggleClusterVor(true,'Distribution');
		toggleClusterVor(true,'Refrigerated'); 
		toggleClusterVor(true,'FoodAway'); 
		toggleClusterVor(true,'FoodHome'); 
		toggleClusterVor(true,'FoodSuperMarket'); 
		toggleClusterVor(true,'Food'); 
		toggleClusterVor(true,'Beverages'); 
		toggleClusterVor(true,'Primary'); 
		toggleClusterVor(true,'Energy'); 
		toggleClusterVor(false,'Own'); 
		toggleClusterVor(true,'Tpt'); 
		toggleClusterVor(true,'Schools'); 
		toggleClusterVor(true,'Banks');
		toggleClusterVor(true,'Finance'); 
		toggleClusterVor(true,'HealthFacilities');
		toggleClusterVor(true,'Health');
	}
	else if ($('#cbTptVoronoi').is(":checked")) {
		$("#voronoiControlsTpt").show();
		if(pan)
			$( "#chkPanTpt" ).prop( "checked", true );
		toggleClusterVor(true,'Distribution');
		toggleClusterVor(true,'Refrigerated'); 
		toggleClusterVor(true,'FoodAway'); 
		toggleClusterVor(true,'FoodHome'); 
		toggleClusterVor(true,'FoodSuperMarket'); 
		toggleClusterVor(true,'Food'); 
		toggleClusterVor(true,'Beverages'); 
		toggleClusterVor(true,'Primary'); 
		toggleClusterVor(true,'Energy'); 
		toggleClusterVor(true,'Own'); 
		toggleClusterVor(false,'Tpt'); 
		toggleClusterVor(true,'Schools'); 
		toggleClusterVor(true,'Banks');
		toggleClusterVor(true,'Finance'); 
		toggleClusterVor(true,'HealthFacilities');
		toggleClusterVor(true,'Health');
	}
	else if ($('#cbSchoolsVoronoi').is(":checked")) {
		$("#voronoiControlsSchools").show();
		if(pan)
			$( "#chkPanSchools" ).prop( "checked", true );
		toggleClusterVor(true,'Distribution');
		toggleClusterVor(true,'Refrigerated'); 
		toggleClusterVor(true,'FoodAway'); 
		toggleClusterVor(true,'FoodHome'); 
		toggleClusterVor(true,'FoodSuperMarket'); 
		toggleClusterVor(true,'Food'); 
		toggleClusterVor(true,'Beverages'); 
		toggleClusterVor(true,'Primary'); 
		toggleClusterVor(true,'Energy'); 
		toggleClusterVor(true,'Own'); 
		toggleClusterVor(true,'Tpt'); 
		toggleClusterVor(false,'Schools'); 
		toggleClusterVor(true,'Banks'); 
		toggleClusterVor(true,'Finance'); 
		toggleClusterVor(true,'HealthFacilities');
		toggleClusterVor(true,'Health');
	}
	else if ($('#cbBanksVoronoi').is(":checked")) {
		$("#voronoiControlsBanks").show();
		if(pan)
			$( "#chkPanBanks" ).prop( "checked", true );
		toggleClusterVor(true,'Distribution');
		toggleClusterVor(true,'Refrigerated'); 
		toggleClusterVor(true,'FoodAway'); 
		toggleClusterVor(true,'FoodHome'); 
		toggleClusterVor(true,'FoodSuperMarket'); 
		toggleClusterVor(true,'Food'); 
		toggleClusterVor(true,'Beverages'); 
		toggleClusterVor(true,'Primary'); 
		toggleClusterVor(true,'Energy'); 
		toggleClusterVor(true,'Own'); 
		toggleClusterVor(true,'Tpt'); 
		toggleClusterVor(true,'Schools'); 
		toggleClusterVor(true,'Finance'); 
		toggleClusterVor(false,'Banks'); 
		toggleClusterVor(true,'HealthFacilities');
		toggleClusterVor(true,'Health');
	}
	else if ($('#cbFinVoronoi').is(":checked")) {
		$("#voronoiControlsFin").show();
		if(pan)
			$( "#chkPanFin" ).prop( "checked", true );
		toggleClusterVor(true,'Distribution');
		toggleClusterVor(true,'Refrigerated'); 
		toggleClusterVor(true,'FoodAway'); 
		toggleClusterVor(true,'FoodHome'); 
		toggleClusterVor(true,'FoodSuperMarket'); 
		toggleClusterVor(true,'Food'); 
		toggleClusterVor(true,'Beverages'); 
		toggleClusterVor(true,'Primary'); 
		toggleClusterVor(true,'Energy'); 
		toggleClusterVor(true,'Own'); 
		toggleClusterVor(true,'Tpt'); 
		toggleClusterVor(true,'Schools'); 
		toggleClusterVor(true,'Banks'); 
		toggleClusterVor(false,'Finance'); 
		toggleClusterVor(true,'HealthFacilities');
		toggleClusterVor(true,'Health');
	}
	else if ($('#cbHealthFacilitiesVoronoi').is(":checked")) {
		$("#voronoiControlsHealthFacilities").show();
		if(pan)
			$( "#chkPanHealthFacilities" ).prop( "checked", true );
		toggleClusterVor(true,'Distribution');
		toggleClusterVor(true,'Refrigerated'); 
		toggleClusterVor(true,'FoodAway'); 
		toggleClusterVor(true,'FoodHome'); 
		toggleClusterVor(true,'FoodSuperMarket'); 
		toggleClusterVor(true,'Food'); 
		toggleClusterVor(true,'Beverages'); 
		toggleClusterVor(true,'Primary'); 
		toggleClusterVor(true,'Energy'); 
		toggleClusterVor(true,'Own'); 
		toggleClusterVor(true,'Tpt'); 
		toggleClusterVor(true,'Schools'); 
		toggleClusterVor(true,'Banks');
		toggleClusterVor(true,'Finance');
		toggleClusterVor(false,'HealthFacilities');
		toggleClusterVor(true,'Health');
	}
	else if ($('#cbVoronoi').is(":checked")) {
		$("#voronoiControlsHospital").show();
		if(pan)
			$( "#voronoiControlsHospital" ).prop( "checked", true );
		toggleClusterVor(true,'Distribution');
		toggleClusterVor(true,'Refrigerated'); 
		toggleClusterVor(true,'FoodAway'); 
		toggleClusterVor(true,'FoodHome'); 
		toggleClusterVor(true,'FoodSuperMarket'); 
		toggleClusterVor(true,'Food'); 
		toggleClusterVor(true,'Beverages'); 
		toggleClusterVor(true,'Primary'); 
		toggleClusterVor(true,'Energy'); 
		toggleClusterVor(true,'Own'); 
		toggleClusterVor(true,'Tpt'); 
		toggleClusterVor(true,'Schools'); 
		toggleClusterVor(true,'Banks');
		toggleClusterVor(true,'Finance');
		toggleClusterVor(true,'HealthFacilities');
		toggleClusterVor(false,'Health');
	}
}

function startShippingAnimation(val,traffic,state) {/**/
	var ext = map.getView().calculateExtent(map.getSize());
	if(val == "eggplants") {
		function getIntersection(traffic,stateName){
			features = shipping.getSource().getFeatures();
			if(features.length>0) {
			var namesArray=[]; 
			var originsArray=[];
			if(traffic=="in"){
				destFlag=0;
				origins=[];
				for (var i = 0; i < features.length; i++) {
					var origLat;
					var origLon;
					var targLat;
					var targLon;
					var mode;
					var ktons;
					var origin=features[i].get('origin');
					var destination=features[i].get('destination');
					if(destination==stateName && origin!=stateName) {
						var valueToPush = new Array();
						if(destFlag==0)	{
							destLat=features[i].get('dest_lat');
							destLon=features[i].get('dest_lon');
							targetGeo = projection([destLon, destLat]);
							targetName = features[i].get('destination');
							destFlag++;
						}
						origLat=features[i].get('orig_lat');
						origLon=features[i].get('orig_lon');
						name=features[i].get('origin');
						if(originsArray.indexOf(name)<= -1) {
							originsArray.push(name);
							origins.push({
								coord: projection([origLon, origLat]),
								name: name
							});
						}
					}
				}
				if(destFlag==0)
					toastr.error("No data found for this Mode of Transport");
				else
					drawfromTargets(targetName, targetGeo, origins);
			}
			else if(traffic=="out"){
				origFlag=0;
				targets=[];
				namesArray=[]; 
				for (var i = 0; i < features.length; i++) {
					var origLat;
					var origLon;
					var targLat;
					var targLon;
					var mode;
					var ktons;
					var origin=features[i].get('origin');
					var destination=features[i].get('destination');
					if(origin==stateName && destination!=stateName) {
						var valueToPush = new Array();
						if(origFlag==0)	{
							origLat=features[i].get('orig_lat');
							origLon=features[i].get('orig_lon');
							sourceGeo = projection([origLon, origLat]);
							sourceName = features[i].get('origin');
							origFlag++;
						}
						targLat=features[i].get('dest_lat');
						targLon=features[i].get('dest_lon');
						name=features[i].get('destination');
						if(namesArray.indexOf(name)<= -1) {
							namesArray.push(name);
							targets.push({
								coord: projection([targLon, targLat]),
								name: name
							});
						}
					}
				}
				if(origFlag!=0)
					drawfromTargets(sourceName, sourceGeo, targets);
				else
					toastr.error("No data found for this Mode of Transport");
			}
			}
			checknewzoom2();
		}
	}
	else if(val == "frozen"){
		function getIntersection(traffic,stateName){
			features = shipping.getSource().getFeaturesInExtent(ext);
			if(features.length>0) {
			var namesArray=[]; 
			var originsArray=[];
			if(traffic=="in"){
				destFlag=0;
				origins=[];
				for (var i = 0; i < features.length; i++) {
					var origLat;
					var origLon;
					var targLat;
					var targLon;
					var mode;
					var ktons;
					var origin=features[i].get('dms_orig');
					var modeF=features[i].get('dms_mode');
					var modeS=$("#selMode").val();
					var destination=features[i].get('dms_dest');
					if(modeS=="all"){
						if(destination==stateName && origin!=stateName) {
							var valueToPush = new Array();
							if(destFlag==0)	{
								destLat=features[i].get('dest_lat');
								destLon=features[i].get('dest_lon');
								targetGeo = projection([destLon, destLat]);
								targetName = features[i].get('dms_dest');
								destFlag++;
							}
							origLat=features[i].get('orig_lat');
							origLon=features[i].get('orig_lon');
							name=features[i].get('dms_orig');
							mode=features[i].get('dms_mode');
							ktons=features[i].get('total_ktons_in_2020');
							if(originsArray.indexOf(name)<= -1) {
								originsArray.push(name);
								origins.push({
									coord: projection([origLon, origLat]),
									mode: mode,
									name: name,
									ktons: ktons
								});
							}
						}
					}
					else{
						if(destination==stateName && origin!=stateName && modeF==modeS) {
							var valueToPush = new Array();
							if(destFlag==0)	{
								destLat=features[i].get('dest_lat');
								destLon=features[i].get('dest_lon');
								targetGeo = projection([destLon, destLat]);
								targetName = features[i].get('dms_dest');
								destFlag++;
							}
							origLat=features[i].get('orig_lat');
							origLon=features[i].get('orig_lon');
							name=features[i].get('dms_orig');
							mode=features[i].get('dms_mode');
							ktons=features[i].get('total_ktons_in_2020');				
							if(originsArray.indexOf(name)<= -1) {
								originsArray.push(name);
								origins.push({
									coord: projection([origLon, origLat]),
									mode: mode,
									name: name,
									ktons: ktons
								});
							}
						}
				  }
				}
				if(destFlag==0)
					toastr.error("No data found for this Mode of Transport");
				else
					drawfromTargets(targetName, targetGeo, origins);
			}
			else if(traffic=="out"){
				origFlag=0;
				targets=[];
				namesArray=[]; 
				for (var i = 0; i < features.length; i++) {
					var origLat;
					var origLon;
					var targLat;
					var targLon;
					var mode;
					var ktons;
					var origin=features[i].get('dms_orig');
					var modeF=features[i].get('dms_mode');
					var modeS=$("#selMode").val();
					var destination=features[i].get('dms_dest');
					if(modeS=="all"){
						if(origin==stateName && destination!=stateName) {
							var valueToPush = new Array();
							if(origFlag==0)	{
								var coord = features[i].getGeometry().getCoordinates();
								coord = ol.proj.transform(coord, 'EPSG:3857', 'EPSG:4326');
								sourceGeo = projection([+coord[0], +coord[1]]);
								sourceName = features[i].get('dms_orig');
								origFlag++;
							}
							targLat=features[i].get('dest_lat');
							targLon=features[i].get('dest_lon');
							name=features[i].get('dms_dest');
							mode=features[i].get('dms_mode');
							ktons=features[i].get('total_ktons_in_2020');
							if(namesArray.indexOf(name)<= -1) {
								namesArray.push(name);
								targets.push({
									coord: projection([targLon, targLat]),
									mode: mode,
									name: name,
									ktons: ktons
								});
							}
						}
					}
					else {
						if(origin==stateName && destination!=stateName && modeF==modeS) {
							var valueToPush = new Array();
							if(origFlag==0)	{
								var coord = features[i].getGeometry().getCoordinates();
								coord = ol.proj.transform(coord, 'EPSG:3857', 'EPSG:4326');
								sourceGeo = projection([+coord[0], +coord[1]]);
								sourceName = features[i].get('dms_orig');
								origFlag++;
							}
							targLat=features[i].get('dest_lat');
							targLon=features[i].get('dest_lon');
							name=features[i].get('dms_dest');
							mode=features[i].get('dms_mode');
							ktons=features[i].get('total_ktons_in_2020');
							if(namesArray.indexOf(name)<= -1) {
								namesArray.push(name);
								targets.push({
									coord: projection([targLon, targLat]),
									mode: mode,
									name: name,
									ktons: ktons
								});
							}
						}
					}
				}
				if(origFlag!=0)
					drawfromTargets(sourceName, sourceGeo, targets);
				else
					toastr.error("No data found for this Mode of Transport");
			}
			}
			checknewzoom2();
		}
	}
	
	getIntersection(traffic,state);
	function linkArc(d, s) {
		flag++;
        var dx = d.target.x - d.source.x;
        var dy = d.target.y - d.source.y;
        var dr = Math.sqrt(dx * dx + dy * dy);
        var spath = s == false ? ' 0 0,0 ' : ' 0 0,1 ';
        return 'M' + d.source.x + ',' + d.source.y + 'A' + dr + ',' + dr + spath + d.target.x + ',' + d.target.y;
    }
	function drawConnection(svg, connection, index, arc, targetName, targetMode, targetKTons, targetGeo, projection){
		var defs = svg.append('svg:defs');
		var marker = defs.selectAll('marker')
		   .data(markers)
		   .enter()
		   .append('svg:marker')
		   .attr('id', function(d){ return 'marker_' + d.name})
		   .attr('markerHeight', vorImageHeight)
 		   .attr('markerWidth', vorImageWidth)
		   .attr('markerUnits', 'strokeWidth')
		   .attr('orient', '0')
		   .attr('refX', 0)
		   .attr('refY', 0)
		   .attr('viewBox', function(d){ return d.viewbox })
		   .append('svg:path')
           .attr('d', function(d){ return d.path })
           .style('opacity', function(d){ 
				if ($('#switchLabelsShipping').is(":checked")) 
					return 1;
				else
					return 0;
			})
           .attr('fill', function(d){ 
				var color;
				if(d['name']=='mail')
					color='#a43823';
				else if(d['name']=='air')
					color='#a43823';
				else if(d['name']=='water')
					color='#000';
				else if(d['name']=='truck')
					color='#043d6c';
				else if(d['name']=='train')
					color='#024024';
				return color;
			  });
        arc = svg
          .append('path')
          .datum(connection)
          // .attr('class', 'arc' + index)
          .attr('class', function(d){
			  var name = d[2];
			  if(name == "GUATEMALA" || name == "HONDURAS" || name == "MEXICO" || name == "EQUADOR" || name == "NETHERLANDS" || name == "SPAIN" || name == "CANADA" || name == "COSTA RICA" || name == "ECUADOR" || name == "DOMINICAN REP.")
				return 'dotted-path';
		  })
          .attr('d', function(coordinates) {
			  if(mode=="all") {			
				  var d = {
					  source: { x: coordinates[0][0], y: coordinates[0][1]},
					  target: { x: coordinates[1][0], y: coordinates[1][1]}
				  };
				  var s = false;
				  if (d.target.x > d.source.x) {
					  s = true;
				  }
				  return linkArc(d, s);  
			  }
			  else if(coordinates[2]==mode) {			
				  var d = {
					  source: { x: coordinates[0][0], y: coordinates[0][1]},
					  target: { x: coordinates[1][0], y: coordinates[1][1]}
				  };
				  var s = false;
				  if (d.target.x > d.source.x) {
					  s = true;
				  }
				  return linkArc(d, s);  
			  }
			  else {			
				  var d = {
					  source: { x: coordinates[0][0], y: coordinates[0][1]},
					  target: { x: coordinates[1][0], y: coordinates[1][1]}
				  };
				  var s = false;
				  if (d.target.x > d.source.x) {
					  s = true;
				  }
				  return linkArc(d, s);  
			  }
          }) 
		  .style('stroke', function (d) {
			  if(val=="eggplants"){ return '#043d6c'; }
			  else if(val=="frozen"){
				  var color='';
				  if(d[2]=='mail')
					  color='#a43823';
				  else if(d[2]=='air')
					  color='#a43823';
				  else if(d[2]=='water')
					  color='#000';
				  else if(d[2]=='truck')
					  color='#043d6c';
				  else if(d[2]=='train')
					  color='#024024';
				  return color;	
			  }
		   })
          .style('stroke-width', 1)
          .style('fill', 'none')
          .transition()
          .duration(500)
		  .attr('marker-mid', function(d,i){ 
			if(val=="eggplants")
				return 'url(#marker_truck)';
			else if(val=="frozen")
				return 'url(#marker_'+d[2]+')' 
			})
          .attrTween('stroke-dasharray', function() {
              var len = this.getTotalLength();
              return function(t) {
                return (d3.interpolate('0,' + len, len + ',0'))(t)
              };
          })
          .on('end', function(d) {
			  var name = d[2];
			  var c=[];
				  if(traffic=="in")
					  c = connection[0];
				  else if(traffic=="out")
					  c = connection[1];
              svg.append('circle')
                .attr('cx', c[0])
                .attr('cy', c[1])
                .attr('r', 0)
                .attr('class', 'destCircleInner')
                .style('fill', 'steelblue')
                .style('fill-opacity', '1')
                .transition()
                .attr('r', radius);
              svg.append('circle')
                .attr('cx', c[0])
                .attr('cy', c[1])
                .attr('r', 0)
                .attr('class', 'destCircleOuter')
                .style('fill', 'black')
                .style('fill-opacity', '0.05')
                .transition()
                .attr('r', outerRadius);
				if(name == "GUATEMALA" || name == "HONDURAS" || name == "MEXICO" || name == "EQUADOR" || name == "NETHERLANDS" || name == "SPAIN" || name == "CANADA" || name == "COSTA RICA" || name == "ECUADOR" || name == "DOMINICAN REP."){
					svg.append("text")             
					.attr('x', c[0])
					.attr('y', c[1])
					.style("text-anchor", "end")
					.style("font-family", "helvetica, arial, sans-serif")
					.style("font-size", "10px")
					.style("font-weight", "bold")
					.text(function(d) {return name;  });
				}
          });
      }
	  map.on('moveend', checknewzoom2);
	  function checknewzoom2(evt) {
        setImageWidthHeight2();
		d3.selectAll("marker").attr("markerWidth", vorImageWidth).attr("markerHeight", vorImageHeight);
		d3.selectAll(".destCircleInner").attr("r", radius);
		d3.selectAll(".circleSource").attr("r", radius);
		d3.selectAll(".destCircleOuter").attr("r", outerRadius);
    }
	function setImageWidthHeight2() {
            var currentZoomLevel = map.getView().getZoom();
			
            if (currentZoomLevel <= 5) {
                vorImageHeight = '15';
                vorImageWidth = '15';
                radius = '3px';
                outerRadius = '10px';
				d3.selectAll('path').style("stroke-width", "1.5px");
            } if (currentZoomLevel == 6) {
                vorImageHeight = '12';
                vorImageWidth = '12';
				radius = '2.5px';
				outerRadius = '8px';
				d3.selectAll('path').style("stroke-width", "1.25px");
            } if (currentZoomLevel == 7) {
                vorImageHeight = '10';
                vorImageWidth = '10';
				radius = '2px';
				outerRadius = '6px';
				d3.selectAll('path').style("stroke-width", "1px");
            } if (currentZoomLevel == 8) {
                vorImageHeight = '8';
                vorImageWidth = '8';
				radius = '1.5px';
				outerRadius = '4px';
				d3.selectAll('path').style("stroke-width", "0.75px");
            } if (currentZoomLevel == 9) {
                vorImageHeight = '6';
                vorImageWidth = '6';
				radius = '1px';
				outerRadius = '2px';
				d3.selectAll('path').style("stroke-width", "0.50px");
            } if (currentZoomLevel >= 10) {
                vorImageHeight = '5';
                vorImageWidth = '5';
				radius = '0.75px';
				outerRadius = '1.5px';
				d3.selectAll('path').style("stroke-width", "0.25px");
            }
			if (currentZoomLevel == 11) {
                vorImageHeight = '4';
                vorImageWidth = '4';
				radius = '0.60px';
				outerRadius = '1.2px';
				d3.selectAll('path').style("stroke-width", "0.125px");
            } if (currentZoomLevel == 12) {
                vorImageHeight = '3';
                vorImageWidth = '3';
				radius = '0.50px';
				outerRadius = '1px';
				d3.selectAll('path').style("stroke-width", "0.06px");
            } if (currentZoomLevel == 13) {
                vorImageHeight = '3';
                vorImageWidth = '3';
				radius = '0.40px';
				outerRadius = '0.80px';
				d3.selectAll('path').style("stroke-width", "0.03px");
            } if (currentZoomLevel == 14) {
                vorImageHeight = '4';
                vorImageWidth = '4';
				radius = '0.30px';
				outerRadius = '0.60px';
				d3.selectAll('path').style("stroke-width", "0.015px");
            } if (currentZoomLevel == 15) {
                vorImageHeight = '6';
                vorImageWidth = '6';
				radius = '0.20px';
				outerRadius = '0.40px';
				d3.selectAll('path').style("stroke-width", "0.007px");
            } if (currentZoomLevel == 16) {
                vorImageHeight = '5';
                vorImageWidth = '5';
				radius = '0.15px';
				outerRadius = '0.30px';
				d3.selectAll('path').style("stroke-width", "0.0035px");
            } if (currentZoomLevel == 17) {
                vorImageHeight = '4';
                vorImageWidth = '4';
				radius = '0.10px';
				outerRadius = '0.20px';
				d3.selectAll('path').style("stroke-width", "0.0017px");
            } if (currentZoomLevel == 18) {
                vorImageHeight = '3';
                vorImageWidth = '3';
				radius = '0.05px';
				outerRadius = '0.10px';
				d3.selectAll('path').style("stroke-width", "0.00085px");
            } if (currentZoomLevel == 19) {
                vorImageHeight = '2';
                vorImageWidth = '2';
				radius = '0.01px';
				outerRadius = '0.02px';
				d3.selectAll('path').style("stroke-width", "0.00045px");
            } if (currentZoomLevel == 20) {
                vorImageHeight = '1';
                vorImageWidth = '1';
				radius = '0.008px';
				outerRadius = '0.016';
				d3.selectAll('path').style("stroke-width", "0.00022px");
            }
        }
	  function drawfromTargets(targetName, targetGeo, origins) {
        var countries, height, path, projection, scale, svg, width;
        var width = 1000;
        var height = 800;
		svg = d3.select('#map .d3-layer svg > g');
		var source = svg.selectAll('circleSource')
          source
          .data([targetGeo]).enter()
          .append('circle')
          .attr('cx', function (d) { return d[0]; })
          .attr('cy', function (d) { return d[1]; })
          .attr('r', radius)
          .style('opacity', 1)
          .attr('fill', 'green')
          .attr('class', 'circleSource')
          source
          .data(targetGeo).enter()
          .append('circle')
          .attr('cx', function (d) { return d[0]; })
          .attr('cy', function (d) { return d[1]; })
          .attr('r', '10px')
          .style('opacity', 0.05)
          .attr('fill', 'black')
          .attr('class', 'circleSource')
          .on('mouseover', function (d) {
            tooltip.html('<span style="color:white">' + sourceName + '</span>')
              .attr('class', 'tooltipSource')
              .style('left', d[0] + 12 + 'px')
              .style('top', d[1] - 20 + 'px')
              .transition()
              .duration(700)
              .style('opacity', 1)
          })
        this.svg = svg;
		var arc = svg.selectAll('path');  
		for(var i=0;i<origins.length;i++) {
			var origin = origins[i];
			var tarGeo = targetGeo;
			var origGeo = origin.coord;
			var origMode = origin.mode;
			var origName = origin.name;
			var origKTons = origin.ktons;
			if(val == "eggplants") {
				if(traffic=="in")
					var connectionCoord = [ origGeo, tarGeo, origName, origKTons ];
				else if(traffic=="out")
					var connectionCoord = [ tarGeo, origGeo, origName, origKTons ];
			}
			if(val == "frozen") {
				if(traffic=="in")
					var connectionCoord = [ origGeo, tarGeo, origMode, origKTons ];
				else if(traffic=="out")
					var connectionCoord = [ tarGeo, origGeo, origMode, origKTons ];
			}
			drawConnection(this.svg, connectionCoord, i, arc, origName, origMode, origKTons, origGeo, projection);
		}
		if(flag==0)
			toastr.error("No data found for this Mode of Transport");
      }
}

function interstateChord(val){
	try{$('#InteractiveChord svg').remove();}catch(ex){}
	var transport=$("#selMode").val();
	if(val=='in') {
		if(transport=='mail') {
			colorize('Inbound',"#eee");
			colorize('Outbound',"#f4912f");
		}
		else if(transport=='air') {
			colorize('Inbound',"#eee");
			colorize('Outbound',"#f4912f");
		}
		else if(transport=='truck') {
			colorize('Inbound',"#eee");
			colorize('Outbound',"#40c0b8");
		}
		else if(transport=='train') {
			colorize('Inbound',"#eee");
			colorize('Outbound',"#44b86d");
		}
	}
	else if(val=='out') {
		if(transport=='mail') {
			colorize('Inbound',"#a43823");
			colorize('Outbound',"#eee");
		}
		else if(transport=='air') {
			colorize('Inbound',"#a43823");
			colorize('Outbound',"#eee");
		}
		else if(transport=='truck') {
			colorize('Inbound',"#043d6c");
			colorize('Outbound',"#eee");
		}
		else if(transport=='train') {
			colorize('Inbound',"#024024");
			colorize('Outbound',"#eee");
		}
	}
	var diameter = 400,
		radius = diameter / 2,
		innerRadius = radius - 120;

	var cluster = d3.cluster()
		.size([360, innerRadius]);

	var line = d3.radialLine()
		.curve(d3.curveBundle.beta(0.5))
		.radius(function(d) { return d.y; })
		.angle(function(d) { return d.x / 180 * Math.PI; });

	svg2 = d3.select("#InteractiveChord").append("svg")
		.attr("width", diameter)
		.attr("height", diameter)
	  .append("g")
		.attr("transform", "translate(" + radius + "," + radius + ")");

	var link = svg2.append("g").selectAll(".link"),
		node = svg2.append("g").selectAll(".node");

	var classes = creditsToClasses();
	var root = packageHierarchy(classes)
		.sum(function(d) { return d.size; });

	cluster(root);
	link = link
		.data(packageImports(root.leaves()))
		.enter().append("path")
		.each(function(d) { d.source = d[0], d.target = d[d.length - 1]; })
		.attr("class", "link")
		.attr("d", line);
	node = node
		.data(root.leaves())
		.enter().append("text")
		.attr("class", "node")
		.attr("dy", "0.31em")
		.attr("transform", function(d) { return "rotate(" + (d.x - 90) + ")translate(" + (d.y + 8) + ",0)" + (d.x < 180 ? "" : "rotate(180)"); })
		.attr("text-anchor", function(d) { return d.x < 180 ? "start" : "end"; })
		.text(function(d) { 
				return d.data.key; 
		})
		.on("mouseover", mouseovered)
		.on("mouseout", mouseouted);

	function mouseovered(d) {
		if(val=='in') {
			node
			 .each(function(n) { n.target = n.source = false; });
			link
			 .classed("link--inbound", function(l) { if (l.source === d) return l.target.target = true; })
			 .filter(function(l) { return l.target === d || l.source === d; })
			 .raise(); 
			node
			 .classed("node--inbound", function(n) { return n.target; })
			if(transport=='mail') {
				$(".link--inbound").css("stroke","#f4912f");
				$(".node--inbound").css("fill","#f4912f");
			}
			else if(transport=='air') {
				$(".link--inbound").css("stroke","#f4912f");
				$(".node--inbound").css("fill","#f4912f");
				$(".node--inbound").css("font-weight","bold");
			}
			else if(transport=='truck') {
				$(".link--inbound").css("stroke","#40c0b8");
				$(".node--inbound").css("fill","#40c0b8");
				$(".node--inbound").css("font-weight","bold");
			}
			else if(transport=='train') {
				$(".link--inbound").css("stroke","#44b86d");
				$(".node--inbound").css("fill","#44b86d");
				$(".node--inbound").css("font-weight","bold");
			}
		}
		else if(val=='out') {
			node
			 .each(function(n) { n.target = n.source = false; });
			link
			 .classed("link--outbound", function(l) { if (l.target === d) {return l.source.source = true; }})
			 .filter(function(l) { return l.target === d || l.source === d; })
			 .raise();	 
			node
			 .classed("node--outbound", function(n) { return n.source; });
			if(transport=='mail') {
				$(".link--outbound").css("stroke","#a43823");
				$(".node--outbound").css("fill","#a43823");
				$(".node--outbound").css("font-weight","bold");
			}
			else if(transport=='air') {
				$(".link--outbound").css("stroke","#a43823");
				$(".node--outbound").css("fill","#a43823");
				$(".node--outbound").css("font-weight","bold");
			}
			else if(transport=='truck') {
				$(".link--outbound").css("stroke","#043d6c");
				$(".node--outbound").css("fill","#043d6c");
				$(".node--outbound").css("font-weight","bold");
			}
			else if(transport=='train') {
				$(".link--outbound").css("stroke","#024024");
				$(".node--outbound").css("fill","#024024");
				$(".node--outbound").css("font-weight","bold");
			}
		}
		
	}

	function mouseouted(d) {
		$(".link--outbound").css("stroke","#eee");
		$(".node--outbound").css("fill","#bbb");
		$(".node--outbound").css("font-weight","normal");
		$(".link--inbound").css("stroke","#eee");
		$(".node--inbound").css("fill","#bbb");
		$(".node--inbound").css("font-weight","normal");
	}

	function packageHierarchy(classes) {
		var map = {};

		function find(name, data) {
			var node = map[name], i;
			if (!node) {
				node = map[name] = data || {name: name, children: []};
				if (name.length) {
					node.parent = find(name.substring(0, i = name.lastIndexOf(".")));
					node.parent.children.push(node);
					node.key = name.substring(i + 1);
				}
			}
			return node;
		}
		classes.forEach(function(d) {
			if( typeof d.name != 'undefined')
				find(d.name, d);
		});

		return d3.hierarchy(map[""]);
	}

	function packageImports(nodes) {
		var map = {},
		  imports = [];
		nodes.forEach(function(d) {
			map[d.data.name] = d;
		});
		nodes.forEach(function(d) {
			if (d.data.imports) 
				d.data.imports.forEach(function(i) {
					var input = map[d.data.name];
					var mapi = map[i];
					if( typeof mapi != 'undefined'){
						var path = input.path(mapi);
						imports.push(path);
					}
				});
	  });
	  return imports;
	}
	function creditsToClasses(){
		var classArray = [];
		var arr=[];
		mode=$("#selMode").val();
		features = shipping.getSource().getFeatures();
		
		for (var i = 0; i < features.length; i++) {
			var origin=features[i].get('dms_orig');
			if(arr.indexOf(origin)<= -1)
				arr.push(origin);
		}
		var uniqueItems = Array.from(new Set(arr));
		uniqueItems.sort();
		for (var i = 0; i < uniqueItems.length; i++) {
			var imports=[];
			for (var j = 0; j < features.length; j++) {				
				if(features[j].get('dms_orig')==uniqueItems[i] && features[j].get('dms_mode')==mode) {
					var dest=features[j].get('dms_dest');
					if(imports.indexOf(dest)<= -1)
						imports.push(dest);
				}
			}
			var classObj = {};
			classObj.name =  uniqueItems[i];
			classObj.size = imports.length;
			classObj.imports= imports;
			classArray.push(classObj);
		}
		return classArray;
	}
}
$( document ).ready(function() {
	$(document).on('click','#Outbound',function(){
		interstateChord('in');
	});
	$(document).on('click','#Inbound',function(){
		interstateChord('out');
	});
});

function colorize(key, value) {
	if(legendCounter==2) {
		$("#container").empty();
		legendCounter=0;
	}
    var container = document.getElementById('container');
        var boxContainer = document.createElement("DIV");
		boxContainer.setAttribute("class", "chordLegend");
        var box = document.createElement("BUTTON");
        var label = document.createElement("SPAN");
        label.innerHTML = key;
        box.className = "box";
        box.id = key;
        label.className = "label";
        box.style.backgroundColor = value;
        boxContainer.appendChild(box);
        boxContainer.appendChild(label);
        container.appendChild(boxContainer);
		legendCounter++
}

function intrastateChord(state){
	var volumeArray=[];
	var volumeData={};
	try{$('#topVolume svg').remove();}catch(e){}
	var data=[];
	var count=20;
	var features = shipping.getSource().getFeatures();
	for(var i=0; i<features.length;i++) {
		var orig=features[i].get('dms_orig');
		var dest=features[i].get('dms_dest');
		if(orig==state || dest==state){
			var volumeData={};
			volumeData.orig =  features[i].get('dms_orig');
			volumeData.dest =  features[i].get('dms_dest');
			volumeData.dollar =  features[i].get('total_mdollar_in_2020');
			volumeData.tons =  features[i].get('total_ktons_in_2020');
			volumeArray.push(volumeData);
			volumeArray = volumeArray.sort(function(obj1, obj2) {	return obj2.dollar - obj1.dollar;	});
		}
	}
	for(var i=0; i<volumeArray.length;i++) {
        for(var j=0; j<2; j++) {
            if(j==0) {
                var classObj = {};
                classObj.node =  volumeArray[i].orig;
                classObj.root  = volumeArray[i].dest;
                classObj.dollar = volumeArray[i].dollar;
                classObj.count= count;
                data.push(classObj);
            }
            else{
                var classObj = {};
                classObj.node =  volumeArray[i].dest;
                classObj.root  = volumeArray[i].orig;
                classObj.dollar = volumeArray[i].dollar;
                classObj.count= 2;
                data.push(classObj);
            }
        }
        if(count==11)
                break;
        count--;
    }
	
	var ind=0;
	for(var i=0;i<data.length;i++){
		if(data[i].root!=state){
			data=data.immutableMove(i, ind);
			ind++;
		}
	}
    var mpr = chordMpr(data);
    mpr
       .addValuesToMap('root')
       .addValuesToMap('node')
       .setFilter(function(row, a, b) {
            return (row.root === a.name && row.node === b.name)
       })
       .setAccessor(function(recs, a, b) {
            if (!recs[0]) return 0;
                    return +recs[0].count;
            });
    drawChords(mpr.getMatrix(), mpr.getMap());

    function drawChords(matrix, mmap) {
            var w = 400,
			    h = 360,
			    r1 = 230 ,
			    r0 = r1 - 110;

            var chord = d3.chord()
                .padAngle(0.05)
                .sortSubgroups(d3.descending)
                .sortChords(d3.descending);

            var arc = d3.arc()
                .innerRadius(r0)
                .outerRadius(r0 + 8);

            var ribbon = d3.ribbon()
                .radius(r0);

            var svg = d3.select("#topVolume").append("svg:svg")
                .attr("width", w)
                .attr("height", h)
                .append("svg:g")
                .attr("id", "circle")
                .attr("transform", "translate(" + w / 2 + "," + h / 2 + ")")
                .datum(chord(matrix));

            svg.append("circle")
                .attr("r", r0 + 8);

			var colors = d3.scaleOrdinal(['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506']);

            var mapReader = chordRdr(matrix, mmap);

            var g = svg.selectAll("g.group")
                .data(function(chords) {
                    return chords.groups;
                })
                .enter().append("svg:g")
                .attr("class", "group")

            g.append("svg:path")
                .style("stroke", "grey")
                .style("fill", function(d) {
                    return colors(d.index);
                })
                .attr("d", arc);

            g.append("svg:text")
                .each(function(d) {
                    d.angle = (d.startAngle + d.endAngle) / 2;
                })
                .attr("dy", ".35em")
                .style("font-family", "helvetica, arial, sans-serif")
                .style("font-size", "9px")
                .attr("text-anchor", function(d) {
                    return d.angle > Math.PI ? "end" : null;
                })
                .attr("transform", function(d) {
                    return "rotate(" + (d.angle * 180 / Math.PI - 90) + ")" +
                        "translate(" + (r0 + 26) + ")" +
                        (d.angle > Math.PI ? "rotate(180)" : "");
                })
                .text(function(d) {
                    return mapReader(d).gname;
                });

            var chordPaths = svg.selectAll("path.chord")
                .data(function(chords) {
                    return chords;
                })
                .enter().append("svg:path")
                .attr("class", "chord")
                .style("stroke", "grey")
                .style("fill", function(d, i) {
                    return colors(d.source.index);
                })
                .attr("d", ribbon.radius(r0))

        }
}

function BarChartRef(state) {
	try{$('#intraBar svg').remove();}catch(ex){}
	var margin = {top: 20, right: 20, bottom: 30, left: 60},
    width = 400 - margin.left - margin.right,
    height = 360 - margin.top - margin.bottom;

	var x = d3.scaleBand()
		.rangeRound([0, width], .1)
			.paddingInner(0.1);

	var y = d3.scaleLinear()
		.range([height, 0]);

	var xAxis = d3.axisBottom()
		.scale(x)
	;

	var yAxis = d3.axisLeft()
		.scale(y)
		.ticks(10, "");

	var svg = d3.select("#intraBar").append("svg")
		.attr("width", width + margin.left + margin.right)
		.attr("height", height + margin.top + margin.bottom)
	  .append("g")
		.attr("transform", "translate(" + margin.left + "," + margin.top + ")");

	
	var features = shipping.getSource().getFeatures();
	var data=[];
	for(var i=0; i<features.length;i++) {
		
		var volumeData={};
		var orig=features[i].get('dms_orig');
		var dest=features[i].get('dms_dest');
		if(orig==state && dest==state){
			var volumeData={};
			var distance=features[i].get('dist_band');
			volumeData.dist = distance;
			volumeData.frequency = features[i].get('total_ktons_in_2020');
			data.push(volumeData);
		}
	}
	  x.domain(data.map(function(d) { return d.dist; }));
	  y.domain([0, d3.max(data, function(d) { return d.frequency; })]);
	  
	  svg.append("g")
		  .attr("class", "x axis")
		  .attr("transform", "translate(0," + height + ")")
		  .call(xAxis);

	  svg.append("g")
		  .attr("class", "y axis")
		  .call(yAxis)
	svg.append("text")
		  .attr("transform", "rotate(-90)")
		  .attr("y", 0 - margin.left)
		  .attr("x",0 - (height / 2))
		  .attr("dy", "1em")
		  .style("text-anchor", "middle")
		  .style("font-family", "helvetica, arial, sans-serif")
          .style("font-size", "10px")
          .style("font-weight", "bold")
		  .text("Kilo Tons"); 
	// text label for the x axis
	svg.append("text")             
      .attr("transform", "translate(" + (width/2) + " ," + (height + margin.top + 10) + ")")
      .style("text-anchor", "middle")
	  .style("font-family", "helvetica, arial, sans-serif")
      .style("font-size", "10px")
      .style("font-weight", "bold")
      .text("Distance");	  
  // text label for the y axis
	  svg.selectAll(".bar")
		  .data(data)
		.enter().append("rect")
		  .attr("class", "bar")
		  .attr("x", function(d) { return x(d.dist); })
		  .attr("width", x.bandwidth())
		  .attr("y", function(d) { return y(d.frequency); })
		  .attr("height", function(d) { return height - y(d.frequency); });
	function type(d) {
	  d.frequency = +d.frequency;
	  return d;
	}
}

function addStatesVoro(val, lyr, visbility) {/**/
    var source = new ol.source.Vector({
        format: new ol.format.GeoJSON(),
        loader: function(extent, resolution, projection) {
            var url = '../geoserver/wfs?service=WFS&version=1.1.0&request=GetFeature&typename=Farmer:' + lyr + '&outputFormat=application/json&srsname=EPSG:3857';
            var tilesLoaded = 0;
            var tilesPending = 0;

            $.ajax({
                url: url,
                dataType: 'json',
                beforeSend: function(e) {
                    $('#js-progress-bar').css({
                        'opacity': '1',
                        'height': '5px',
                        'width': '5%'
                    });
                    ++tilesPending;
                },
                success: function(data) {
                    ++tilesLoaded;
                    var percentage = Math.round(tilesLoaded / tilesPending * 100);
                    $('#js-progress-bar').css({
                        'width': percentage + '%'
                    });

                    if (percentage >= 100) {
                        var features = geoJSONFormat.readFeatures(data);
                        source.addFeatures(features);
                        setTimeout(function() {
							if(val=='US')
							{
								usFull = statesWFSVoronoi.getSource().getFeatures()[0];
								usFullGeometry = statesWFSVoronoi.getSource().getFeatures()[0].getGeometry();
								map.removeLayer(statesWFSVoronoi);
								// console.log(statesWFSVoronoi.getSource().getFeatures()[0].getGeometry());
							}
                            $('#js-progress-bar').css({
                                'width': '0',
                                'opacity': '0'
                            });
                            tilesLoaded = 0;
                            tilesPending = 0;
							if(val=='US')
								return;
                        }, 600);
                    }
                }
            });
        }
    });
	if($('#selRefrigerated').find('[value=shipping]').prop('selected') || $('#commoditiesSelect').find('[value=eggplants]').prop('selected'))
	{
		statesWFSVoronoi = new ol.layer.Vector({
			name: val,
			source: source,
			style: loadStyle,
			displayInLayerSwitcher: true,
			visible: visbility
		});
	}
	else if(val == 'US')
	{
		statesWFSVoronoi = new ol.layer.Vector({
			name: val,
			source: source,
			visible: visbility,
			displayInLayerSwitcher: false,
			style : new ol.style.Style({
				fill: new ol.style.Fill({
					color: 'rgba(0, 0, 0, 0)'
				})
			})
		});
	}
	else 
		statesWFSVoronoi = new ol.layer.Vector({
			name: val,
			source: source,
			visible: visbility
		});
    map.addLayer(statesWFSVoronoi);
}

function addShippingData(val) { /**/
    var source = new ol.source.Vector({
        format: new ol.format.GeoJSON(),
        loader: function(extent, resolution, projection) {
            var url = '../geoserver/wfs?service=WFS&version=1.1.0&request=GetFeature&typename=Farmer:'+val+'&outputFormat=application/json&srsname=EPSG:3857';
            var tilesLoaded = 0;
            var tilesPending = 0;

            $.ajax({
                url: url,
                dataType: 'json',
                beforeSend: function(e) {
                    $('#js-progress-bar').css({
                        'opacity': '1',
                        'height': '5px',
                        'width': '5%'
                    });
                    ++tilesPending;
                },
                success: function(data) {
                    ++tilesLoaded;
                    var percentage = Math.round(tilesLoaded / tilesPending * 100);
                    $('#js-progress-bar').css({
                        'width': percentage + '%'
                    });

                    if (percentage >= 100) {
                        var features = geoJSONFormat.readFeatures(data);
                        source.addFeatures(features);
                        setTimeout(function() {
                            $('#js-progress-bar').css({
                                'width': '0',
                                'opacity': '0'
                            });
                            tilesLoaded = 0;
                            tilesPending = 0;
                        }, 600);
                    }
                }
            });
        }
    });
    shipping = new ol.layer.Vector({
        name: 'Refrigerated Shipping',
        source: source,
		opacity:0,
		displayInLayerSwitcher: false
    });
    map.addLayer(shipping);
}

function addRegionsVoro() {
    var source = new ol.source.Vector({
        format: new ol.format.GeoJSON(),
        loader: function(extent, resolution, projection) {
            var url = '../geoserver/wfs?service=WFS&version=1.1.0&request=GetFeature&typename=Farmer:region&outputFormat=application/json&srsname=EPSG:3857';
            var tilesLoaded = 0;
            var tilesPending = 0;

            $.ajax({
                url: url,
                dataType: 'json',
                beforeSend: function(e) {
                    $('#js-progress-bar').css({
                        'opacity': '1',
                        'height': '5px',
                        'width': '5%'
                    });
                    ++tilesPending;
                },
                success: function(data) {
                    ++tilesLoaded;
                    var percentage = Math.round(tilesLoaded / tilesPending * 100);
                    $('#js-progress-bar').css({
                        'width': percentage + '%'
                    });

                    if (percentage >= 100) {
                        var features = geoJSONFormat.readFeatures(data);
                        source.addFeatures(features);
                        setTimeout(function() {
                            $('#js-progress-bar').css({
                                'width': '0',
                                'opacity': '0'
                            });
                            tilesLoaded = 0;
                            tilesPending = 0;
                        }, 600);
                    }
                }
            });
        }
    });
    regionsWFSVoronoi = new ol.layer.Vector({
        name: "VoronoiRegions",
        source: source
    });
    map.addLayer(regionsWFSVoronoi);
}

function clearVoronoiData(cond) {
    if (cond != "none") {
        $('#divVorHealth .selectpicker').selectpicker('val', 'none');
    }
    $('#voroAreaDiv .selectpicker').selectpicker('val', 'none');
	$('#voroDCAreaDiv .selectpicker').selectpicker('val', 'none');
    $("#voroAreaDiv").hide();
    $("#voroDCAreaDiv").hide();
    $("#voronoiControls").hide();
    if ($('#cbVoronoi').prop('checked'))
        $('#cbVoronoi').click();
	if ($('#cbDCVoronoi').prop('checked'))
	    $('#cbDCVoronoi').click();
    try {
        map.removeInteraction(draw);
    } catch (ex) {}
    try {
		mappingSource.clear();
	} catch (ex) {}
    try {
        map.removeLayer(statesWFSVoronoi);
    } catch (ex) {}
}

function handleLegend(ctrl) {
    switch (ctrl[0].id) {
        case "aviationnoise":
            AviationNoise.setVisible(ctrl[0].checked);
            AviationNoise.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "roadnoise":
            RoadNoise.setVisible(ctrl[0].checked);
            RoadNoise.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "jobsBachelor":
            employment.setVisible(ctrl[0].checked);
            employment.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "jobsTotal":
            employment.setVisible(ctrl[0].checked);
            employment.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "labor_force":
            unemployment.setVisible(ctrl[0].checked);
            unemployment.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "unemployed":
            unemployment.setVisible(ctrl[0].checked);
            unemployment.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "unemployment_perc":
            unemployment.setVisible(ctrl[0].checked);
            unemployment.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "median_smoc_mortgage":
            median_smoc_mortgage.setVisible(ctrl[0].checked);
            median_smoc_mortgage.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "median_gross_rent":
            median_gross_rent.setVisible(ctrl[0].checked);
            median_gross_rent.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "avg_h_cost":
            avg_h_cost.setVisible(ctrl[0].checked);
            avg_h_cost.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "commuters_per_hh":
            commuters_per_hh.setVisible(ctrl[0].checked);
            commuters_per_hh.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "median_hh_income":
            median_hh_income.setVisible(ctrl[0].checked);
            median_hh_income.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "agsum":
            agsum.setVisible(ctrl[0].checked);
            agsum.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "agr17":
            agr17.setVisible(ctrl[0].checked);
            agr17.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "agr18":
            agr18.setVisible(ctrl[0].checked);
            agr18.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "oz":
            opportunityzones.setVisible(ctrl[0].checked);
            opportunityzones.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "ccd":
            ccd.setVisible(ctrl[0].checked);
            ccd.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "scsd":
            scsd.setVisible(ctrl[0].checked);
            scsd.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "traffic":
            trafficRaster.setVisible(ctrl[0].checked);
            trafficRaster.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
			
        case "cropOneSix":
            wmsOneSix.setVisible(ctrl[0].checked);
            wmsOneSix.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "neOneTwo":
            wmsNeOneTwo.setVisible(ctrl[0].checked);
            wmsNeOneTwo.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "neOneThree":
            wmsNeOneThree.setVisible(ctrl[0].checked);
            wmsNeOneThree.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "neOneFour":
            wmsNeOneFour.setVisible(ctrl[0].checked);
            wmsNeOneFour.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "neOneFive":
            wmsNeOneFive.setVisible(ctrl[0].checked);
            wmsNeOneFive.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "neOneSix":
            wmsNeOneSix.setVisible(ctrl[0].checked);
            wmsNeOneSix.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "neOneSeven":
            wmsNeOneSeven.setVisible(ctrl[0].checked);
            wmsNeOneSeven.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "caOneSevenCustom":
            wmsCAOneSevenCustom.setVisible(ctrl[0].checked);
            wmsCAOneSevenCustom.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "gaOneSevenCustom":
            wmsGAOneSevenCustom.setVisible(ctrl[0].checked);
            wmsGAOneSevenCustom.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "flOneSevenCustom":
            wmsFLOneSevenCustom.setVisible(ctrl[0].checked);
            wmsFLOneSevenCustom.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "ncOneSevenCustom":
            wmsNCOneSevenCustom.setVisible(ctrl[0].checked);
            wmsNCOneSevenCustom.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "scOneSevenCustom":
            wmsSCOneSevenCustom.setVisible(ctrl[0].checked);
            wmsSCOneSevenCustom.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
			
        case "healthcond":
            healthCond.setVisible(ctrl[0].checked);
            healthCond.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
			
        case "primaryHealth":
            primaryHealth.setVisible(ctrl[0].checked);
            primaryHealth.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "dentalHealth":
            dentalHealth.setVisible(ctrl[0].checked);
            dentalHealth.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "mentalhealth":
            mentalHealth.setVisible(ctrl[0].checked);
            mentalHealth.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "ascHealth":
            ascHealth.setVisible(ctrl[0].checked);
            ascHealth.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "providersHealth":
            providersHealth.setVisible(ctrl[0].checked);
            providersHealth.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "dermagroupHealth":
            dermagroupHealth.setVisible(ctrl[0].checked);
            dermagroupHealth.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "dermasoloHealth":
            dermasoloHealth.setVisible(ctrl[0].checked);
            dermasoloHealth.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "plasticsurgerysoloHealth":
            plasticsurgerysoloHealth.setVisible(ctrl[0].checked);
            plasticsurgerysoloHealth.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "plasticsurgerysoloHealth":
            plasticsurgerysoloHealth.setVisible(ctrl[0].checked);
            plasticsurgerysoloHealth.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
			
        case "muap":
            muap.setVisible(ctrl[0].checked);
            muap.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
			
        case "asb":
            wmsASB.setVisible(ctrl[0].checked);
            wfsASB.setVisible(ctrl[0].checked);
            break;
        case "ag":
            wmsAG.setVisible(ctrl[0].checked);
            wfsAG.setVisible(ctrl[0].checked);
            break;
        case "mpo":
            wmsMPO.setVisible(ctrl[0].checked);
            wfsMPO.setVisible(ctrl[0].checked);
            break;
        case "hrr":
            wmsHrr.setVisible(ctrl[0].checked);
            wfsHrr.setVisible(ctrl[0].checked);
            break;
        case "hsa":
            wmsHsa.setVisible(ctrl[0].checked);
            wfsHsa.setVisible(ctrl[0].checked);
            break;
        case "pcsa":
            wmsPcsa.setVisible(ctrl[0].checked);
            wfsPcsa.setVisible(ctrl[0].checked);
            break;
        case "states":
            wmsStates.setVisible(ctrl[0].checked);
            wfsStates.setVisible(ctrl[0].checked);
            break;
        case "counties":
            wfsCounties.setVisible(ctrl[0].checked);
            wmsCounties.setVisible(ctrl[0].checked);
            break;
        case "urbanRural":
            wmsUrbanRural.setVisible(ctrl[0].checked);
            wmsUrbanRural.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "districts":
            wmsDistricts.setVisible(ctrl[0].checked);
            wfsDistricts.setVisible(ctrl[0].checked);
            break;
        case "zips":
            wmsZips.setVisible(ctrl[0].checked);
            wfsZips.setVisible(ctrl[0].checked);
            break;
        case "str_coverage":
            wmsSTRCoverage.setVisible(ctrl[0].checked);
            wfsSTRCoverage.setVisible(ctrl[0].checked);
            break;
        case "region":
            wfsRegion.setVisible(ctrl[0].checked);
            wmsRegion.setVisible(ctrl[0].checked);
            break;
        case "cities":
            wmsCities.setVisible(ctrl[0].checked);
            wfsCities.setVisible(ctrl[0].checked);
            break;
        case "consumermarketboundaries":
            wmsCMB.setVisible(ctrl[0].checked);
            wfsCMB.setVisible(ctrl[0].checked);
            break;
        case "active_coverage":
            wmsActiveCoverage.setVisible(ctrl[0].checked);
            wfsActiveCoverage.setVisible(ctrl[0].checked);
            break;
        case "reduced_coverage":
            wmsReducedCoverage.setVisible(ctrl[0].checked);
            wfsReducedCoverage.setVisible(ctrl[0].checked);
            break;
        case "total_coverage":
            wmsTotalCoverage.setVisible(ctrl[0].checked);
            wfsTotalCoverage.setVisible(ctrl[0].checked);
            break;
        case "bea10":
            wmsBEA10.setVisible(ctrl[0].checked);
            wfsBEA10.setVisible(ctrl[0].checked);
            break;
        case "cbsa10":
            wmsCBSA10.setVisible(ctrl[0].checked);
            wfsCBSA10.setVisible(ctrl[0].checked);
            break;
        case "ers10":
            wmsERS10.setVisible(ctrl[0].checked);
            wfsERS10.setVisible(ctrl[0].checked);
            break;
        case "ers10rep":
            wmsERS10Rep.setVisible(ctrl[0].checked);
            wfsERS10Rep.setVisible(ctrl[0].checked);
            break;
        case "pea10":
            wmsPEA10.setVisible(ctrl[0].checked);
            wfsPEA10.setVisible(ctrl[0].checked);
            break;
        case "tp10":
            wmsTP10.setVisible(ctrl[0].checked);
            wfsTP10.setVisible(ctrl[0].checked);
            break;
        case "tp10metro":
            wmsTP10Metro.setVisible(ctrl[0].checked);
            wfsTP10Metro.setVisible(ctrl[0].checked);
            break;
        case "tp10micro":
            wmsTP10Micro.setVisible(ctrl[0].checked);
            wfsTP10Micro.setVisible(ctrl[0].checked);
            break;
        case "cfs_area":
            wmsCFS.setVisible(ctrl[0].checked);
            wfsCFS.setVisible(ctrl[0].checked);
            break;
        case "msas":
            wfsMsas.setVisible(ctrl[0].checked);
            wmsMsas.setVisible(ctrl[0].checked);
            break;
        case "commuters_regions":
            wfsCommuterRegions.setVisible(ctrl[0].checked);
            wmsCommuterRegions.setVisible(ctrl[0].checked);
            break;
        case "megaregions":
            wfsMegaregion.setVisible(ctrl[0].checked);
            wmsMegaregion.setVisible(ctrl[0].checked);
            break;
        case "neighbors":
            wfsNeighbors.setVisible(ctrl[0].checked);
            wmsNeighbors.setVisible(ctrl[0].checked);
            break;
        case "rff":
            wmsRFF.setVisible(ctrl[0].checked);
            wfsRFF.setVisible(ctrl[0].checked);
            break;
        case "cultural_regions":
            wmsCulturalRegions.setVisible(ctrl[0].checked);
            wfsCulturalRegions.setVisible(ctrl[0].checked);
            break;
        case "std5":
            wmsSTD5.setVisible(ctrl[0].checked);
            wfsSTD5.setVisible(ctrl[0].checked);
            break;
        case "std10":
            wmsSTD10.setVisible(ctrl[0].checked);
            wfsSTD10.setVisible(ctrl[0].checked);
            break;
        case "boundaries":
            txtSearchLayer.setVisible(ctrl[0].checked);
            break;
        case "boundariesRegion":
            txtSearchLayerRegion.setVisible(ctrl[0].checked);
            break;
        case "subwatershed":
            subwatershed.setVisible(ctrl[0].checked);
            wfsSubwatershed.setVisible(ctrl[0].checked);
            break;
        case "watershedsubbasin":
            watershedsubbasin.setVisible(ctrl[0].checked);
            wfsSubbasin.setVisible(ctrl[0].checked);
            break;
        case "watershedsubregions":
            watershedsubregions.setVisible(ctrl[0].checked);
            wfsSubregions.setVisible(ctrl[0].checked);
            break;
        case "watershedregions":
            watershedregions.setVisible(ctrl[0].checked);
            wfsRegions.setVisible(ctrl[0].checked);
            break;
        case "coastalline":
            coastalline.setVisible(ctrl[0].checked);
            break;
        case "surfacewater":
            surfacewater.setVisible(ctrl[0].checked);
            break;
        case "healthcare":
            voronoiHospitals.setVisible(ctrl[0].checked);
            voronoiHospitals.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "analysis":
            radiusLayer.setVisible(ctrl[0].checked);
            markerLayer.setVisible(ctrl[0].checked);
            storeLayer.setVisible(ctrl[0].checked);
            densityLayer.setVisible(ctrl[0].checked);
            vacancyLayer.setVisible(ctrl[0].checked);
            gardenLayer.setVisible(ctrl[0].checked);
            analysisLayer.setVisible(ctrl[0].checked);
            searchLayer.setVisible(ctrl[0].checked);
            break;
        case "vacancy":
            vacancyWMS.setVisible(ctrl[0].checked);
            break;
        case "ptrr":
            ptrrWMSOS.setVisible(ctrl[0].checked);
            break;
        case "popu":
            popuWMSMW.setVisible(ctrl[0].checked);
            break;
        case "income":
            incomeWMSMW.setVisible(ctrl[0].checked);
            break;
        case "density":
            densityWMSMW.setVisible(ctrl[0].checked);
            break;
        case "household":
            hhWMSMW.setVisible(ctrl[0].checked);
            break;
        case "pop2010":
        case "ohu2010":
        case "povertyrat":
        case "tractkids":
        case "tractsenio":
        case "tractwhite":
        case "tractblack":
        case "tractasian":
        case "tracthispa":
        case "medianfami":
        case "tractlowi":
        case "tractsnap":
        case "lapop1":
        case "lapop1shar":
        case "lalowi1":
        case "lalowi1sha":
        case "lapop10":
        case "lapop10sha":
        case "lalowi10":
        case "lalowi10sh":
            foodaccess.setVisible(ctrl[0].checked);
            foodaccess.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "dieseltax2013":
        case "dieseltax2017":
        case "dieseltax2018":
        case "dieseltaxoneyear":
        case "dieseltaxoneyearper":
        case "dieseltaxfiveyear":
        case "dieseltaxfiveyearper":
            dieseltaxrates.setVisible(ctrl[0].checked);
            dieseltaxrates.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "crops":
        case "urbanwood":
        case "secmill":
        case "forest":
        case "primmill":
        case "total":
            solidbiomass.setVisible(ctrl[0].checked);
            solidbiomass.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "ffr":
            ffr.setVisible(ctrl[0].checked);
            ffr.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "ffrchange":
            ffrchange.setVisible(ctrl[0].checked);
            ffrchange.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "ffrpopu":
            ffrpopu.setVisible(ctrl[0].checked);
            ffrpopu.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "ffrpopuchange":
            ffrpopuchange.setVisible(ctrl[0].checked);
            ffrpopuchange.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "fsr":
            fsr.setVisible(ctrl[0].checked);
            fsr.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "fsrchange":
            fsrchange.setVisible(ctrl[0].checked);
            fsrchange.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "fsrpopu":
            fsrpopu.setVisible(ctrl[0].checked);
            fsrpopu.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "fsrpopuchange":
            fsrpopuchange.setVisible(ctrl[0].checked);
            fsrpopuchange.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "farmermarket":
            farmermarket.setVisible(ctrl[0].checked);
            farmermarket.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "farmermarketchange":
            farmermarketchange.setVisible(ctrl[0].checked);
            farmermarketchange.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "dsf":
            dsf.setVisible(ctrl[0].checked);
            dsf.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "ngp":
            ngp.setVisible(ctrl[0].checked);
            ngp.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "dsfchange":
            dsfchange.setVisible(ctrl[0].checked);
            dsfchange.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "hydroponic_growers_county":
            hydroponic_growers_county.setVisible(ctrl[0].checked);
            hydroponic_growers_county.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "noofstores":
            noofstores.setVisible(ctrl[0].checked);
            noofstores.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "job_gravity":
            job_gravity.setVisible(ctrl[0].checked);
            job_gravity.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "retail_gravity":
            retail_gravity.setVisible(ctrl[0].checked);
            retail_gravity.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "nooforganicgrowers":
            nooforganicgrowers.setVisible(ctrl[0].checked);
            nooforganicgrowers.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "noofestt":
            noofestt.setVisible(ctrl[0].checked);
            noofestt.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "noofjobs":
            noofjobs.setVisible(ctrl[0].checked);
            noofjobs.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "percentjobs":
            percentjobs.setVisible(ctrl[0].checked);
            percentjobs.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "emipc":
            emipc.setVisible(ctrl[0].checked);
            emipc.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "emipcstate":
            emipcstate.setVisible(ctrl[0].checked);
            emipcstate.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "emitl":
            emitl.setVisible(ctrl[0].checked);
            emitl.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "emitlstate":
            emitlstate.setVisible(ctrl[0].checked);
            emitlstate.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "fdipc":
            fdipc.setVisible(ctrl[0].checked);
            fdipc.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "fdipcstate":
            fdipcstate.setVisible(ctrl[0].checked);
            fdipcstate.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "ftpc":
            ftpc.setVisible(ctrl[0].checked);
            ftpc.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "ftpcstate":
            ftpcstate.setVisible(ctrl[0].checked);
            ftpcstate.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "ihpc":
            ihpc.setVisible(ctrl[0].checked);
            ihpc.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "ihpcstate":
            ihpcstate.setVisible(ctrl[0].checked);
            ihpcstate.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "ihtl":
            ihtl.setVisible(ctrl[0].checked);
            ihtl.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "ihtlstate":
            ihtlstate.setVisible(ctrl[0].checked);
            ihtlstate.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "mtpc":
            mtpc.setVisible(ctrl[0].checked);
            mtpc.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "mtpcstate":
            mtpcstate.setVisible(ctrl[0].checked);
            mtpcstate.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "mttl":
            mttl.setVisible(ctrl[0].checked);
            mttl.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "mttlstate":
            mttlstate.setVisible(ctrl[0].checked);
            mttlstate.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case 'ctxstate':
            ctxstate.setVisible(ctrl[0].checked);
			ctxstate.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case 'emx':
            emx.setVisible(ctrl[0].checked);
			emx.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case 'emxstate':
            emxstate.setVisible(ctrl[0].checked);
			emxstate.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case 'fdx':
            fdx.setVisible(ctrl[0].checked);
			fdx.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case 'fdxstate':
            fdxstate.setVisible(ctrl[0].checked);
			fdxstate.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case 'mhbx':
            mhbx.setVisible(ctrl[0].checked);
			mhbx.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case 'mhbxstate':
            mhbxstate.setVisible(ctrl[0].checked);
			mhbxstate.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case 'mtx':
            mtx.setVisible(ctrl[0].checked);
			mtx.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case 'mtxstate':
            mtxstate.setVisible(ctrl[0].checked);
			mtxstate.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case 'tlx':
            tlx.setVisible(ctrl[0].checked);
			tlx.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case 'tlxstate':
            tlxstate.setVisible(ctrl[0].checked);
			tlxstate.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case 'wdx':
            wdx.setVisible(ctrl[0].checked);
			wdx.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "wdxstate":
            wdxstate.setVisible(ctrl[0].checked);
            wdxstate.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "owner_occupied_hu":
            owner_occupied_hu.setVisible(ctrl[0].checked);
            owner_occupied_hu.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "renter_occupied_hu":
            renter_occupied_hu.setVisible(ctrl[0].checked);
            renter_occupied_hu.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "pct_renters":
            pct_renters.setVisible(ctrl[0].checked);
            pct_renters.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "pct_renter_occupied_hu":
            pct_renter_occupied_hu.setVisible(ctrl[0].checked);
            pct_renter_occupied_hu.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "pct_hu_1_detached":
            pct_hu_1_detached.setVisible(ctrl[0].checked);
            pct_hu_1_detached.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "potbellyfranchise":
            potbellyfranchise.setVisible(ctrl[0].checked);
            potbellyfranchise.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "ethanolproduction":
            ethanol_production.setVisible(ctrl[0].checked);
            ethanol_production.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "dataCenters":
            dataCenters.setVisible(ctrl[0].checked);
            dataCenters.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "cattle":
            cattle.setVisible(ctrl[0].checked);
            cattlemasked.setVisible(ctrl[0].checked);
            break;
        case "cattletop":
            cattletop.setVisible(ctrl[0].checked);
            cattletop.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

		case "naics":
            naics.setVisible(ctrl[0].checked);
            naics.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

		case "primaryeconomictype":
            primaryeconomictype.setVisible(ctrl[0].checked);
            primaryeconomictype.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
		case "primaryeconomictypetwo":
            primaryeconomictypetwo.setVisible(ctrl[0].checked);
            primaryeconomictypetwo.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
			
        case "buildings":
            buildings.setVisible(ctrl[0].checked);
            buildings.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
			
        case "crops_production":
            crops_production.setVisible(ctrl[0].checked);
            crops_production.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
			
        case "lowincomet":
            lowincomet.setVisible(ctrl[0].checked);
            lowincomet.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "la1and10":
            la1and10.setVisible(ctrl[0].checked);
            la1and10.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "latracts_h":
            latracts_h.setVisible(ctrl[0].checked);
            latracts_h.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "latracts20":
            latracts20.setVisible(ctrl[0].checked);
            latracts20.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "lilatracts":
            lilatracts.setVisible(ctrl[0].checked);
            lilatracts.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
			
        case "ggtAP":
            naicsgrainger.setVisible(ctrl[0].checked);
            naicsgrainger.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "ggtEmp":
            naicsgrainger.setVisible(ctrl[0].checked);
            naicsgrainger.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "ggtEst":
            naicsgrainger.setVisible(ctrl[0].checked);
            naicsgrainger.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
			
        case "bankzip2012":
            bankzip2012.setVisible(ctrl[0].checked);
            bankzip2012.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "bankzip2016":
            bankzip2016.setVisible(ctrl[0].checked);
            bankzip2016.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "bankzip2017":
            bankzip2017.setVisible(ctrl[0].checked);
            bankzip2017.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "bankcountyDeposit2012":
            bankcountydep2012.setVisible(ctrl[0].checked);
            bankcountydep2012.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "bankcountyDeposit2016":
            bankcountydep2016.setVisible(ctrl[0].checked);
            bankcountydep2016.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "bankcountyDeposit2017":
            bankcountydep2017.setVisible(ctrl[0].checked);
            bankcountydep2017.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "bankcountyAsset2012":
            bankcountyasset2012.setVisible(ctrl[0].checked);
            bankcountyasset2012.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "bankcountyAsset2016":
            bankcountyasset2016.setVisible(ctrl[0].checked);
            bankcountyasset2016.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "bankcountyAsset2017":
            bankcountyasset2017.setVisible(ctrl[0].checked);
            bankcountyasset2017.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
		case 'bankcountydepchangeone':
			bankcountydepchangeone.setVisible(ctrl[0].checked);
			bankcountydepchangeone.set('displayInLayerSwitcher', ctrl[0].checked);
			break;
		case 'bankcountydepchangeoneper':
			bankcountydepchangeoneper.setVisible(ctrl[0].checked);
			bankcountydepchangeoneper.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
		case 'bankcountydepchangefive':
			bankcountydepchangefive.setVisible(ctrl[0].checked);
			bankcountydepchangefive.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case 'bankcountydepchangefiveper':
			bankcountydepchangefiveper.setVisible(ctrl[0].checked);
			bankcountydepchangefiveper.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case 'bankcountyasschangeone':
			bankcountyasschangeone.setVisible(ctrl[0].checked);
			bankcountyasschangeone.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
		case 'bankcountyasschangeoneper':
			bankcountyasschangeoneper.setVisible(ctrl[0].checked);
			bankcountyasschangeoneper.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
		case 'bankcountyasschangefive':
			bankcountyasschangefive.setVisible(ctrl[0].checked);
			bankcountyasschangefive.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
		case 'bankcountyasschangefiveper':
			bankcountyasschangefiveper.setVisible(ctrl[0].checked);
			bankcountyasschangefiveper.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "enterprisebuildings":
            enterprisebuildings.setVisible(ctrl[0].checked);
            enterprisebuildings.set('displayInLayerSwitcher', ctrl[0].checked);
            dat = true;
            break;
        case "networkbuildings":
            networkbuildings.setVisible(ctrl[0].checked);
            networkbuildings.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "airport":
            if ($('#switchRadiusTpt').prop('checked'))
                radiusAirportLayer.setVisible(ctrl[0].checked);
            airport.setVisible(ctrl[0].checked);
            airport.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "freightnetwork":
            freightWMS.setVisible(ctrl[0].checked);
            freightWMS.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "railway":
            railwayWMS.setVisible(ctrl[0].checked);
            railwayWMS.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "farmer":
            farmer.setVisible(ctrl[0].checked);
            farmer.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "logos":
            logo.setVisible(ctrl[0].checked);
            logo.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "stores":
            stores.setVisible(ctrl[0].checked);
            stores.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusPrimary').prop('checked'))
                radiusStoresLayer.setVisible(ctrl[0].checked);
            break;
        case "shelter":
            shelter.setVisible(ctrl[0].checked);
            shelter.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusOwn').prop('checked'))
                radiusShelterLayer.setVisible(ctrl[0].checked);
            break;
        case "unitsa":
            unitsa.setVisible(ctrl[0].checked);
            unitsa.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusOwn').prop('checked'))
                radiusUnitsALayer.setVisible(ctrl[0].checked);
            break;
        case "unitsb":
            unitsb.setVisible(ctrl[0].checked);
            unitsb.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusOwn').prop('checked'))
                radiusUnitsBLayer.setVisible(ctrl[0].checked);
            break;
        case "potbellytwo":
            potbellytwo.setVisible(ctrl[0].checked);
            potbellytwo.set('displayInLayerSwitcher', ctrl[0].checked);
            // if ($('#switchRadiusOwn').prop('checked'))
                // radiusShelterLayer.setVisible(ctrl[0].checked);
            break;
        case "railway":
            railwayWMS.setVisible(ctrl[0].checked);
            railwayWMS.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "highwaynetwork":
            highwayWMS.setVisible(ctrl[0].checked);
            highwayWMS.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "datafiber":
            metrobackboneWMS.setVisible(ctrl[0].checked);
            metrolateralWMS.setVisible(ctrl[0].checked);
            canadalonghaulnetworkWMS.setVisible(ctrl[0].checked);
            longhaulnetworkWMS.setVisible(ctrl[0].checked);
            ownedlonghaulnetworkWMS.setVisible(ctrl[0].checked);
			
            metrobackboneWMS.set('displayInLayerSwitcher', ctrl[0].checked);
            metrolateralWMS.set('displayInLayerSwitcher', ctrl[0].checked);
            canadalonghaulnetworkWMS.set('displayInLayerSwitcher', ctrl[0].checked);
            longhaulnetworkWMS.set('displayInLayerSwitcher', ctrl[0].checked);
            ownedlonghaulnetworkWMS.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "interchange":
            if ($('#switchRadiusTpt').prop('checked'))
                radiusInterchangesLayer.setVisible(ctrl[0].checked);
            interchange.setVisible(ctrl[0].checked);
            interchange.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "transNetwork":
            transNetWMS.setVisible(ctrl[0].checked);
            transNetWMS.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "transStops":
            if ($('#switchRadiusTpt').prop('checked'))
                radiusTransitstopLayer.setVisible(ctrl[0].checked);
            transStop.setVisible(ctrl[0].checked);
            transStop.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "iana":
            if ($('#switchRadiusTpt').prop('checked'))
                radiusIanaLayer.setVisible(ctrl[0].checked);
            iana.setVisible(ctrl[0].checked);
            iana.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "ports":
            if ($('#switchRadiusTpt').prop('checked'))
                radiusPortsLayer.setVisible(ctrl[0].checked);
            ports.setVisible(ctrl[0].checked);
            ports.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "freightInt":
            if ($('#switchRadiusTpt').prop('checked'))
                radiusFreightIntLayer.setVisible(ctrl[0].checked);
            freightIntersects.setVisible(ctrl[0].checked);
            freightIntersects.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "portfacility":
            if ($('#switchRadiusTpt').prop('checked'))
                radiusPortfacilityLayer.setVisible(ctrl[0].checked);
            portFacility.setVisible(ctrl[0].checked);
            portFacility.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "portBound":
            portBoundaryWMS.setVisible(ctrl[0].checked);
            portBoundaryWMS.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "hotsprings":
            if ($('#switchRadiusOwn').prop('checked'))
                radiusHotSpringsLayer.setVisible(ctrl[0].checked);
            hot_springs.setVisible(ctrl[0].checked);
            hot_springs.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "landbanks":
            if ($('#switchRadiusOwn').prop('checked'))
                radiusLandBanksLayer.setVisible(ctrl[0].checked);
            landbanks.setVisible(ctrl[0].checked);
            landbanks.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "garden":
            garden.setVisible(ctrl[0].checked);
            garden.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "natural":
            natural.setVisible(ctrl[0].checked);
            natural.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "destinations":
            manmade_destinations.setVisible(ctrl[0].checked);
            manmade_destinations.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "faith":
            manmade_faith.setVisible(ctrl[0].checked);
            manmade_faith.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "govt":
            manmade_govt_places.setVisible(ctrl[0].checked);
            manmade_govt_places.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "infrastructure":
            manmade_infrastructure.setVisible(ctrl[0].checked);
            manmade_infrastructure.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "public":
            manmade_public_spaces.setVisible(ctrl[0].checked);
            manmade_public_spaces.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "retail":
            manmade_retail_prices.setVisible(ctrl[0].checked);
            manmade_retail_prices.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "eqi":
            eqi.setVisible(ctrl[0].checked);
            eqi.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "wdpa":
            wdpa.setVisible(ctrl[0].checked);
            wdpa.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "drought":
            drought.setVisible(ctrl[0].checked);
            drought.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "droughtmonitor":
            droughtmonitor.setVisible(ctrl[0].checked);
            droughtmonitor.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "aquifer":
            aquifer.setVisible(ctrl[0].checked);
            aquifer.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "alluvialandglacial":
            alluvialandglacial.setVisible(ctrl[0].checked);
            alluvialandglacial.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "majorsoilresource":
            majorsoilresource.setVisible(ctrl[0].checked);
            majorsoilresource.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "birds":
            birds.setVisible(ctrl[0].checked);
            birds.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "fish":
            fish.setVisible(ctrl[0].checked);
            fish.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "mammals":
            mammals.setVisible(ctrl[0].checked);
            mammals.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "reptiles":
            reptiles.setVisible(ctrl[0].checked);
            reptiles.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "trees":
            trees.setVisible(ctrl[0].checked);
            trees.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "dni":
            dni.setVisible(ctrl[0].checked);
            dni.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "ghi":
            ghi.setVisible(ctrl[0].checked);
            ghi.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "lalit":
            lalit.setVisible(ctrl[0].checked);
            lalit.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "phm":
            phm.setVisible(ctrl[0].checked);
            phm.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "phmzip":
            phmzip.setVisible(ctrl[0].checked);
            phmzip.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "corn":
            corn.setVisible(ctrl[0].checked);
            cornno.setVisible(ctrl[0].checked);
            break;

        case "cbrands":
            cbrands.setVisible(ctrl[0].checked);
            cbrands.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "padus":
            padus.setVisible(ctrl[0].checked);
            padus.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "naicsgrainger":
            naicsgrainger.setVisible(ctrl[0].checked);
            naicsgrainger.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "naicsap":
            naicsap.setVisible(ctrl[0].checked);
            naicsap.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "naicsest":
            naicsest.setVisible(ctrl[0].checked);
            naicsest.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "ranches":
            ranchesandfarms.setVisible(ctrl[0].checked);
            ranchesandfarms.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "fedex":
            fedex.setVisible(ctrl[0].checked);
            fedex.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "dhl":
            dhl.setVisible(ctrl[0].checked);
            dhl.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "ups":
            ups.setVisible(ctrl[0].checked);
            ups.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "dma":
            dma.setVisible(ctrl[0].checked);
            dma.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusDC').prop('checked'))
                radiusDMALayer.setVisible(ctrl[0].checked);
            break;
        case "mclane":
            mclane.setVisible(ctrl[0].checked);
            mclane.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusDC').prop('checked'))
                radiusMclaneLayer.setVisible(ctrl[0].checked);
            break;
        case "amazon":
            amazon.setVisible(ctrl[0].checked);
            amazon.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusDC').prop('checked'))
                radiusAmazonLayer.setVisible(ctrl[0].checked);
            break;
        case "sysco":
            sysco.setVisible(ctrl[0].checked);
            sysco.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusDC').prop('checked'))
                radiusSyscoLayer.setVisible(ctrl[0].checked);
            break;
        case "robinsonfresh":
            robinsonfresh.setVisible(ctrl[0].checked);
            robinsonfresh.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusDC').prop('checked'))
                radiusRobinsonFreshLayer.setVisible(ctrl[0].checked);
            break;
        case "kehe":
            kehe.setVisible(ctrl[0].checked);
            kehe.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusDC').prop('checked'))
                radiusKeHELayer.setVisible(ctrl[0].checked);
            break;
        case "pfgpfs":
            pfgpfs.setVisible(ctrl[0].checked);
            pfgpfs.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusDC').prop('checked'))
                radiusPFGPSFLayer.setVisible(ctrl[0].checked);
            break;
        case "dmadcs":
            dmadcs.setVisible(ctrl[0].checked);
            dmadcs.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusDC').prop('checked'))
                radiusDmaDcsLayer.setVisible(ctrl[0].checked);
            break;
        case "sygma":
            sygma.setVisible(ctrl[0].checked);
            sygma.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusDC').prop('checked'))
                radiusSygmaLayer.setVisible(ctrl[0].checked);
            break;
        case "vistar":
            vistar.setVisible(ctrl[0].checked);
            vistar.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusDC').prop('checked'))
                radiusVistarLayer.setVisible(ctrl[0].checked);
            break;
        case "usf":
            usf.setVisible(ctrl[0].checked);
            usf.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusDC').prop('checked'))
                radiusUsfLayer.setVisible(ctrl[0].checked);
            break;

        case "albertsons":
            albertsons.setVisible(ctrl[0].checked);
            albertsons.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusFoodHome').prop('checked'))
                radiusAlbertsonsLayer.setVisible(ctrl[0].checked);
            break;
        case "kroger":
            kroger.setVisible(ctrl[0].checked);
            kroger.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusFoodHome').prop('checked'))
                radiusKrogerLayer.setVisible(ctrl[0].checked);
            break;
        case "culver":
            culver.setVisible(ctrl[0].checked);
            culver.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusFoodAway').prop('checked'))
                radiusCulverLayer.setVisible(ctrl[0].checked);
            break;
        case "potbelly":
            potbelly.setVisible(ctrl[0].checked);
            potbelly.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusFoodAway').prop('checked'))
                radiusPotbellyLayer.setVisible(ctrl[0].checked);
            break;
        case "starbucks":
            starbucks.setVisible(ctrl[0].checked);
            starbucks.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusFoodAway').prop('checked'))
                radiusStarBucksLayer.setVisible(ctrl[0].checked);
            break;
        case "fiveguys":
            fiveguys.setVisible(ctrl[0].checked);
            fiveguys.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusFoodAway').prop('checked'))
                radiusFiveGuysLayer.setVisible(ctrl[0].checked);
            break;
        case "raisingcanes":
            raisingcanes.setVisible(ctrl[0].checked);
            raisingcanes.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusFoodAway').prop('checked'))
                radiusRaisingCanesLayer.setVisible(ctrl[0].checked);
            break;
        case "aldiSixteen":
            aldiSixteen.setVisible(ctrl[0].checked);
            aldiSixteen.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($(switchRadiusFoodSuperMarket).prop('checked'))
                radiusAldiSixteenLayer.setVisible(ctrl[0].checked);
            break;
        case "aldiSixteenClosed":
            aldiSixteenClosed.setVisible(ctrl[0].checked);
            aldiSixteenClosed.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($(switchRadiusFoodSuperMarket).prop('checked'))
                radiusAldiSixteenClosedLayer.setVisible(ctrl[0].checked);
            break;
        case "aldiEighteen":
            aldiEighteen.setVisible(ctrl[0].checked);
            aldiEighteen.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusFoodSuperMarket').prop('checked'))
                radiusAldiEighteenLayer.setVisible(ctrl[0].checked);
            break;
        case "aldiEighteenNew":
            aldiEighteenNew.setVisible(ctrl[0].checked);
            aldiEighteenNew.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusFoodSuperMarket').prop('checked'))
                radiusAldiEighteenNewLayer.setVisible(ctrl[0].checked);
            break;
        case "thornton":
            thornton.setVisible(ctrl[0].checked);
            thornton.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusFoodAway').prop('checked'))
                radiusThorntonLayer.setVisible(ctrl[0].checked);
            break;
        case "dicks":
            dicks.setVisible(ctrl[0].checked);
            dicks.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusPrimary').prop('checked'))
                radiusDicksLayer.setVisible(ctrl[0].checked);
            break;
        case "keef":
            keef.setVisible(ctrl[0].checked);
            keef.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusPrimary').prop('checked'))
                radiusKeefLayer.setVisible(ctrl[0].checked);
            break;
        case "parkway":
            parkway.setVisible(ctrl[0].checked);
            parkway.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusPrimary').prop('checked'))
                radiusParkwayLayer.setVisible(ctrl[0].checked);
            break;
        case "tartan":
            tartan.setVisible(ctrl[0].checked);
            tartan.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusPrimary').prop('checked'))
                radiusTartanLayer.setVisible(ctrl[0].checked);
            break;
        case "uhaul":
            uhaul.setVisible(ctrl[0].checked);
            uhaul.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusPrimary').prop('checked'))
                radiusUhaulLayer.setVisible(ctrl[0].checked);
            break;
        case "fairgrounds":
            fairgrounds.setVisible(ctrl[0].checked);
            fairgrounds.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusPrimary').prop('checked'))
                radiusFairgroundLayer.setVisible(ctrl[0].checked);
            break;
        case "paca":
            paca.setVisible(ctrl[0].checked);
            paca.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusPrimary').prop('checked'))
                switchRadiusOL.setVisible(ctrl[0].checked);
            break;
        case "poultryfacilities":
            poultryfacilities.setVisible(ctrl[0].checked);
            poultryfacilities.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusPrimary').prop('checked'))
                switchRadiusOL.setVisible(ctrl[0].checked);
            break;
        case "fortune":
            fortune.setVisible(ctrl[0].checked);
            fortune.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusPrimary').prop('checked'))
                radiusFortuneLayer.setVisible(ctrl[0].checked);
            break;
        case "tapetro":
            tapetro.setVisible(ctrl[0].checked);
            tapetro.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusPrimary').prop('checked'))
                radiusTAPetroLayer.setVisible(ctrl[0].checked);
            break;
        case "ethanolPlants":
            ethanol.setVisible(ctrl[0].checked);
            ethanol.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusPrimary').prop('checked'))
                radiusEthanolLayer.setVisible(ctrl[0].checked);
            break;
        case "biodieselplants":
            biodieselplants.setVisible(ctrl[0].checked);
            biodieselplants.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusEnergy').prop('checked'))
                radiusBiodieselLayer.setVisible(ctrl[0].checked);
            break;
        case "oilrefineries":
            oilrefineries.setVisible(ctrl[0].checked);
            oilrefineries.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusEnergy').prop('checked'))
                radiusOilrefineriesLayer.setVisible(ctrl[0].checked);
            break;
        case "oilrefineries":
            naturalgasWMS.setVisible(ctrl[0].checked);
            naturalgasWMS.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "grainger":
            grainger.setVisible(ctrl[0].checked);
            grainger.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusPrimary').prop('checked'))
                radiusGraingerLayer.setVisible(ctrl[0].checked);
            break;
        case "brown":
            brownfields.setVisible(ctrl[0].checked);
            brownfields.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusPrimary').prop('checked'))
                radiusBrownFieldsLayer.setVisible(ctrl[0].checked);
            break;
        case "publix":
            publix.setVisible(ctrl[0].checked);
            publix.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusFoodHome').prop('checked'))
                radiusPublixLayer.setVisible(ctrl[0].checked);
            break;
        case "gianteagle":
            gianteagle.setVisible(ctrl[0].checked);
            gianteagle.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusFoodHome').prop('checked'))
                radiusGiantEagleLayer.setVisible(ctrl[0].checked);
            break;
        case "traderjoes":
            traderjoes.setVisible(ctrl[0].checked);
            traderjoes.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusFoodHome').prop('checked'))
                radiusTraderJoesLayer.setVisible(ctrl[0].checked);
            break;
        case "wholefoods":
            wholefoods.setVisible(ctrl[0].checked);
            wholefoods.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusFoodHome').prop('checked'))
                radiusWholeFoodsLayer.setVisible(ctrl[0].checked);
            break;
        case "shopping":
            shoppingcenter.setVisible(ctrl[0].checked);
            shoppingcenter.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusPrimary').prop('checked'))
                radiusShoppingLayer.setVisible(ctrl[0].checked);
            break;
        case "foodplants":
            foodplants.setVisible(ctrl[0].checked);
            foodplants.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusOL').prop('checked'))
                radiusFoodplantsLayer.setVisible(ctrl[0].checked);
            break;
        case "hydroponics":
            hydroponics.setVisible(ctrl[0].checked);
            hydroponics.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusOL').prop('checked'))
                radiusHydroponicsLayer.setVisible(ctrl[0].checked);
            break;
        case "ngpoperators":
            ngpoperators.setVisible(ctrl[0].checked);
            ngpoperators.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "closings":
            closings.setVisible(ctrl[0].checked);
            closings.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusPrimary').prop('checked'))
                radiusClosingsLayer.setVisible(ctrl[0].checked);
            break;
        case "toysrus":
            toysrus.setVisible(ctrl[0].checked);
            toysrus.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusPrimary').prop('checked'))
                radiusToysrusLayer.setVisible(ctrl[0].checked);
            break;
        case "gymboree":
            gymboree.setVisible(ctrl[0].checked);
            gymboree.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusPrimary').prop('checked'))
                radiusGymboreeLayer.setVisible(ctrl[0].checked);
            break;
        case "agencies":
            agencies.setVisible(ctrl[0].checked);
            agencies.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusFin').prop('checked'))
                radiusAgenciesLayer.setVisible(ctrl[0].checked);
            break;
        case "agent_ca":
            agent_ca.setVisible(ctrl[0].checked);
            agent_ca.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusFin').prop('checked'))
                radiusCALayer.setVisible(ctrl[0].checked);
            break;
        case "agent_za":
            agent_za.setVisible(ctrl[0].checked);
            agent_za.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusFin').prop('checked'))
                radiusZALayer.setVisible(ctrl[0].checked);
            break;
        case "edwardjones":
            edwardjones.setVisible(ctrl[0].checked);
            edwardjones.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusFin').prop('checked'))
                radiusEdwardJonesLayer.setVisible(ctrl[0].checked);
            break;
        case "creditunions":
            creditunions.setVisible(ctrl[0].checked);
            creditunions.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusBanks').prop('checked'))
                radiusCreditUnionsLayer.setVisible(ctrl[0].checked);
            break;
        case "distributor":
            distributor.setVisible(ctrl[0].checked);
            distributor.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "isochrone":
            isoChroneLayer.setVisible(ctrl[0].checked);
            isoChroneLayer.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "timeDist":
            isoChroneLayer.setVisible(ctrl[0].checked);
            isoChroneLayer.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "banks2012":
            banks_2012.setVisible(ctrl[0].checked);
            banks_2012.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "banks2016":
            banks_2016.setVisible(ctrl[0].checked);
            banks_2016.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "banks2017":
            banks_2017.setVisible(ctrl[0].checked);
            banks_2017.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "tstops":
            tstops.setVisible(ctrl[0].checked);
            tstops.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "fr":
            fr.setVisible(ctrl[0].checked);
            fr.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "scr":
            scr.setVisible(ctrl[0].checked);
            scr.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "rr":
            rr.setVisible(ctrl[0].checked);
            rr.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "br":
            br.setVisible(ctrl[0].checked);
            br.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "ccdPrimary":
            primary.setVisible(ctrl[0].checked);
            primary.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "pssPrivate":
            pssprivate.setVisible(ctrl[0].checked);
            pssprivate.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "refrigerated":
            refrigeratedlocations.setVisible(ctrl[0].checked);
            refrigeratedlocations.set('displayInLayerSwitcher', ctrl[0].checked);
            if ($('#switchRadiusRefri').prop('checked'))
                radiusRefriLayer.setVisible(ctrl[0].checked);
            break;
        case "refri":
            refri.setVisible(ctrl[0].checked);
            refri.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "zonesanta":
            SantaBarbara_County_CA.setVisible(ctrl[0].checked);
            SantaBarbara_County_CA.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "zoneriverside":
            Riverside_County_CA.setVisible(ctrl[0].checked);
            Riverside_County_CA.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "zonemiami":
            MiamiDade_County_FL.setVisible(ctrl[0].checked);
            MiamiDade_County_FL.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "zonehoward":
            Howard_County_MD.setVisible(ctrl[0].checked);
            Howard_County_MD.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "zonefresno":
            Fresno_County_CA.setVisible(ctrl[0].checked);
            Fresno_County_CA.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "zoneclark":
            Clark_County_NV.setVisible(ctrl[0].checked);
            Clark_County_NV.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "zonebaltimore":
            Baltimore_County_MD.setVisible(ctrl[0].checked);
            Baltimore_County_MD.set('displayInLayerSwitcher', ctrl[0].checked);
            break;
        case "Portland_ME":
            Portland_ME.setVisible(ctrl[0].checked);
            Portland_ME.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Alexandria_VA":
            Alexandria_VA.setVisible(ctrl[0].checked);
            Alexandria_VA.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Amarillo_TX":
            Amarillo_TX.setVisible(ctrl[0].checked);
            Amarillo_TX.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Anaheim_CA":
            Anaheim_CA.setVisible(ctrl[0].checked);
            Anaheim_CA.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Arlington_TX":
            Arlington_TX.setVisible(ctrl[0].checked);
            Arlington_TX.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Atlanta_GA":
            Atlanta_GA.setVisible(ctrl[0].checked);
            Atlanta_GA.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Aurora_CO":
            Aurora_CO.setVisible(ctrl[0].checked);
            Aurora_CO.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Austin_TX":
            Austin_TX.setVisible(ctrl[0].checked);
            Austin_TX.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Bakersfield_CA":
            Bakersfield_CA.setVisible(ctrl[0].checked);
            Bakersfield_CA.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Baltimore_MD":
            Baltimore_MD.setVisible(ctrl[0].checked);
            Baltimore_MD.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "BatonRouge_LA":
            BatonRouge_LA.setVisible(ctrl[0].checked);
            BatonRouge_LA.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Boston_MA":
            Boston_MA.setVisible(ctrl[0].checked);
            Boston_MA.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Brownsville_TX":
            Brownsville_TX.setVisible(ctrl[0].checked);
            Brownsville_TX.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Cambridge_MA":
            Cambridge_MA.setVisible(ctrl[0].checked);
            Cambridge_MA.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Charlotte_NC":
            Charlotte_NC.setVisible(ctrl[0].checked);
            Charlotte_NC.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Chattanooga_TN":
            Chattanooga_TN.setVisible(ctrl[0].checked);
            Chattanooga_TN.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Chesapeake_VA":
            Chesapeake_VA.setVisible(ctrl[0].checked);
            Chesapeake_VA.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Chicago_IL":
            Chicago_IL.setVisible(ctrl[0].checked);
            Chicago_IL.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Cincinnati_OH":
            Cincinnati_OH.setVisible(ctrl[0].checked);
            Cincinnati_OH.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Cleveland_OH":
            Cleveland_OH.setVisible(ctrl[0].checked);
            Cleveland_OH.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Columbus_OH":
            Columbus_OH.setVisible(ctrl[0].checked);
            Columbus_OH.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Dallas_TX":
            Dallas_TX.setVisible(ctrl[0].checked);
            Dallas_TX.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Dayton_OH":
            Dayton_OH.setVisible(ctrl[0].checked);
            Dayton_OH.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Denver_CO":
            Denver_CO.setVisible(ctrl[0].checked);
            Denver_CO.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "DesMoines_IA":
            DesMoines_IA.setVisible(ctrl[0].checked);
            DesMoines_IA.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Detroit_MI":
            Detroit_MI.setVisible(ctrl[0].checked);
            Detroit_MI.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Durham_NC":
            Durham_NC.setVisible(ctrl[0].checked);
            Durham_NC.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "ElPaso_TX":
            ElPaso_TX.setVisible(ctrl[0].checked);
            ElPaso_TX.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Fargo_ND":
            Fargo_ND.setVisible(ctrl[0].checked);
            Fargo_ND.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Flint_MI":
            Flint_MI.setVisible(ctrl[0].checked);
            Flint_MI.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "FortWayne_IN":
            FortWayne_IN.setVisible(ctrl[0].checked);
            FortWayne_IN.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Fremont_CA":
            Fremont_CA.setVisible(ctrl[0].checked);
            Fremont_CA.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Glendale_AZ":
            Glendale_AZ.setVisible(ctrl[0].checked);
            Glendale_AZ.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Glendale_CA":
            Glendale_CA.setVisible(ctrl[0].checked);
            Glendale_CA.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Hartford_CT":
            Hartford_CT.setVisible(ctrl[0].checked);
            Hartford_CT.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Henderson_NV":
            Henderson_NV.setVisible(ctrl[0].checked);
            Henderson_NV.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Hialeah_FL":
            Hialeah_FL.setVisible(ctrl[0].checked);
            Hialeah_FL.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "HuntingtonBeach_CA":
            HuntingtonBeach_CA.setVisible(ctrl[0].checked);
            HuntingtonBeach_CA.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Huntsville_AL":
            Huntsville_AL.setVisible(ctrl[0].checked);
            Huntsville_AL.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Indianapolis_IN":
            Indianapolis_IN.setVisible(ctrl[0].checked);
            Indianapolis_IN.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Irvine_CA":
            Irvine_CA.setVisible(ctrl[0].checked);
            Irvine_CA.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "KansasCity_MO":
            KansasCity_MO.setVisible(ctrl[0].checked);
            KansasCity_MO.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Kent_WA":
            Kent_WA.setVisible(ctrl[0].checked);
            Kent_WA.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Laredo_TX":
            Laredo_TX.setVisible(ctrl[0].checked);
            Laredo_TX.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "LasCruces_NM":
            LasCruces_NM.setVisible(ctrl[0].checked);
            LasCruces_NM.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "LasVegas_NV":
            LasVegas_NV.setVisible(ctrl[0].checked);
            LasVegas_NV.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Lexington_KY":
            Lexington_KY.setVisible(ctrl[0].checked);
            Lexington_KY.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Lincoln_NE":
            Lincoln_NE.setVisible(ctrl[0].checked);
            Lincoln_NE.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "LongBeach_CA":
            LongBeach_CA.setVisible(ctrl[0].checked);
            LongBeach_CA.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "LosAngeles_CA":
            LosAngeles_CA.setVisible(ctrl[0].checked);
            LosAngeles_CA.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Lowell_MA":
            Lowell_MA.setVisible(ctrl[0].checked);
            Lowell_MA.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Madison_WI":
            Madison_WI.setVisible(ctrl[0].checked);
            Madison_WI.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Memphis_TN":
            Memphis_TN.setVisible(ctrl[0].checked);
            Memphis_TN.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Milwaukee_WI":
            Milwaukee_WI.setVisible(ctrl[0].checked);
            Milwaukee_WI.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Minneapolis_MN":
            Minneapolis_MN.setVisible(ctrl[0].checked);
            Minneapolis_MN.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "NewOrleans_LA":
            NewOrleans_LA.setVisible(ctrl[0].checked);
            NewOrleans_LA.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "NewYorkCity_NY":
            NewYorkCity_NY.setVisible(ctrl[0].checked);
            NewYorkCity_NY.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Newark_NJ":
            Newark_NJ.setVisible(ctrl[0].checked);
            Newark_NJ.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "NewportBeach_CA":
            NewportBeach_CA.setVisible(ctrl[0].checked);
            NewportBeach_CA.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Norfolk_VA":
            Norfolk_VA.setVisible(ctrl[0].checked);
            Norfolk_VA.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "NorthLasVegas_NV":
            NorthLasVegas_NV.setVisible(ctrl[0].checked);
            NorthLasVegas_NV.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Oakland_CA":
            Oakland_CA.setVisible(ctrl[0].checked);
            Oakland_CA.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Omaha_NE":
            Omaha_NE.setVisible(ctrl[0].checked);
            Omaha_NE.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Orlando_FL":
            Orlando_FL.setVisible(ctrl[0].checked);
            Orlando_FL.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Philadelphia_PA":
            Philadelphia_PA.setVisible(ctrl[0].checked);
            Philadelphia_PA.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Phoenix_AZ":
            Phoenix_AZ.setVisible(ctrl[0].checked);
            Phoenix_AZ.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Pittsburgh_PA":
            Pittsburgh_PA.setVisible(ctrl[0].checked);
            Pittsburgh_PA.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Portland_ME":
            Portland_ME.setVisible(ctrl[0].checked);
            Portland_ME.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Portland_OR":
            Portland_OR.setVisible(ctrl[0].checked);
            Portland_OR.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Providence_RI":
            Providence_RI.setVisible(ctrl[0].checked);
            Providence_RI.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Raleigh_NC":
            Raleigh_NC.setVisible(ctrl[0].checked);
            Raleigh_NC.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Richmond_VA":
            Richmond_VA.setVisible(ctrl[0].checked);
            Richmond_VA.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Rochester_NY":
            Rochester_NY.setVisible(ctrl[0].checked);
            Rochester_NY.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Sacramento_CA":
            Sacramento_CA.setVisible(ctrl[0].checked);
            Sacramento_CA.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "SaltLakeCity_UT":
            SaltLakeCity_UT.setVisible(ctrl[0].checked);
            SaltLakeCity_UT.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "SanDiego_CA":
            SanDiego_CA.setVisible(ctrl[0].checked);
            SanDiego_CA.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "SanFrancisco_CA":
            SanFrancisco_CA.setVisible(ctrl[0].checked);
            SanFrancisco_CA.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "SanJose_CA":
            SanJose_CA.setVisible(ctrl[0].checked);
            SanJose_CA.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "SantaRosa_CA":
            SantaRosa_CA.setVisible(ctrl[0].checked);
            SantaRosa_CA.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Seattle_WA":
            Seattle_WA.setVisible(ctrl[0].checked);
            Seattle_WA.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "SimiValley_CA":
            SimiValley_CA.setVisible(ctrl[0].checked);
            SimiValley_CA.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Somerville_MA":
            Somerville_MA.setVisible(ctrl[0].checked);
            Somerville_MA.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "SouthBurlington_VT":
            SouthBurlington_VT.setVisible(ctrl[0].checked);
            SouthBurlington_VT.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "StLouis_MO":
            StLouis_MO.setVisible(ctrl[0].checked);
            StLouis_MO.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Stockton_CA":
            Stockton_CA.setVisible(ctrl[0].checked);
            Stockton_CA.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Tacoma_WA":
            Tacoma_WA.setVisible(ctrl[0].checked);
            Tacoma_WA.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Tallahassee_FL":
            Tallahassee_FL.setVisible(ctrl[0].checked);
            Tallahassee_FL.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Tampa_FL":
            Tampa_FL.setVisible(ctrl[0].checked);
            Tampa_FL.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Toledo_OH":
            Toledo_OH.setVisible(ctrl[0].checked);
            Toledo_OH.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Tucson_AZ":
            Tucson_AZ.setVisible(ctrl[0].checked);
            Tucson_AZ.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Tulsa_OK":
            Tulsa_OK.setVisible(ctrl[0].checked);
            Tulsa_OK.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "VirginiaBeach_VA":
            VirginiaBeach_VA.setVisible(ctrl[0].checked);
            VirginiaBeach_VA.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Washington_DC":
            Washington_DC.setVisible(ctrl[0].checked);
            Washington_DC.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Wichita_KS":
            Wichita_KS.setVisible(ctrl[0].checked);
            Wichita_KS.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "WinstonSalem_NC":
            WinstonSalem_NC.setVisible(ctrl[0].checked);
            WinstonSalem_NC.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "Worcester_MA":
            Worcester_MA.setVisible(ctrl[0].checked);
            Worcester_MA.set('displayInLayerSwitcher', ctrl[0].checked);
            break;

        case "voronoiPolygons":
            voronoiPolygons.setVisible(ctrl[0].checked);
            voronoiPolygons.set('displayInLayerSwitcher', ctrl[0].checked);
            dat = true;
            break;

        case "voronoiPoints":
            voronoiPoints.setVisible(ctrl[0].checked);
            voronoiPoints.set('displayInLayerSwitcher', ctrl[0].checked);
            dat = true;
            break;
    }
}

function changeBaseMap() {
	try{map.removeControl(swipe);}catch(ex){}
    bingAerial.setVisible(false);
    terrainStamen.setVisible(false);
    bingRoads.setVisible(false);
    osmLight.setVisible(false);

    switch ($("#selBaseMap").val()) {
        case 'aerial':
            bingAerial.setVisible(true);
            break;
        case 'terrain':
            terrainStamen.setVisible(true);
            break;
        case 'streets':
            bingRoads.setVisible(true);
            break;
        case 'osm':
            osmLight.setVisible(true);
            break;
        default:
            break;
    }
    updatePermalink();
	mapSwipeOptions();
	
	try
	{
		if(user)
		{
			$.ajax({
				type: "GET",
				url: "getSavedProjects.php",
				cache: false,
				success: function(data)
				{
					var select = $("#projects");
					var list = [];
					var projects = JSON.parse(data);
				
					list.push('<option value="none"> Nothing</option>');	
					for(i=0; i < projects.length; i++)
					{
						if(projects[i].id == project_id)
							list.push('<option data-subtext="' + projects[i].latest + '" value="' + projects[i].id + '" selected>' + projects[i].title + ' -- </option>');
						else
							list.push('<option data-subtext="' + projects[i].latest + '" value="' + projects[i].id + '">' + projects[i].title + ' -- </option>');
					}
					select.html(list.join(''));
					select.selectpicker('refresh');
				}
			});
			
			map.getView().setCenter(mapCenter);
			map.getView().setZoom(mapZoom);
			map.getView().setRotation(mapRotation);
			
			if(selectedIcon == '1' || selectedIcon == '2')
				handleIcons('logoicon');
			if(selectedIcon == '3')
				handleIcons('cluster');
			if(selectedIcon == '4')
				handleIcons('voronoi');
			
			$('.selectpicker').selectpicker('refresh');
			
			try{$("#iptRadiusOpacity").slider('value',radiusOpacity);}catch(e){}
			try{$( "#radiushandle" ).text( $("#iptRadiusOpacity").slider( "value" ) );}catch(e){}
			
			try{$("#iptOpacityUrban").slider('value',lowincometrans);}catch(e){}
			try{$( "#urbanhandle" ).text( $("#iptOpacityUrban").slider( "value" ) );}catch(e){}
			
			addPrimaryData();
			addClosingsData();
			addOwnData();
			addManmadeData();
			addTptData();
			addSchoolData();
			addUrbanRuralIncome();
			addBanksData();
			addFoodProd();
			addCommodities();
			addDCData();
			addRefrigeratedData();
			addFoodHomeData();
			addRetailData();
			addFoodAwayData();
			addFoodSuperMarket();
			
			// activateVorArea(null);
			
			switch (selectedVoronoiCB){
				case 'DC':
					$("#cbDCVoronoi").click();
					$("#voroDCAreaType").val(level);
				break;
				case 'Ref':
					$("#cbRefVoronoi").click();
					$("#voroRefAreaType").val(level);
				break;
				case 'FoodAway':
					$("#cbFoodAwayVoronoi").click();
					$("#voroFoodAwayAreaType").val(level);
				break;
				case 'FoodHome':
					$("#cbFoodHomeVoronoi").click();
					$("#voroFoodHomeAreaType").val(level);
				break;
				case 'FoodSuperMarket':
					$("#cbFoodSuperMarketVoronoi").click();
					$("#voroFoodSuperMarketAreaType").val(level);
				break;
				case 'Food':
					$("#cbFoodVoronoi").click();
					$("#voroFoodAreaType").val(level);
				break;
				case 'Beverages':
					$("#cbBeveragesVoronoi").click();
					$("#voroBeveragesAreaType").val(level);
				break;
				case 'Primary':
					$("#cbPrimaryVoronoi").click();
					$("#voroPrimaryAreaType").val(level);
				break;
				case 'Energy':
					$("#cbEnergyVoronoi").click();
					$("#voroEnergyAreaType").val(level);
				break;
				case 'Own':
					$("#cbOwnVoronoi").click();
					$("#voroOwnAreaType").val(level);
				break;
				case 'TPT':
					$("#cbTptVoronoi").click();
					$("#voroTptAreaType").val(level);
				break;
				case 'Schools':
					$("#cbSchoolsVoronoi").click();
					$("#voroSchoolsAreaType").val(level);
				break;
				case 'Banks':
					$("#cbBanksVoronoi").click();
					$("#voroBanksAreaType").val(level);
				break;
				case 'Hospitals':
					$("#cbVoronoi").click();
					$("#voroAreaType").val(level);
				break;
				case 'HealthFacilities':
					$("#cbHealthFacilitiesVoronoi").click();
					$("#voroHealthFacilitiesAreaType").val(level);
				break;
			}
			
			$('.selectpicker').selectpicker('refresh');
		}
		if($('#primaryData').val().length > 0)
		{
			$("#refPrimary").click();
		}
		if($('#ownData').val().length > 0)
		{
			$("#refOwn").click();
		}
		if($('#tptData').val().length > 0)
		{
			$("#refTransport").click();
		}
		if($('#schoolData').val().length > 0)
		{
			$("#refSchool").click();
		}
		if($('#urbanRuralIncomeSelect').val().length > 0)
		{
			$("#refLowIncome").click();
		}
		if($('#bankData').val().length > 0)
		{
			$("#refBank").click();
		}
		
		if($('#foodData').val().length > 0)
		{
			$("#refFoodProd").click();
		}
		if($('#commoditiesSelect').val().length > 0)
		{
			$("#refCommodities").click();
		}
		if($('#beveragesSelect').val().length > 0)
		{
			$("#refBeverages").click();
		}
		if($('#dcData').val().length > 0)
		{
			$("#refDC").click();
		}
		if($('#refrigeratedData').val().length > 0)
		{
			$("#refRefrigerated").click();
		}
		if($('#selFoodHome').val().length > 0)
		{
			$("#refFoodHome").click();
		}
		if($('#selFoodaway').val().length > 0)
		{
			$("#refFoodAway").click();
		}
		if($('#selFoodSuperMarket').val().length > 0)
		{
			$("#refSupermarkets").click();
		}
		
		if($('#selHealthBoundary').val().length > 0)
		{
			$("#refHealthBoundary").click();
		}
		if($('#selHealthCond').val() !== "none")
		{
			$("#refHealthConditions").click();
		}
		
		if($('#socialSelect').val() !== "none")
		{
			$("#refCondSocial").click();
		}
		else if($('#economicSelect').val() !== "none")
		{
			$("#refCondEcono").click();
		}
		else if($('#businessActivitySelect').val() !== "none")
		{
			$("#refCondBusiness").click();
		}
		else if($('#banksActivitySelect').val() !== "none")
		{
			$("#refCondBanks").click();
		}
		else if($('#residentsSelect').val() !== "none")
		{
			$("#refCondResidents").click();
		}
		else if($('#urbanruralSelect').val() !== "none")
		{
			$("#refCondUrbanRuralIncome").click();
		}
		if($('#enviroSelect').val() !== "none")
		{
			$("#refCondEnviro").click();
		}
		else if($('#urbanruralFoodAccessSelect').val() !== "none")
		{
			$("#refCondUrbanRuralEnviro").click();
		}
	}
	catch(ex){}
}

function mapSwipeOptions() {
    switch ($("#selMapSwipe").val()) {
        case 'off':
            try {
                map.removeControl(swipe);
            } catch (ex) {}
            bingRoads.setVisible(false);

            $("optgroup[label='Orientation']").children().prop('disabled', true);
            $('#selMapSwipe').selectpicker('refresh');
            break;
        case 'on':
            bingRoads.setVisible(false);
            terrainStamen.setVisible(false);
            bingAerial.setVisible(false);
            osmLight.setVisible(false);

            swipe = new ol.control.Swipe();
            map.addControl(swipe);

            switch ($("#selBaseMap").val()) {
                case 'aerial':
                    bingAerial.setVisible(true);
                    swipe.addLayer(bingAerial);
                    break;
                case 'terrain':
                    terrainStamen.setVisible(true);
                    swipe.addLayer(terrainStamen);
                    break;
                case 'osm':
                    osmLight.setVisible(true);
                    swipe.addLayer(osmLight);
                    break;
                case 'streets':
                    bingAerial.setVisible(true);
                    break;
                default:
                    break;
            }

            bingRoads.setVisible(true);
            swipe.addLayer(bingRoads, true);

            $("optgroup[label='Orientation']").children().prop('disabled', false);
            $('#selMapSwipe').selectpicker('refresh');
            break;
        case 'vertical':
            swipe.set('orientation', 'vertical');
            break;
        case 'horizontal':
            swipe.set('orientation', 'horizontal');
            break;
        default:
            break;
    }
}

function addFoodHomeData() {
    $("#supermarketsDiv").hide();
    $("#optAlbert").hide();
    $("#optKroger").hide();
    $('#farmerLegend').remove();
    $('#storesLegend').remove();
    $("#logosFoodHome").hide();
	$("#divVorFoodHome").hide();
    $("#radiusFoodHome").hide();
    try {
        $("#popup-closer").click();
    } catch (ex) {}
    farmer.setVisible(false);
    stores.setVisible(false);
    albertsons.setVisible(false);
    kroger.setVisible(false);
    publix.setVisible(false);
    gianteagle.setVisible(false);
    traderjoes.setVisible(false);
    wholefoods.setVisible(false);
    stores.setVisible(false);
	
	farmer.set('displayInLayerSwitcher', false);
		
	if ($('#cbFoodHomeVoronoi').is(":checked")) 
		toggleClusterVor('WFS','FoodHome'); 

    radiusFarmerLayer.setVisible(false);
    radiusStoresLayer.setVisible(false);
    radiusAlbertsonsLayer.setVisible(false);
    radiusKrogerLayer.setVisible(false);
    radiusPublixLayer.setVisible(false);
    radiusGiantEagleLayer.setVisible(false);
    radiusTraderJoesLayer.setVisible(false);
    radiusWholeFoodsLayer.setVisible(false);
    var len = 0;
    try {
        len = $("#selFoodHome").val().length;
    } catch (ex) {}
    if (len > 0) {
		if ($('#chkLogo').is(":checked") || $('#chkIcon').is(":checked")) {
			$("#logosFoodHome").show();
			$("#radiusFoodHome").show();
		}
		if ($('#chkVoronoi').is(":checked")) {
			$("#divVorFoodHome").show();
		}
        for (i = 0; i < len; i++) {
			if($("#selFoodHome").val().indexOf("supermarkets") !== -1){
				$("#supermarketsDiv").show();
			}
            switch ($("#selFoodHome").val()[i]) {
                case 'supermarkets':
                    break;

                case 'supercenters':
                    break;

                case 'club':
                    break;

                case 'convenience':
                    break;

                case 'dollar':
                    break;

                case 'farmers':
                    if ($('#switchRadiusFoodHome').prop('checked'))
                        radiusFarmerLayer.setVisible(true); 
					farmer.setVisible(true);
                    addLegendContent('<div id="farmerLegend"><table><tr><td><a id="farmerImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="farmer" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/tractor.png" /></td><td>Farmers</td></tr></table></div>', true, "legendData");
					farmer.set('displayInLayerSwitcher', true);
                    break;

                default:
                    break;
            }
        }
    }
    // addRetailData();
}

function addRetailData() {
    $('#albertsonsLegend').remove();
    $('#krogerLegend').remove();
    $('#publixLegend').remove();
    $('#gianteagleLegend').remove();
    $('#traderjoesLegend').remove();
    $('#wholefoodsLegend').remove();
    $("#logosFoodHome").hide();
	$("#divVorFoodHome").hide();
    $("#radiusFoodHome").hide();
    try {
        $("#popup-closer").click();
    } catch (ex) {}
    $("#optAlbert").hide();
    $("#optKroger").hide();
    albertsons.setVisible(false);
    kroger.setVisible(false);
    publix.setVisible(false);
    gianteagle.setVisible(false);
    traderjoes.setVisible(false);
    wholefoods.setVisible(false);
	
	albertsons.set('displayInLayerSwitcher', false);
	kroger.set('displayInLayerSwitcher', false);
	publix.set('displayInLayerSwitcher', false);
	gianteagle.set('displayInLayerSwitcher', false);
	traderjoes.set('displayInLayerSwitcher', false);
	wholefoods.set('displayInLayerSwitcher', false);

    radiusAlbertsonsLayer.setVisible(false);
    radiusKrogerLayer.setVisible(false);
    radiusPublixLayer.setVisible(false);
    radiusGiantEagleLayer.setVisible(false);
    radiusTraderJoesLayer.setVisible(false);
    radiusWholeFoodsLayer.setVisible(false);

    var len = 0;
    try {
        len = $("#retailData").val().length;
    } catch (ex) {}
    if (len > 0) {
		if ($('#chkLogo').is(":checked") || $('#chkIcon').is(":checked")) {
			$("#logosFoodHome").show();
			$("#radiusFoodHome").show();
		}
		if ($('#chkVoronoi').is(":checked")) {
			$("#divVorFoodHome").show();
		}
        for (i = 0; i < len; i++) {
			if(len==1 && $("#retailData").val().indexOf("albertsons") !== -1){
				$("#optAlbert").show();
			}
			if(len==1 && $("#retailData").val().indexOf("kroger") !== -1){
				$("#optKroger").show();
			}
			// else
				// $("#divVorFoodHome").show();
            switch ($("#retailData").val()[i]) {
                case 'albertsons':
                    $("#optAlbert").show();  
                    break;
                case 'kroger':
                    $("#optKroger").show();  
                    break;

                case 'publix':
                    if ($('#switchRadiusFoodHome').prop('checked'))
                        radiusPublixLayer.setVisible(true);
					publix.setVisible(true);
                    addLegendContent('<div id="publixLegend"><table><tr><td><a id="publixImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="publix" onchange="handleLegend($(this));" checked/></td><td><img height="20px" width="75px" src="images/Icons/retail/publix.png" /></td><td>Publix Stores</td></tr></table></div>', true, "legendData");
					publix.set('displayInLayerSwitcher', true);
                    break;

                case 'gianteagle':
                    if ($('#switchRadiusFoodHome').prop('checked'))
                        radiusGiantEagleLayer.setVisible(true);
					gianteagle.setVisible(true);
                    addLegendContent('<div id="gianteagleLegend"><table><tr><td><a id="gianteagleImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="gianteagle" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="60px" src="images/Icons/retail/GiantEagle/gianteagle.png" /></td><td>Giant Eagle</td></tr></table></div>', true, "legendData");
					gianteagle.set('displayInLayerSwitcher', true);
                    break;

                case 'traderjoes':
                    if ($('#switchRadiusFoodHome').prop('checked'))
                        radiusTraderJoesLayer.setVisible(true);
					traderjoes.setVisible(true);
                    addLegendContent('<div id="traderjoesLegend"><table><tr><td><a id="traderjoesImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="traderjoes" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="50px" src="images/Icons/retail/traderjoes.png" /></td><td>Trader Joe\'s</td></tr></table></div>', true, "legendData");
					traderjoes.set('displayInLayerSwitcher', true);
                    break;

                case 'wholefoods':
                    if ($('#switchRadiusFoodHome').prop('checked'))
                        radiusWholeFoodsLayer.setVisible(true);
					wholefoods.setVisible(true);
                    addLegendContent('<div id="wholefoodsLegend"><table><tr><td><a id="wholefoodsImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="wholefoods" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="50px" src="images/Icons/retail/wholefoods.png" /></td><td>Whole Foods</td></tr></table></div>', true, "legendData");
					wholefoods.set('displayInLayerSwitcher', true);
                    break;

                default:
                    break;
            }
        }
    }
}

function filterAlbertsons() {
    try {
        map.removeLayer(albertsons);
    } catch (ex) {}
    if ($('#switchRadiusFoodHome').prop('checked'))
        $("#switchRadiusFoodHome").click();

    if ($('#switchLabelsFoodHome').prop('checked', false))
        $("#switchLabelsFoodHome").click();

    var len = 0;
    var legend = '';
    $("#albertsonsLegend").remove();
    try {
        len = $("#albertsonsBrands").val().length;
    } catch (ex) {}
    if (len > 0) {
		if ($('#chkLogo').is(":checked") || $('#chkIcon').is(":checked")) {
			$("#logosFoodHome").show();
			$("#radiusFoodHome").show();
		}
		if ($('#chkVoronoi').is(":checked")) {
			$("#divVorFoodHome").show();
		}
        var result = '';
        for (i = 0; i < $("#albertsonsBrands").val().length; i++) {
            result += "\"name\"='" + $("#albertsonsBrands").val()[i] + "' or ";
        }
        result = result.substring(0, result.length - 3);
        legend = '<div id="albertsonsLegend"><table><tr><td><a id="albertsonsImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="albertsons" onchange="handleLegend($(this));" checked/></td><td colspan="2">Albertsons</td></tr>';
        for (i = 0; i < $("#albertsonsBrands").val().length; i++) {
            if ($("#albertsonsBrands").val()[i] == "AcmeMarket")
                legend += '<tr><td colspan="2"></td><td><img height="25px" width="75px" src="images/Icons/retail/Albertsons/1.png" /></td><td>ACME Market</td></tr>';
            if ($("#albertsonsBrands").val()[i] == "Albertsons")
                legend += '<tr><td colspan="2"></td><td><img height="25px" width="75px" src="images/Icons/retail/Albertsons/2.png" /></td><td>Albertsons</td></tr>';
            if ($("#albertsonsBrands").val()[i] == "JewelOsco")
                legend += '<tr><td colspan="2"></td><td><img height="25px" width="50px" src="images/Icons/retail/Albertsons/4.png" /></td><td>Jewel-Osco</td></tr>';
            if ($("#albertsonsBrands").val()[i] == "Lucky")
                legend += '<tr><td colspan="2"></td><td><img height="25px" width="75px" src="images/Icons/retail/Albertsons/5.png" /></td><td>Lucky</td></tr>';
            if ($("#albertsonsBrands").val()[i] == "PakNSave")
                legend += '<tr><td colspan="2"></td><td><img height="25px" width="75px" src="images/Icons/retail/Albertsons/6.png" /></td><td>PAK n SAVE</td></tr>';
            if ($("#albertsonsBrands").val()[i] == "Pavilions")
                legend += '<tr><td colspan="2"></td><td><img height="25px" width="75px" src="images/Icons/retail/Albertsons/7.png" /></td><td>Pavilions</td></tr>';
            if ($("#albertsonsBrands").val()[i] == "Randalls")
                legend += '<tr><td colspan="2"></td><td><img height="25px" width="75px" src="images/Icons/retail/Albertsons/8.png" /></td><td>Randalls</td></tr>';
            if ($("#albertsonsBrands").val()[i] == "Safeway")
                legend += '<tr><td colspan="2"></td><td><img height="25px" width="75px" src="images/Icons/retail/Albertsons/9.png" /></td><td>Safeway</td></tr>';
            if ($("#albertsonsBrands").val()[i] == "Shaws")
                legend += '<tr><td colspan="2"></td><td><img height="25px" width="75px" src="images/Icons/retail/Albertsons/10.png" /></td><td>Shaws</td></tr>';
            if ($("#albertsonsBrands").val()[i] == "StarMarket")
                legend += '<tr><td colspan="2"></td><td><img height="25px" width="75px" src="images/Icons/retail/Albertsons/11.png" /></td><td>Star Marketing</td></tr>';
            if ($("#albertsonsBrands").val()[i] == "TomThumb")
                legend += '<tr><td colspan="2"></td><td><img height="25px" width="75px" src="images/Icons/retail/Albertsons/12.png" /></td><td>Tom Thumb</td></tr>';
            if ($("#albertsonsBrands").val()[i] == "Vons")
                legend += '<tr><td colspan="2"></td><td><img height="25px" width="75px" src="images/Icons/retail/Albertsons/13.png" /></td><td>VONS</td></tr>';
        }
        legend += '</table></div>';
        $("#albertsonsLegend").remove();
        addLegendContent(legend, "albertsons", "legendData");
        albertsons = getFilteredAlbertsons("Albertsons", result);
        map.getLayers().insertAt(244, albertsons);
    }

	if ($('#switchLabelsFoodHome').is(":checked"))
		changeLabelsFoodHome('active');
	
	else
		changeLabelsFoodHome('dull');
}

function filterPotbellyTwo() {
    try {
        map.removeLayer(potbellytwo);
    } catch (ex) {}
    var len = 0;
    var legend = '';
    $("#potbellytwoLegend").remove();
    try {
        len = $("#potbellytwoData").val().length;
    } catch (ex) {}
    if (len > 0) {
        var result = '';
        legend = '<div id="potbellytwoLegend"><table><tr><td><a id="potbellytwoImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="potbellytwo" onchange="handleLegend($(this));" checked/></td><td colspan="2">Distance Analysis</td></tr>';
        for (i = 0; i < $("#potbellytwoData").val().length; i++) {
            if ($("#potbellytwoData").val()[i] == "first"){
				result += "\"differencetwo\"='1' or ";
                legend += '<tr><td><input type="checkbox" id="1" onchange="handlecohort(\'potbellytwo\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#00FF00"></div></td><td>Potbelly locations that are closest to DMA by at least 12 miles</td></tr>';
			}
            if ($("#potbellytwoData").val()[i] == "second"){
				result += "\"differencetwo\"='2' or ";
                legend += '<tr><td><input type="checkbox" id="2" onchange="handlecohort(\'potbellytwo\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#0000FF;"></div></td><td>Potbelly locations that are less than 12 miles (to DMA) to 40 miles to Sysco</td></tr>';
			}
            if ($("#potbellytwoData").val()[i] == "third"){
				result += "\"differencetwo\"='3' or ";
                legend += '<tr><td><input type="checkbox" id="3" onchange="handlecohort(\'potbellytwo\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#FFA500;"></div></td><td>Potbelly locations that are at least 40 miles closer to Sysco</td></tr>';
			}
            if ($("#potbellytwoData").val()[i] == "four"){
				result += "\"differencetwo\"='4' or ";
                legend += '<tr><td><input type="checkbox" id="4" onchange="handlecohort(\'potbellytwo\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#FF0000;"></div></td><td>Potbelly locations that are BOTH at least 100 miles from DMA and at least 50 miles closer to Sysco</td></tr>';
			}
        }
        result = result.substring(0, result.length - 3);
        legend += '</table></div>';
        $("#potbellytwoLegend").remove();
        addLegendContent(legend, "potbellytwo", "legendData");
        potbellytwo = getFilteredAlbertsons("PotbellyTwo", result);
        map.getLayers().insertAt(244, potbellytwo);
    }

	// if ($('#switchLabelsFoodHome').is(":checked"))
		// changeLabelsFoodHome('active');
	
	// else
		// changeLabelsFoodHome('dull');
}

function filterGymboreeBrands() {
    try {
        map.removeLayer(gymboree);
    } catch (ex) {}
    if ($('#switchRadiusPrimary').prop('checked'))
        $("#switchRadiusPrimary").click();

    if ($('#switchLabelsPrimary').prop('checked', false))
        $("#switchLabelsPrimary").click();

    var len = 0;
    var legend = '';
    $("#gymboreeLegend").remove();
    try {
        len = $("#gymboreeBrands").val().length;
    } catch (ex) {}
    if (len > 0) {
		if ($('#chkLogo').is(":checked") || $('#chkIcon').is(":checked")) {
			$("#logosPrimary").show();
			$("#radiusPrimary").show();
		}
		if ($('#chkVoronoi').is(":checked")) {
			$("#divVorPrimary").show();
		}
        var result = '';
        for (i = 0; i < $("#gymboreeBrands").val().length; i++) {
            result += "\"brand\"='" + $("#gymboreeBrands").val()[i] + "' or ";
        }
        result = result.substring(0, result.length - 3);
        legend = '<div id="gymboreeLegend"><table><tr><td><a id="gymboreeImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="gymboree" onchange="handleLegend($(this));" checked/></td><td colspan="2">Gymboree</td></tr>';
        for (i = 0; i < $("#gymboreeBrands").val().length; i++) {
            if ($("#gymboreeBrands").val()[i] == "gymboree")
                legend += '<tr><td colspan="2"></td><td><img height="25px" width="75px" src="images/Icons/retail/gymboree.png" /></td><td>Gymboree</td></tr>';
            if ($("#gymboreeBrands").val()[i] == "crazy8")
                legend += '<tr><td colspan="2"></td><td><img height="25px" width="75px" src="images/Icons/retail/crazy8.png" /></td><td>Crazy8</td></tr>';
            if ($("#gymboreeBrands").val()[i] == "janieandjack")
                legend += '<tr><td colspan="2"></td><td><img height="25px" width="50px" src="images/Icons/retail/janieandjack.png" /></td><td>Jannie & Jack</td></tr>';
        }
        legend += '</table></div>';
        $("#gymboreeLegend").remove();
        addLegendContent(legend, "gymboree", "legendData");
        gymboree = getFilteredAlbertsons("Gymboree", result);
        map.getLayers().insertAt(253, gymboree);
    }

	if ($('#switchLabelsPrimary').is(":checked"))
		changeLabelsPrimary('active');
	
	else
		changeLabelsPrimary('dull');
}

function filterGymboreeBrandsType() {
    try {
        map.removeLayer(gymboree);
    } catch (ex) {}
    if ($('#switchRadiusPrimary').prop('checked'))
        $("#switchRadiusPrimary").click();

    if ($('#switchLabelsPrimary').prop('checked', false))
        $("#switchLabelsPrimary").click();

    var len = 0;
    var legend = '';
    $("#gymboreeLegend").remove();
    try {
        len = $("#gymboreeBrandsType").val().length;
    } catch (ex) {}
    if (len > 0) {
		if ($('#chkLogo').is(":checked") || $('#chkIcon').is(":checked")) {
			$("#logosPrimary").show();
			$("#radiusPrimary").show();
		}
		if ($('#chkVoronoi').is(":checked")) {
			$("#divVorPrimary").show();
		}
        var brand = '';
        for (i = 0; i < $("#gymboreeBrands").val().length; i++) {
            brand += "\"brand\"='" + $("#gymboreeBrands").val()[i] + "' or ";
        }
        brand = brand.substring(0, brand.length - 3);
		brand += " AND ";
		
        var brandType = '';
        for (i = 0; i < $("#gymboreeBrandsType").val().length; i++) {
            brandType += "\"type\"='" + $("#gymboreeBrandsType").val()[i] + "' or ";
        }
        brandType = brandType.substring(0, brandType.length - 3);
		
        $("#gymboreeLegend").remove();
        addLegendContent(legend, "gymboree", "legendData");
        gymboree = getFilteredAlbertsons("Gymboree", brand + brandType);
        map.getLayers().insertAt(253, gymboree);
    }

	if ($('#switchLabelsPrimary').is(":checked"))
		changeLabelsPrimary('active');
	
	else
		changeLabelsPrimary('dull');
}

function filterKroger() {
    try {
        map.removeLayer(kroger);
    } catch (ex) {}
    if ($('#switchRadiusFoodHome').prop('checked'))
        $("#switchRadiusFoodHome").click();

    if ($('#switchLabelsFoodHome').prop('checked', false))
        $("#switchLabelsFoodHome").click();

    var len = 0;
    var legend = '';
    $("#krogerLegend").remove();
    try {
        len = $("#krogerBrands").val().length;
    } catch (ex) {}
    if (len > 0) {
		if ($('#chkLogo').is(":checked") || $('#chkIcon').is(":checked")) {
			$("#logosFoodHome").show();
			$("#radiusFoodHome").show();
		}
		if ($('#chkVoronoi').is(":checked")) {
			$("#divVorFoodHome").show();
		}
        var result = '';
        for (i = 0; i < $("#krogerBrands").val().length; i++) {
            result += "\"name\"='" + $("#krogerBrands").val()[i] + "' or ";
        }
        result = result.substring(0, result.length - 3);
        legend = '<div id="krogerLegend"><table><tr><td><a id="krogerImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="kroger" onchange="handleLegend($(this));" checked/></td><td colspan="2">Kroger</td></tr>';
        for (i = 0; i < $("#krogerBrands").val().length; i++) {
            if ($("#krogerBrands").val()[i] == "Bakers")
                legend += '<tr><td colspan="2"></td><td><img height="25px" width="75px" src="images/Icons/retail/Kroger/Bakers.png" /></td><td>Baker\'s</td></tr>';
            if ($("#krogerBrands").val()[i] == "CityMarket")
                legend += '<tr><td colspan="2"></td><td><img height="25px" width="75px" src="images/Icons/retail/Kroger/CityMarket.png" /></td><td>City Market</td></tr>';
            if ($("#krogerBrands").val()[i] == "Copps")
                legend += '<tr><td colspan="2"></td><td><img height="25px" width="50px" src="images/Icons/retail/Kroger/Copps.png" /></td><td>Copps</td></tr>';
            if ($("#krogerBrands").val()[i] == "Dillons")
                legend += '<tr><td colspan="2"></td><td><img height="25px" width="75px" src="images/Icons/retail/Kroger/Dillons.png" /></td><td>Dillons</td></tr>';
            if ($("#krogerBrands").val()[i] == "Food4Less")
                legend += '<tr><td colspan="2"></td><td><img height="25px" width="75px" src="images/Icons/retail/Kroger/Food4Less.png" /></td><td>Food 4 Less</td></tr>';
            if ($("#krogerBrands").val()[i] == "Foodsco")
                legend += '<tr><td colspan="2"></td><td><img height="25px" width="75px" src="images/Icons/retail/Kroger/Foodsco.png" /></td><td>Foodsco</td></tr>';
            if ($("#krogerBrands").val()[i] == "FredMeyer")
                legend += '<tr><td colspan="2"></td><td><img height="25px" width="75px" src="images/Icons/retail/Kroger/FredMeyer.png" /></td><td>Fred Meyer</td></tr>';
            if ($("#krogerBrands").val()[i] == "FrysFoodStores")
                legend += '<tr><td colspan="2"></td><td><img height="25px" width="75px" src="images/Icons/retail/Kroger/FrysFoodStores.png" /></td><td>Frys Food Stores</td></tr>';
            if ($("#krogerBrands").val()[i] == "Gerbes")
                legend += '<tr><td colspan="2"></td><td><img height="25px" width="75px" src="images/Icons/retail/Kroger/Gerbes.png" /></td><td>Gerbes</td></tr>';
            if ($("#krogerBrands").val()[i] == "HarrisTeeter")
                legend += '<tr><td colspan="2"></td><td><img height="25px" width="75px" src="images/Icons/retail/Kroger/HarrisTeeter.png" /></td><td>Harris Teeter</td></tr>';
            if ($("#krogerBrands").val()[i] == "JayC")
                legend += '<tr><td colspan="2"></td><td><img height="25px" width="75px" src="images/Icons/retail/Kroger/JayC.png" /></td><td>Jay C</td></tr>';
            if ($("#krogerBrands").val()[i] == "KingSoopers")
                legend += '<tr><td colspan="2"></td><td><img height="25px" width="75px" src="images/Icons/retail/Kroger/KingSoopers.png" /></td><td>King Soopers</td></tr>';
            if ($("#krogerBrands").val()[i] == "Kroger")
                legend += '<tr><td colspan="2"></td><td><img height="25px" width="75px" src="images/Icons/retail/Kroger/Kroger.png" /></td><td>Kroger</td></tr>';
            if ($("#krogerBrands").val()[i] == "Marianos")
                legend += '<tr><td colspan="2"></td><td><img height="25px" width="75px" src="images/Icons/retail/Kroger/Marianos.png" /></td><td>Marianos</td></tr>';
            if ($("#krogerBrands").val()[i] == "MetroMarket")
                legend += '<tr><td colspan="2"></td><td><img height="25px" width="75px" src="images/Icons/retail/Kroger/MetroMarket.png" /></td><td>Metro Market</td></tr>';
            if ($("#krogerBrands").val()[i] == "Owens")
                legend += '<tr><td colspan="2"></td><td><img height="25px" width="75px" src="images/Icons/retail/Kroger/Owens.png" /></td><td>Owen\'s</td></tr>';
            if ($("#krogerBrands").val()[i] == "PaylessSuperMarket")
                legend += '<tr><td colspan="2"></td><td><img height="25px" width="75px" src="images/Icons/retail/Kroger/PaylessSuperMarket.png" /></td><td>Payless Super Market</td></tr>';
            if ($("#krogerBrands").val()[i] == "PicknSave")
                legend += '<tr><td colspan="2"></td><td><img height="25px" width="75px" src="images/Icons/retail/Kroger/PicknSave.png" /></td><td>Pick n Save</td></tr>';
            if ($("#krogerBrands").val()[i] == "QualityFoodCenter")
                legend += '<tr><td colspan="2"></td><td><img height="25px" width="75px" src="images/Icons/retail/Kroger/QualityFoodCenter.png" /></td><td>Quality Food Center</td></tr>';
            if ($("#krogerBrands").val()[i] == "Ralphs")
                legend += '<tr><td colspan="2"></td><td><img height="25px" width="75px" src="images/Icons/retail/Kroger/Ralphs.png" /></td><td>Ralphs</td></tr>';
            if ($("#krogerBrands").val()[i] == "RalphsFreshFare")
                legend += '<tr><td colspan="2"></td><td><img height="25px" width="75px" src="images/Icons/retail/Kroger/RalphsFreshFare.png" /></td><td>Ralphs Fresh Fare</td></tr>';
            if ($("#krogerBrands").val()[i] == "Ruler")
                legend += '<tr><td colspan="2"></td><td><img height="25px" width="75px" src="images/Icons/retail/Kroger/Ruler.png" /></td><td>Ruler</td></tr>';
            if ($("#krogerBrands").val()[i] == "Smiths")
                legend += '<tr><td colspan="2"></td><td><img height="25px" width="75px" src="images/Icons/retail/Kroger/Smiths.png" /></td><td>Smith\'s</td></tr>';
        }
        legend += '</table></div>';
        $("#krogerLegend").remove();
        addLegendContent(legend, "kroger", "legendData");
        kroger = getFilteredAlbertsons("Kroger", result);
        map.getLayers().insertAt(255, kroger);
    }

	if ($('#switchLabelsFoodHome').is(":checked"))
		changeLabelsFoodHome('active');
	
	else
		changeLabelsFoodHome('dull');
}

function addFoodAwayData() {
    $('#thorntonLegend').remove();
    $('#culverLegend').remove();
    $('#potbellyLegend').remove();
    $('#starbucksLegend').remove();
    $('#raisingcanesLegend').remove();
    $('#fiveguysLegend').remove();
	resetCanvas();
	$('#csvTable').html('');
	var chart;
	// try{chart.data = null; chart.update()}catch(e){}
	// var ctx = $('#chartContainer')[0];
	// var context = ctx.getContext('2d');
	// context.clearRect(0, 0, ctx.width, ctx.height);
	try {
        $("#popup-closer").click();
    } catch (ex) {}
    $("#logosFoodAway").hide();
	$("#radiusFoodAway").hide();
	$("#divVorFoodAway").hide();
	$("#optFiveGuys").hide();
    culver.setVisible(false);
    potbelly.setVisible(false);
    thornton.setVisible(false);
    starbucks.setVisible(false);
    raisingcanes.setVisible(false);
    fiveguys.setVisible(false);
	
	culver.set('displayInLayerSwitcher', false);
	potbelly.set('displayInLayerSwitcher', false);
	thornton.set('displayInLayerSwitcher', false);
	starbucks.set('displayInLayerSwitcher', false);
	raisingcanes.set('displayInLayerSwitcher', false);
	fiveguys.set('displayInLayerSwitcher', false);

    radiusCulverLayer.setVisible(false);
    radiusPotbellyLayer.setVisible(false);
    radiusThorntonLayer.setVisible(false);
    radiusStarBucksLayer.setVisible(false);
    radiusFiveGuysLayer.setVisible(false);
    radiusRaisingCanesLayer.setVisible(false);
	
	if ($('#cbFoodAwayVoronoi').is(":checked")) 
		toggleClusterVor('WFS','FoodAway');

    var len = 0;
    try {
        len = $("#selFoodaway").val().length;
    } catch (ex) {}
    if (len > 0) {
		if ($('#chkLogo').is(":checked") || $('#chkIcon').is(":checked")) {
			$("#logosFoodAway").show();
			$("#radiusFoodAway").show();
		}
		if ($('#chkVoronoi').is(":checked")) {
			$("#divVorFoodAway").show();
		}
        for (i = 0; i < len; i++) {
            switch ($("#selFoodaway").val()[i]) {
                case 'culver':
                    if ($('#switchRadiusFoodAway').prop('checked'))
                        radiusCulverLayer.setVisible(true);
					culver.setVisible(true);
                    addLegendContent('<div id="culverLegend"><table><tr><td><a id="culverImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="culver" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="75px" src="images/Icons/retail/culver.png" /></td><td>Culver\'s Restaurants</td></tr></table></div>', true, "legendData");
					culver.set('displayInLayerSwitcher', true);
                    break;
                case 'potbelly':
                    if ($('#switchRadiusFoodAway').prop('checked'))
                        radiusPotbellyLayer.setVisible(true);
					potbelly.setVisible(true);
                    addLegendContent('<div id="potbellyLegend"><table><tr><td><a id="potbellyImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="potbelly" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="60px" src="images/Icons/retail/potbelly.png" /></td><td>Potbelly Sandwich Shop</td></tr></table></div>', true, "legendData");
					potbelly.set('displayInLayerSwitcher', true);
					$.ajax({
						type: 'GET',
						dataType: 'json',
						url: 'getDataForChart.php?cond=Potbelly',
						success: function(response) {
							try{chart.destroy();}catch(e){}
							if (response) {
								var labels = [];
								var data = [];
								$.each(response, function(index, value) {
									labels.push(value.label);
									data.push(value.data);
								});
								var config = {
									type: 'line',
									data: {
										// labels: ['IL', 'TX', 'MI', 'MD', 'VA', 'MN', 'DC', 'OH', 'WI', 'NY', 'AZ', 'WA', 'CO', 'IN', 'MA', 'MO', 'AR', 'PA', 'CT'],
										labels: labels,
										datasets: [{
											label: 'PotBelly Locations',
											backgroundColor: '#993404',
											borderColor: '#993404',
											data: data,
											fill: false,
										}]
									},
									options: {
										responsive: true,
										legend: {
											labels: {
												usePointStyle: true
											}
										},
										title: {
											display: true,
											text: 'No. of Potbelly Locations'
										},
										tooltips: {
											mode: 'index',
											intersect: false,
										},
										hover: {
											mode: 'nearest',
											intersect: true
										},
										scales: {
											xAxes: [{
												display: true,
												scaleLabel: {
													display: false
												}
											}],
											yAxes: [{
												display: true,
												scaleLabel: {
													display: true,
													labelString: 'Potbelly'
												},
												ticks: {
													autoSkip: false,
													maxRotation: 90,
													minRotation: 90
												}
											}]
										}
									}
								};
								chart = new Chart(ctx, config);
							}
						},
						error: function(xhr, ajaxOptions, thrownError) {
							alert(thrownError);
						}
					});
					
					d3.text("solarcsv/distances.csv", function(data) {
						var parsedCSV = d3.csvParseRows(data);

						var container = d3.select("#csvTable")
							.append("table")
							.attr("style", "border-collapse: collapse")
							.attr("style", "border: 2px black solid")
							.attr("style", "font: 12px sans-serif")
							.attr("style", "text-align: center")
							.selectAll("tr")
								.data(parsedCSV).enter()
								.append("tr")

							.selectAll("td")
								.data(function(d) { return d; }).enter()
								.append("td")
								.attr("style", "border: 1px black solid")
								.text(function(d) { return d; });
					});
					
                    break;
                case 'thornton':
                    if ($('#switchRadiusFoodAway').prop('checked'))
                        radiusThorntonLayer.setVisible(true);
					thornton.setVisible(true);
                    addLegendContent('<div id="thorntonLegend"><table><tr><td><a id="thorntonImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="thornton" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="125px" src="images/Icons/thornton.png" /></td><td>Thornton Inc.</td></tr></table></div>', true, "legendData");
					thornton.set('displayInLayerSwitcher', true);
                    break;
                case 'starbucks':
                    if ($('#switchRadiusFoodAway').prop('checked'))
                        radiusStarBucksLayer.setVisible(true);
					starbucks.setVisible(true);
                    addLegendContent('<div id="starbucksLegend"><table><tr><td><a id="starbucksImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="starbucks" onchange="handleLegend($(this));" checked/></td><td><img height="50px" width="60px" src="images/Icons/retail/starbucks.png" /></td><td>Starbucks Coffee</td></tr></table></div>', true, "legendData");
					starbucks.set('displayInLayerSwitcher', true);
                    break;
                case 'fiveguys':
                    if ($('#switchRadiusFoodAway').prop('checked'))
                        radiusFiveGuysLayer.setVisible(true);
					fiveguys.setVisible(true);
                    addLegendContent('<div id="fiveguysLegend"><table><tr><td><a id="fiveguysImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="fiveguys" onchange="handleLegend($(this));" checked/></td><td><img height="15px" width="60px" src="images/Icons/retail/fiveguys.png" /></td><td>Five Guys</td></tr></table></div>', true, "legendData");
					fiveguys.set('displayInLayerSwitcher', true);
					$("#optFiveGuys").show();
                    break;
                case 'raisingcanes':
                    if ($('#switchRadiusFoodAway').prop('checked'))
                        radiusRaisingCanesLayer.setVisible(true);
					raisingcanes.setVisible(true);
                    addLegendContent('<div id="raisingcanesLegend"><table><tr><td><a id="raisingcanesImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="raisingcanes" onchange="handleLegend($(this));" checked/></td><td><img height="30px" width="60px" src="images/Icons/retail/raisingcanes.png" /></td><td>Raising Canes</td></tr></table></div>', true, "legendData");
					raisingcanes.set('displayInLayerSwitcher', true);
                    break;
            }
        }
    } else {
        if ($('#switchRadiusFoodAway').prop('checked'))
            $("#switchRadiusFoodAway").click();
    }
}

function addFoodSuperMarket() {
    $('#aldiSixteenLegend').remove();
    $('#aldiSixteenClosedLegend').remove();
    $('#aldiEighteenLegend').remove();
    $('#aldiEighteenNewLegend').remove();
    try {
        $("#popup-closer").click();
    } catch (ex) {}
    $("#logosFoodSuperMarket").hide();
    $("#radiusFoodSuperMarket").hide();
    $("#divVorFoodSuperMarket").hide();
    aldiSixteen.setVisible(false);
    aldiSixteenClosed.setVisible(false);
    aldiEighteen.setVisible(false);
    aldiEighteenNew.setVisible(false);
    aldiDivisions.setVisible(false);
	
	aldiSixteen.set('displayInLayerSwitcher', false);
	aldiSixteenClosed.set('displayInLayerSwitcher', false);
	aldiEighteen.set('displayInLayerSwitcher', false);
	aldiEighteenNew.set('displayInLayerSwitcher', false);
	aldiDivisions.set('displayInLayerSwitcher', false);

    radiusAldiSixteenLayer.setVisible(false);
    radiusAldiSixteenClosedLayer.setVisible(false);
    radiusAldiEighteenLayer.setVisible(false);
    radiusAldiEighteenNewLayer.setVisible(false);
	
	if ($('#cbFoodSuperMarketVoronoi').is(":checked")) 
		toggleClusterVor('WFS','FoodSuperMarket');
					
    var len = 0;
    try {
        len = $("#selFoodSuperMarket").val().length;
    } catch (ex) {}
    if (len > 0) {
		if ($('#chkLogo').is(":checked") || $('#chkIcon').is(":checked")) {
			$("#logosFoodSuperMarket").show();
			$("#radiusFoodSuperMarket").show();
		}
		if ($('#chkVoronoi').is(":checked")) {
			$("#divVorFoodSuperMarket").show();
		}
        for (i = 0; i < len; i++) {
            switch ($("#selFoodSuperMarket").val()[i]) {
                case 'aldiSixteen':
                    if ($('#switchRadiusFoodSuperMarket').prop('checked'))
                        radiusAldiSixteenLayer.setVisible(true);
					aldiSixteen.setVisible(true);
                    addLegendContent('<div id="aldiSixteenLegend"><table><tr><td><a id="aldiSixteenImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="aldiSixteen" onchange="handleLegend($(this));" checked/></td><td><img height="32px" width="32px" src="images/Icons/retail/aldi.png" /></td><td>Aldi Stores 2016</td></tr></table></div>', true, "legendData");
					aldiSixteen.set('displayInLayerSwitcher', true);
                    break;
                case 'aldiSixteenClosed':
                    if ($('#switchRadiusFoodSuperMarket').prop('checked'))
                        radiusAldiSixteenClosedLayer.setVisible(true);
					aldiSixteenClosed.setVisible(true);
                    addLegendContent('<div id="aldiSixteenClosedLegend"><table><tr><td><a id="aldiSixteenClosedImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="aldiSixteenClosed" onchange="handleLegend($(this));" checked/></td><td><img height="32px" width="32px" src="images/Icons/retail/aldiclosed.png" /></td><td>Aldi Closed Stores</td></tr></table></div>', true, "legendData");
					aldiSixteenClosed.set('displayInLayerSwitcher', true);
                    break;
                case 'aldiEighteen':
                    if ($('#switchRadiusFoodSuperMarket').prop('checked'))
                        radiusAldiEighteenLayer.setVisible(true);
					aldiEighteen.setVisible(true);
                    addLegendContent('<div id="aldiEighteenLegend"><table><tr><td><a id="aldiEighteenImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="aldiEighteen" onchange="handleLegend($(this));" checked/></td><td><img height="32px" width="32px" src="images/Icons/retail/aldi.png" /></td><td>Aldi Stores 2018</td></tr></table></div>', true, "legendData");
					aldiEighteen.set('displayInLayerSwitcher', true);
                    break;
                case 'aldiEighteenNew':
                    if ($('#switchRadiusFoodSuperMarket').prop('checked'))
                        radiusAldiEighteenNewLayer.setVisible(true);
					aldiEighteenNew.setVisible(true);
                    addLegendContent('<div id="aldiEighteenNewLegend"><table><tr><td><a id="aldiEighteenNewImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="aldiEighteenNew" onchange="handleLegend($(this));" checked/></td><td><img height="32px" width="32px" src="images/Icons/retail/aldinew.png" /></td><td>Aldi New Stores</td></tr></table></div>', true, "legendData");
					aldiEighteenNew.set('displayInLayerSwitcher', true);
                    break;
                case 'aldiDivisions':
                    aldiDivisions.setVisible(true);
					aldiDivisions.set('displayInLayerSwitcher', true);
                    break;
                default:
                    break;
            }
        }
    } else {
        if ($('#switchRadiusFoodSuperMarket').prop('checked'))
            $("#switchRadiusFoodSuperMarket").click();
    }
}

function addZoningCountiesData() {
    $('#zonesantaLegend').remove();
	$('#zoneriversideLegend').remove();
	$('#zonemiamiLegend').remove();
	$('#zonehowardLegend').remove();
	$('#zonefresnoLegend').remove();
	$('#zoneclarkLegend').remove();
	$('#zonebaltimoreLegend').remove();

	SantaBarbara_County_CA.setVisible(false);
	Riverside_County_CA.setVisible(false);
	MiamiDade_County_FL.setVisible(false);
	Howard_County_MD.setVisible(false);
	Fresno_County_CA.setVisible(false);
	Clark_County_NV.setVisible(false);
	Baltimore_County_MD.setVisible(false);
	
	SantaBarbara_County_CA.set('displayInLayerSwitcher', false);
	Riverside_County_CA.set('displayInLayerSwitcher', false);
	MiamiDade_County_FL.set('displayInLayerSwitcher', false);
	Howard_County_MD.set('displayInLayerSwitcher', false);
	Fresno_County_CA.set('displayInLayerSwitcher', false);
	Clark_County_NV.set('displayInLayerSwitcher', false);
	Baltimore_County_MD.set('displayInLayerSwitcher', false);
					
    var len = 0;
    try {
        len = $("#zoningCountiesData").val().length;
    } catch (ex) {}
    if (len > 0) {
        for (i = 0; i < len; i++) {
            switch ($("#zoningCountiesData").val()[i]) {
                case 'SantaBarbara_County_CA':
					SantaBarbara_County_CA.setVisible(true);
					SantaBarbara_County_CA.set('displayInLayerSwitcher', true);
                    addLegendContent('<div id="zonesantaLegend"><table><tr><td><a id="zonesantaImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="zonesanta" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/counties.png" /></td><td>Zoning: SantaBarbara County</td></tr></table></div>', true, "legendDisplayBoundaries");
                    break;
                case 'Riverside_County_CA':
					Riverside_County_CA.setVisible(true);
					Riverside_County_CA.set('displayInLayerSwitcher', true);
                    addLegendContent('<div id="zoneriversideLegend"><table><tr><td><a id="zoneriversideImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="zoneriverside" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/counties.png" /></td><td>Zoning: Riverside County</td></tr></table></div>', true, "legendDisplayBoundaries");
                    break;
                case 'MiamiDade_County_FL':
					MiamiDade_County_FL.setVisible(true);
					MiamiDade_County_FL.set('displayInLayerSwitcher', true);
                    addLegendContent('<div id="zonemiamiLegend"><table><tr><td><a id="zonemiamiImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="zonemiami" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/counties.png" /></td><td>Zoning: Miami County</td></tr></table></div>', true, "legendDisplayBoundaries");
                    break;
                case 'Howard_County_MD':
					Howard_County_MD.setVisible(true);
					Howard_County_MD.set('displayInLayerSwitcher', true);
                    addLegendContent('<div id="zonehowardLegend"><table><tr><td><a id="zonehowardImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="zonehoward" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/counties.png" /></td><td>Zoning: Howard County</td></tr></table></div>', true, "legendDisplayBoundaries");
                    break;
                case 'Fresno_County_CA':
					Fresno_County_CA.setVisible(true);
					Fresno_County_CA.set('displayInLayerSwitcher', true);
                    addLegendContent('<div id="zonefresnoLegend"><table><tr><td><a id="zonefresnoImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="zonefresno" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/counties.png" /></td><td>Zoning: Fresno County</td></tr></table></div>', true, "legendDisplayBoundaries");
                    break;
                case 'Clark_County_NV':
					Clark_County_NV.setVisible(true);
					Clark_County_NV.set('displayInLayerSwitcher', true);
                    addLegendContent('<div id="zoneclarkLegend"><table><tr><td><a id="zoneclarkImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="zoneclark" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/counties.png" /></td><td>Zoning: Clark County</td></tr></table></div>', true, "legendDisplayBoundaries");
                    break;
                case 'Baltimore_County_MD':
					Baltimore_County_MD.setVisible(true);
					Baltimore_County_MD.set('displayInLayerSwitcher', true);
                    addLegendContent('<div id="zonebaltimoreLegend"><table><tr><td><a id="zonebaltimoreImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="zonebaltimore" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/counties.png" /></td><td>Zoning: Baltimore County</td></tr></table></div>', true, "legendDisplayBoundaries");
                    break;
                default:
                    break;
            }
        }
    }
}

function addZoningCitiesData() {
	$('#Albuquerque_NMLegend').remove();
	$('#Alexandria_VALegend').remove();
	$('#Amarillo_TXLegend').remove();
	$('#Anaheim_CALegend').remove();
	$('#Arlington_TXLegend').remove();
	$('#Atlanta_GALegend').remove();
	$('#Aurora_COLegend').remove();
	$('#Austin_TXLegend').remove();
	$('#Bakersfield_CALegend').remove();
	$('#Baltimore_MDLegend').remove();
	$('#BatonRouge_LALegend').remove();
	$('#Boston_MALegend').remove();
	$('#Brownsville_TXLegend').remove();
	$('#Cambridge_MALegend').remove();
	$('#Charlotte_NCLegend').remove();
	$('#Chattanooga_TNLegend').remove();
	$('#Chesapeake_VALegend').remove();
	$('#Chicago_ILLegend').remove();
	$('#Cincinnati_OHLegend').remove();
	$('#Cleveland_OHLegend').remove();
	$('#Columbus_OHLegend').remove();
	$('#Dallas_TXLegend').remove();
	$('#Dayton_OHLegend').remove();
	$('#Denver_COLegend').remove();
	$('#DesMoines_IALegend').remove();
	$('#Detroit_MILegend').remove();
	$('#Durham_NCLegend').remove();
	$('#ElPaso_TXLegend').remove();
	$('#Fargo_NDLegend').remove();
	$('#Flint_MILegend').remove();
	$('#FortWayne_INLegend').remove();
	$('#Fremont_CALegend').remove();
	$('#Glendale_AZLegend').remove();
	$('#Glendale_CALegend').remove();
	$('#Hartford_CTLegend').remove();
	$('#Henderson_NVLegend').remove();
	$('#Hialeah_FLLegend').remove();
	$('#HuntingtonBeach_CALegend').remove();
	$('#Huntsville_ALLegend').remove();
	$('#Indianapolis_INLegend').remove();
	$('#Irvine_CALegend').remove();
	$('#KansasCity_MOLegend').remove();
	$('#Kent_WALegend').remove();
	$('#Laredo_TXLegend').remove();
	$('#LasCruces_NMLegend').remove();
	$('#LasVegas_NVLegend').remove();
	$('#Lexington_KYLegend').remove();
	$('#Lincoln_NELegend').remove();
	$('#LongBeach_CALegend').remove();
	$('#LosAngeles_CALegend').remove();
	$('#Lowell_MALegend').remove();
	$('#Madison_WILegend').remove();
	$('#Memphis_TNLegend').remove();
	$('#Milwaukee_WILegend').remove();
	$('#Minneapolis_MNLegend').remove();
	$('#NewOrleans_LALegend').remove();
	$('#NewYorkCity_NYLegend').remove();
	$('#Newark_NJLegend').remove();
	$('#NewportBeach_CALegend').remove();
	$('#Norfolk_VALegend').remove();
	$('#NorthLasVegas_NVLegend').remove();
	$('#Oakland_CALegend').remove();
	$('#Omaha_NELegend').remove();
	$('#Orlando_FLLegend').remove();
	$('#Philadelphia_PALegend').remove();
	$('#Phoenix_AZLegend').remove();
	$('#Pittsburgh_PALegend').remove();
	$('#Plano_TXLegend').remove();
	$('#Portland_MELegend').remove();
	$('#Portland_ORLegend').remove();
	$('#Providence_RILegend').remove();
	$('#Raleigh_NCLegend').remove();
	$('#Richmond_VALegend').remove();
	$('#Rochester_NYLegend').remove();
	$('#Sacramento_CALegend').remove();
	$('#SaltLakeCity_UTLegend').remove();
	$('#SanDiego_CALegend').remove();
	$('#SanFrancisco_CALegend').remove();
	$('#SanJose_CALegend').remove();
	$('#SantaRosa_CALegend').remove();
	$('#Seattle_WALegend').remove();
	$('#SimiValley_CALegend').remove();
	$('#Somerville_MALegend').remove();
	$('#SouthBurlington_VTLegend').remove();
	$('#StLouis_MOLegend').remove();
	$('#Stockton_CALegend').remove();
	$('#Tacoma_WALegend').remove();
	$('#Tallahassee_FLLegend').remove();
	$('#Tampa_FLLegend').remove();
	$('#Toledo_OHLegend').remove();
	$('#Tucson_AZLegend').remove();
	$('#Tulsa_OKLegend').remove();
	$('#VirginiaBeach_VALegend').remove();
	$('#Washington_DCLegend').remove();
	$('#Wichita_KSLegend').remove();
	$('#WinstonSalem_NCLegend').remove();
	$('#Worcester_MALegend').remove();
	
	Albuquerque_NM.setVisible(false);
	Alexandria_VA.setVisible(false);
	Amarillo_TX.setVisible(false);
	Anaheim_CA.setVisible(false);
	Arlington_TX.setVisible(false);
	Atlanta_GA.setVisible(false);
	Aurora_CO.setVisible(false);
	Austin_TX.setVisible(false);
	Bakersfield_CA.setVisible(false);
	Baltimore_MD.setVisible(false);
	BatonRouge_LA.setVisible(false);
	Boston_MA.setVisible(false);
	Brownsville_TX.setVisible(false);
	Cambridge_MA.setVisible(false);
	Charlotte_NC.setVisible(false);
	Chattanooga_TN.setVisible(false);
	Chesapeake_VA.setVisible(false);
	Chicago_IL.setVisible(false);
	Cincinnati_OH.setVisible(false);
	Cleveland_OH.setVisible(false);
	Columbus_OH.setVisible(false);
	Dallas_TX.setVisible(false);
	Dayton_OH.setVisible(false);
	Denver_CO.setVisible(false);
	DesMoines_IA.setVisible(false);
	Detroit_MI.setVisible(false);
	Durham_NC.setVisible(false);
	ElPaso_TX.setVisible(false);
	Fargo_ND.setVisible(false);
	Flint_MI.setVisible(false);
	FortWayne_IN.setVisible(false);
	Fremont_CA.setVisible(false);
	Glendale_AZ.setVisible(false);
	Glendale_CA.setVisible(false);
	Hartford_CT.setVisible(false);
	Henderson_NV.setVisible(false);
	Hialeah_FL.setVisible(false);
	HuntingtonBeach_CA.setVisible(false);
	Huntsville_AL.setVisible(false);
	Indianapolis_IN.setVisible(false);
	Irvine_CA.setVisible(false);
	KansasCity_MO.setVisible(false);
	Kent_WA.setVisible(false);
	Laredo_TX.setVisible(false);
	LasCruces_NM.setVisible(false);
	LasVegas_NV.setVisible(false);
	Lexington_KY.setVisible(false);
	Lincoln_NE.setVisible(false);
	LongBeach_CA.setVisible(false);
	LosAngeles_CA.setVisible(false);
	Lowell_MA.setVisible(false);
	Madison_WI.setVisible(false);
	Memphis_TN.setVisible(false);
	Milwaukee_WI.setVisible(false);
	Minneapolis_MN.setVisible(false);
	NewOrleans_LA.setVisible(false);
	NewYorkCity_NY.setVisible(false);
	Newark_NJ.setVisible(false);
	NewportBeach_CA.setVisible(false);
	Norfolk_VA.setVisible(false);
	NorthLasVegas_NV.setVisible(false);
	Oakland_CA.setVisible(false);
	Omaha_NE.setVisible(false);
	Orlando_FL.setVisible(false);
	Philadelphia_PA.setVisible(false);
	Phoenix_AZ.setVisible(false);
	Pittsburgh_PA.setVisible(false);
	Plano_TX.setVisible(false);
	Portland_ME.setVisible(false);
	Portland_OR.setVisible(false);
	Providence_RI.setVisible(false);
	Raleigh_NC.setVisible(false);
	Richmond_VA.setVisible(false);
	Rochester_NY.setVisible(false);
	Sacramento_CA.setVisible(false);
	SaltLakeCity_UT.setVisible(false);
	SanDiego_CA.setVisible(false);
	SanFrancisco_CA.setVisible(false);
	SanJose_CA.setVisible(false);
	SantaRosa_CA.setVisible(false);
	Seattle_WA.setVisible(false);
	SimiValley_CA.setVisible(false);
	Somerville_MA.setVisible(false);
	SouthBurlington_VT.setVisible(false);
	StLouis_MO.setVisible(false);
	Stockton_CA.setVisible(false);
	Tacoma_WA.setVisible(false);
	Tallahassee_FL.setVisible(false);
	Tampa_FL.setVisible(false);
	Toledo_OH.setVisible(false);
	Tucson_AZ.setVisible(false);
	Tulsa_OK.setVisible(false);
	VirginiaBeach_VA.setVisible(false);
	Washington_DC.setVisible(false);
	Wichita_KS.setVisible(false);
	WinstonSalem_NC.setVisible(false);
	Worcester_MA.setVisible(false);
	
	Albuquerque_NM.set('displayInLayerSwitcher', false);
	Alexandria_VA.set('displayInLayerSwitcher', false);
	Amarillo_TX.set('displayInLayerSwitcher', false);
	Anaheim_CA.set('displayInLayerSwitcher', false);
	Arlington_TX.set('displayInLayerSwitcher', false);
	Atlanta_GA.set('displayInLayerSwitcher', false);
	Aurora_CO.set('displayInLayerSwitcher', false);
	Austin_TX.set('displayInLayerSwitcher', false);
	Bakersfield_CA.set('displayInLayerSwitcher', false);
	Baltimore_MD.set('displayInLayerSwitcher', false);
	BatonRouge_LA.set('displayInLayerSwitcher', false);
	Boston_MA.set('displayInLayerSwitcher', false);
	Brownsville_TX.set('displayInLayerSwitcher', false);
	Cambridge_MA.set('displayInLayerSwitcher', false);
	Charlotte_NC.set('displayInLayerSwitcher', false);
	Chattanooga_TN.set('displayInLayerSwitcher', false);
	Chesapeake_VA.set('displayInLayerSwitcher', false);
	Chicago_IL.set('displayInLayerSwitcher', false);
	Cincinnati_OH.set('displayInLayerSwitcher', false);
	Cleveland_OH.set('displayInLayerSwitcher', false);
	Columbus_OH.set('displayInLayerSwitcher', false);
	Dallas_TX.set('displayInLayerSwitcher', false);
	Dayton_OH.set('displayInLayerSwitcher', false);
	Denver_CO.set('displayInLayerSwitcher', false);
	DesMoines_IA.set('displayInLayerSwitcher', false);
	Detroit_MI.set('displayInLayerSwitcher', false);
	Durham_NC.set('displayInLayerSwitcher', false);
	ElPaso_TX.set('displayInLayerSwitcher', false);
	Fargo_ND.set('displayInLayerSwitcher', false);
	Flint_MI.set('displayInLayerSwitcher', false);
	FortWayne_IN.set('displayInLayerSwitcher', false);
	Fremont_CA.set('displayInLayerSwitcher', false);
	Glendale_AZ.set('displayInLayerSwitcher', false);
	Glendale_CA.set('displayInLayerSwitcher', false);
	Hartford_CT.set('displayInLayerSwitcher', false);
	Henderson_NV.set('displayInLayerSwitcher', false);
	Hialeah_FL.set('displayInLayerSwitcher', false);
	HuntingtonBeach_CA.set('displayInLayerSwitcher', false);
	Huntsville_AL.set('displayInLayerSwitcher', false);
	Indianapolis_IN.set('displayInLayerSwitcher', false);
	Irvine_CA.set('displayInLayerSwitcher', false);
	KansasCity_MO.set('displayInLayerSwitcher', false);
	Kent_WA.set('displayInLayerSwitcher', false);
	Laredo_TX.set('displayInLayerSwitcher', false);
	LasCruces_NM.set('displayInLayerSwitcher', false);
	LasVegas_NV.set('displayInLayerSwitcher', false);
	Lexington_KY.set('displayInLayerSwitcher', false);
	Lincoln_NE.set('displayInLayerSwitcher', false);
	LongBeach_CA.set('displayInLayerSwitcher', false);
	LosAngeles_CA.set('displayInLayerSwitcher', false);
	Lowell_MA.set('displayInLayerSwitcher', false);
	Madison_WI.set('displayInLayerSwitcher', false);
	Memphis_TN.set('displayInLayerSwitcher', false);
	Milwaukee_WI.set('displayInLayerSwitcher', false);
	Minneapolis_MN.set('displayInLayerSwitcher', false);
	NewOrleans_LA.set('displayInLayerSwitcher', false);
	NewYorkCity_NY.set('displayInLayerSwitcher', false);
	Newark_NJ.set('displayInLayerSwitcher', false);
	NewportBeach_CA.set('displayInLayerSwitcher', false);
	Norfolk_VA.set('displayInLayerSwitcher', false);
	NorthLasVegas_NV.set('displayInLayerSwitcher', false);
	Oakland_CA.set('displayInLayerSwitcher', false);
	Omaha_NE.set('displayInLayerSwitcher', false);
	Orlando_FL.set('displayInLayerSwitcher', false);
	Philadelphia_PA.set('displayInLayerSwitcher', false);
	Phoenix_AZ.set('displayInLayerSwitcher', false);
	Pittsburgh_PA.set('displayInLayerSwitcher', false);
	Plano_TX.set('displayInLayerSwitcher', false);
	Portland_ME.set('displayInLayerSwitcher', false);
	Portland_OR.set('displayInLayerSwitcher', false);
	Providence_RI.set('displayInLayerSwitcher', false);
	Raleigh_NC.set('displayInLayerSwitcher', false);
	Richmond_VA.set('displayInLayerSwitcher', false);
	Rochester_NY.set('displayInLayerSwitcher', false);
	Sacramento_CA.set('displayInLayerSwitcher', false);
	SaltLakeCity_UT.set('displayInLayerSwitcher', false);
	SanDiego_CA.set('displayInLayerSwitcher', false);
	SanFrancisco_CA.set('displayInLayerSwitcher', false);
	SanJose_CA.set('displayInLayerSwitcher', false);
	SantaRosa_CA.set('displayInLayerSwitcher', false);
	Seattle_WA.set('displayInLayerSwitcher', false);
	SimiValley_CA.set('displayInLayerSwitcher', false);
	Somerville_MA.set('displayInLayerSwitcher', false);
	SouthBurlington_VT.set('displayInLayerSwitcher', false);
	StLouis_MO.set('displayInLayerSwitcher', false);
	Stockton_CA.set('displayInLayerSwitcher', false);
	Tacoma_WA.set('displayInLayerSwitcher', false);
	Tallahassee_FL.set('displayInLayerSwitcher', false);
	Tampa_FL.set('displayInLayerSwitcher', false);
	Toledo_OH.set('displayInLayerSwitcher', false);
	Tucson_AZ.set('displayInLayerSwitcher', false);
	Tulsa_OK.set('displayInLayerSwitcher', false);
	VirginiaBeach_VA.set('displayInLayerSwitcher', false);
	Washington_DC.set('displayInLayerSwitcher', false);
	Wichita_KS.set('displayInLayerSwitcher', false);
	WinstonSalem_NC.set('displayInLayerSwitcher', false);
	Worcester_MA.set('displayInLayerSwitcher', false);
					
    var len = 0;
    try {
        len = $("#zoningCitiesData").val().length;
    } catch (ex) {}
    if (len > 0) {
        for (i = 0; i < len; i++) {
            switch ($("#zoningCitiesData").val()[i]) {
				case 'Albuquerque_NM':
					Albuquerque_NM.setVisible(true);
					Albuquerque_NM.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Albuquerque_NMLegend"><table><tr><td><a id="Albuquerque_NMImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Albuquerque_NM" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Albuquerque, NM</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Alexandria_VA':
					Alexandria_VA.setVisible(true);
					Alexandria_VA.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Alexandria_VALegend"><table><tr><td><a id="Alexandria_VAImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Alexandria_VA" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Alexandria, VA</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Amarillo_TX':
					Amarillo_TX.setVisible(true);
					Amarillo_TX.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Amarillo_TXLegend"><table><tr><td><a id="Amarillo_TXImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Amarillo_TX" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Amarillo, TX</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Anaheim_CA':
					Anaheim_CA.setVisible(true);
					Anaheim_CA.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Anaheim_CALegend"><table><tr><td><a id="Anaheim_CAImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Anaheim_CA" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Anaheim, CA</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Arlington_TX':
					Arlington_TX.setVisible(true);
					Arlington_TX.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Arlington_TXLegend"><table><tr><td><a id="Arlington_TXImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Arlington_TX" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Arlington, TX</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Atlanta_GA':
					Atlanta_GA.setVisible(true);
					Atlanta_GA.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Atlanta_GALegend"><table><tr><td><a id="Atlanta_GAImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Atlanta_GA" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Atlanta, GA</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Aurora_CO':
					Aurora_CO.setVisible(true);
					Aurora_CO.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Aurora_COLegend"><table><tr><td><a id="Aurora_COImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Aurora_CO" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Aurora, CO</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Austin_TX':
					Austin_TX.setVisible(true);
					Austin_TX.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Austin_TXLegend"><table><tr><td><a id="Austin_TXImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Austin_TX" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Austin, TX</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Bakersfield_CA':
					Bakersfield_CA.setVisible(true);
					Bakersfield_CA.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Bakersfield_CALegend"><table><tr><td><a id="Bakersfield_CAImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Bakersfield_CA" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Bakersfield, CA</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Baltimore_MD':
					Baltimore_MD.setVisible(true);
					Baltimore_MD.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Baltimore_MDLegend"><table><tr><td><a id="Baltimore_MDImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Baltimore_MD" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Baltimore, MD</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'BatonRouge_LA':
					BatonRouge_LA.setVisible(true);
					BatonRouge_LA.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="BatonRouge_LALegend"><table><tr><td><a id="BatonRouge_LAImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="BatonRouge_LA" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: BatonRouge, LA</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Boston_MA':
					Boston_MA.setVisible(true);
					Boston_MA.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Boston_MALegend"><table><tr><td><a id="Boston_MAImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Boston_MA" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Boston, MA</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Brownsville_TX':
					Brownsville_TX.setVisible(true);
					Brownsville_TX.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Brownsville_TXLegend"><table><tr><td><a id="Brownsville_TXImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Brownsville_TX" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Brownsville, TX</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Cambridge_MA':
					Cambridge_MA.setVisible(true);
					Cambridge_MA.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Cambridge_MALegend"><table><tr><td><a id="Cambridge_MAImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Cambridge_MA" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Cambridge, MA</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Charlotte_NC':
					Charlotte_NC.setVisible(true);
					Charlotte_NC.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Charlotte_NCLegend"><table><tr><td><a id="Charlotte_NCImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Charlotte_NC" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Charlotte, NC</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Chattanooga_TN':
					Chattanooga_TN.setVisible(true);
					Chattanooga_TN.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Chattanooga_TNLegend"><table><tr><td><a id="Chattanooga_TNImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Chattanooga_TN" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Chattanooga, TN</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Chesapeake_VA':
					Chesapeake_VA.setVisible(true);
					Chesapeake_VA.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Chesapeake_VALegend"><table><tr><td><a id="Chesapeake_VAImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Chesapeake_VA" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Chesapeake, VA</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Chicago_IL':
					Chicago_IL.setVisible(true);
					Chicago_IL.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Chicago_ILLegend"><table><tr><td><a id="Chicago_ILImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Chicago_IL" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Chicago, IL</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Cincinnati_OH':
					Cincinnati_OH.setVisible(true);
					Cincinnati_OH.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Cincinnati_OHLegend"><table><tr><td><a id="Cincinnati_OHImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Cincinnati_OH" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Cincinnati, OH</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Cleveland_OH':
					Cleveland_OH.setVisible(true);
					Cleveland_OH.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Cleveland_OHLegend"><table><tr><td><a id="Cleveland_OHImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Cleveland_OH" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Cleveland, OH</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Columbus_OH':
					Columbus_OH.setVisible(true);
					Columbus_OH.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Columbus_OHLegend"><table><tr><td><a id="Columbus_OHImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Columbus_OH" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Columbus, OH</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Dallas_TX':
					Dallas_TX.setVisible(true);
					Dallas_TX.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Dallas_TXLegend"><table><tr><td><a id="Dallas_TXImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Dallas_TX" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Dallas, TX</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Dayton_OH':
					Dayton_OH.setVisible(true);
					Dayton_OH.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Dayton_OHLegend"><table><tr><td><a id="Dayton_OHImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Dayton_OH" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Dayton, OH</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Denver_CO':
					Denver_CO.setVisible(true);
					Denver_CO.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Denver_COLegend"><table><tr><td><a id="Denver_COImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Denver_CO" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Denver, CO</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'DesMoines_IA':
					DesMoines_IA.setVisible(true);
					DesMoines_IA.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="DesMoines_IALegend"><table><tr><td><a id="DesMoines_IAImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="DesMoines_IA" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: DesMoines, IA</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Detroit_MI':
					Detroit_MI.setVisible(true);
					Detroit_MI.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Detroit_MILegend"><table><tr><td><a id="Detroit_MIImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Detroit_MI" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Detroit, MI</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Durham_NC':
					Durham_NC.setVisible(true);
					Durham_NC.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Durham_NCLegend"><table><tr><td><a id="Durham_NCImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Durham_NC" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Durham, NC</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'ElPaso_TX':
					ElPaso_TX.setVisible(true);
					ElPaso_TX.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="ElPaso_TXLegend"><table><tr><td><a id="ElPaso_TXImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="ElPaso_TX" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: ElPaso, TX</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Fargo_ND':
					Fargo_ND.setVisible(true);
					Fargo_ND.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Fargo_NDLegend"><table><tr><td><a id="Fargo_NDImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Fargo_ND" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Fargo, ND</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Flint_MI':
					Flint_MI.setVisible(true);
					Flint_MI.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Flint_MILegend"><table><tr><td><a id="Flint_MIImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Flint_MI" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Flint, MI</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'FortWayne_IN':
					FortWayne_IN.setVisible(true);
					FortWayne_IN.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="FortWayne_INLegend"><table><tr><td><a id="FortWayne_INImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="FortWayne_IN" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: FortWayne, IN</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Fremont_CA':
					Fremont_CA.setVisible(true);
					Fremont_CA.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Fremont_CALegend"><table><tr><td><a id="Fremont_CAImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Fremont_CA" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Fremont, CA</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Glendale_AZ':
					Glendale_AZ.setVisible(true);
					Glendale_AZ.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Glendale_AZLegend"><table><tr><td><a id="Glendale_AZImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Glendale_AZ" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Glendale, AZ</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Glendale_CA':
					Glendale_CA.setVisible(true);
					Glendale_CA.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Glendale_CALegend"><table><tr><td><a id="Glendale_CAImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Glendale_CA" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Glendale, CA</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Hartford_CT':
					Hartford_CT.setVisible(true);
					Hartford_CT.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Hartford_CTLegend"><table><tr><td><a id="Hartford_CTImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Hartford_CT" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Hartford, CT</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Henderson_NV':
					Henderson_NV.setVisible(true);
					Henderson_NV.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Henderson_NVLegend"><table><tr><td><a id="Henderson_NVImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Henderson_NV" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Henderson, NV</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Hialeah_FL':
					Hialeah_FL.setVisible(true);
					Hialeah_FL.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Hialeah_FLLegend"><table><tr><td><a id="Hialeah_FLImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Hialeah_FL" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Hialeah, FL</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'HuntingtonBeach_CA':
					HuntingtonBeach_CA.setVisible(true);
					HuntingtonBeach_CA.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="HuntingtonBeach_CALegend"><table><tr><td><a id="HuntingtonBeach_CAImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="HuntingtonBeach_CA" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: HuntingtonBeach, CA</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Huntsville_AL':
					Huntsville_AL.setVisible(true);
					Huntsville_AL.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Huntsville_ALLegend"><table><tr><td><a id="Huntsville_ALImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Huntsville_AL" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Huntsville, AL</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Indianapolis_IN':
					Indianapolis_IN.setVisible(true);
					Indianapolis_IN.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Indianapolis_INLegend"><table><tr><td><a id="Indianapolis_INImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Indianapolis_IN" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Indianapolis, IN</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Irvine_CA':
					Irvine_CA.setVisible(true);
					Irvine_CA.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Irvine_CALegend"><table><tr><td><a id="Irvine_CAImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Irvine_CA" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Irvine, CA</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'KansasCity_MO':
					KansasCity_MO.setVisible(true);
					KansasCity_MO.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="KansasCity_MOLegend"><table><tr><td><a id="KansasCity_MOImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="KansasCity_MO" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: KansasCity, MO</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Kent_WA':
					Kent_WA.setVisible(true);
					Kent_WA.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Kent_WALegend"><table><tr><td><a id="Kent_WAImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Kent_WA" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Kent, WA</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Laredo_TX':
					Laredo_TX.setVisible(true);
					Laredo_TX.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Laredo_TXLegend"><table><tr><td><a id="Laredo_TXImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Laredo_TX" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Laredo, TX</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'LasCruces_NM':
					LasCruces_NM.setVisible(true);
					LasCruces_NM.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="LasCruces_NMLegend"><table><tr><td><a id="LasCruces_NMImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="LasCruces_NM" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: LasCruces, NM</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'LasVegas_NV':
					LasVegas_NV.setVisible(true);
					LasVegas_NV.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="LasVegas_NVLegend"><table><tr><td><a id="LasVegas_NVImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="LasVegas_NV" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: LasVegas, NV</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Lexington_KY':
					Lexington_KY.setVisible(true);
					Lexington_KY.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Lexington_KYLegend"><table><tr><td><a id="Lexington_KYImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Lexington_KY" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Lexington, KY</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Lincoln_NE':
					Lincoln_NE.setVisible(true);
					Lincoln_NE.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Lincoln_NELegend"><table><tr><td><a id="Lincoln_NEImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Lincoln_NE" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Lincoln, NE</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'LongBeach_CA':
					LongBeach_CA.setVisible(true);
					LongBeach_CA.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="LongBeach_CALegend"><table><tr><td><a id="LongBeach_CAImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="LongBeach_CA" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: LongBeach, CA</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'LosAngeles_CA':
					LosAngeles_CA.setVisible(true);
					LosAngeles_CA.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="LosAngeles_CALegend"><table><tr><td><a id="LosAngeles_CAImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="LosAngeles_CA" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: LosAngeles, CA</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Lowell_MA':
					Lowell_MA.setVisible(true);
					Lowell_MA.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Lowell_MALegend"><table><tr><td><a id="Lowell_MAImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Lowell_MA" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Lowell, MA</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Madison_WI':
					Madison_WI.setVisible(true);
					Madison_WI.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Madison_WILegend"><table><tr><td><a id="Madison_WIImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Madison_WI" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Madison, WI</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Memphis_TN':
					Memphis_TN.setVisible(true);
					Memphis_TN.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Memphis_TNLegend"><table><tr><td><a id="Memphis_TNImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Memphis_TN" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Memphis, TN</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Milwaukee_WI':
					Milwaukee_WI.setVisible(true);
					Milwaukee_WI.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Milwaukee_WILegend"><table><tr><td><a id="Milwaukee_WIImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Milwaukee_WI" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Milwaukee, WI</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Minneapolis_MN':
					Minneapolis_MN.setVisible(true);
					Minneapolis_MN.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Minneapolis_MNLegend"><table><tr><td><a id="Minneapolis_MNImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Minneapolis_MN" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Minneapolis, MN</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'NewOrleans_LA':
					NewOrleans_LA.setVisible(true);
					NewOrleans_LA.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="NewOrleans_LALegend"><table><tr><td><a id="NewOrleans_LAImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="NewOrleans_LA" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: NewOrleans, LA</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'NewYorkCity_NY':
					NewYorkCity_NY.setVisible(true);
					NewYorkCity_NY.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="NewYorkCity_NYLegend"><table><tr><td><a id="NewYorkCity_NYImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="NewYorkCity_NY" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: NewYorkCity, NY</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Newark_NJ':
					Newark_NJ.setVisible(true);
					Newark_NJ.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Newark_NJLegend"><table><tr><td><a id="Newark_NJImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Newark_NJ" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Newark, NJ</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'NewportBeach_CA':
					NewportBeach_CA.setVisible(true);
					NewportBeach_CA.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="NewportBeach_CALegend"><table><tr><td><a id="NewportBeach_CAImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="NewportBeach_CA" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: NewportBeach, CA</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Norfolk_VA':
					Norfolk_VA.setVisible(true);
					Norfolk_VA.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Norfolk_VALegend"><table><tr><td><a id="Norfolk_VAImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Norfolk_VA" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Norfolk, VA</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'NorthLasVegas_NV':
					NorthLasVegas_NV.setVisible(true);
					NorthLasVegas_NV.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="NorthLasVegas_NVLegend"><table><tr><td><a id="NorthLasVegas_NVImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="NorthLasVegas_NV" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: NorthLasVegas, NV</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Oakland_CA':
					Oakland_CA.setVisible(true);
					Oakland_CA.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Oakland_CALegend"><table><tr><td><a id="Oakland_CAImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Oakland_CA" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Oakland, CA</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Omaha_NE':
					Omaha_NE.setVisible(true);
					Omaha_NE.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Omaha_NELegend"><table><tr><td><a id="Omaha_NEImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Omaha_NE" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Omaha, NE</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Orlando_FL':
					Orlando_FL.setVisible(true);
					Orlando_FL.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Orlando_FLLegend"><table><tr><td><a id="Orlando_FLImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Orlando_FL" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Orlando, FL</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Philadelphia_PA':
					Philadelphia_PA.setVisible(true);
					Philadelphia_PA.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Philadelphia_PALegend"><table><tr><td><a id="Philadelphia_PAImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Philadelphia_PA" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Philadelphia, PA</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Phoenix_AZ':
					Phoenix_AZ.setVisible(true);
					Phoenix_AZ.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Phoenix_AZLegend"><table><tr><td><a id="Phoenix_AZImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Phoenix_AZ" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Phoenix, AZ</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Pittsburgh_PA':
					Pittsburgh_PA.setVisible(true);
					Pittsburgh_PA.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Pittsburgh_PALegend"><table><tr><td><a id="Pittsburgh_PAImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Pittsburgh_PA" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Pittsburgh, PA</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Plano_TX':
					Plano_TX.setVisible(true);
					Plano_TX.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Plano_TXLegend"><table><tr><td><a id="Plano_TXImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Plano_TX" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Plano, TX</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Portland_ME':
					Portland_ME.setVisible(true);
					Portland_ME.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Portland_MELegend"><table><tr><td><a id="Portland_MEImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Portland_ME" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Portland, ME</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Portland_OR':
					Portland_OR.setVisible(true);
					Portland_OR.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Portland_ORLegend"><table><tr><td><a id="Portland_ORImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Portland_OR" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Portland, OR</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Providence_RI':
					Providence_RI.setVisible(true);
					Providence_RI.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Providence_RILegend"><table><tr><td><a id="Providence_RIImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Providence_RI" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Providence, RI</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Raleigh_NC':
					Raleigh_NC.setVisible(true);
					Raleigh_NC.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Raleigh_NCLegend"><table><tr><td><a id="Raleigh_NCImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Raleigh_NC" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Raleigh, NC</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Richmond_VA':
					Richmond_VA.setVisible(true);
					Richmond_VA.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Richmond_VALegend"><table><tr><td><a id="Richmond_VAImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Richmond_VA" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Richmond, VA</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Rochester_NY':
					Rochester_NY.setVisible(true);
					Rochester_NY.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Rochester_NYLegend"><table><tr><td><a id="Rochester_NYImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Rochester_NY" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Rochester, NY</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Sacramento_CA':
					Sacramento_CA.setVisible(true);
					Sacramento_CA.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Sacramento_CALegend"><table><tr><td><a id="Sacramento_CAImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Sacramento_CA" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Sacramento, CA</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'SaltLakeCity_UT':
					SaltLakeCity_UT.setVisible(true);
					SaltLakeCity_UT.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="SaltLakeCity_UTLegend"><table><tr><td><a id="SaltLakeCity_UTImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="SaltLakeCity_UT" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: SaltLakeCity, UT</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'SanDiego_CA':
					SanDiego_CA.setVisible(true);
					SanDiego_CA.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="SanDiego_CALegend"><table><tr><td><a id="SanDiego_CAImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="SanDiego_CA" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/SanDiego_CA.png" /></td><td>SanDiego, CA</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'SanFrancisco_CA':
					SanFrancisco_CA.setVisible(true);
					SanFrancisco_CA.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="SanFrancisco_CALegend"><table><tr><td><a id="SanFrancisco_CAImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="SanFrancisco_CA" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: SanFrancisco, CA</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'SanJose_CA':
					SanJose_CA.setVisible(true);
					SanJose_CA.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="SanJose_CALegend"><table><tr><td><a id="SanJose_CAImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="SanJose_CA" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: SanJose, CA</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'SantaRosa_CA':
					SantaRosa_CA.setVisible(true);
					SantaRosa_CA.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="SantaRosa_CALegend"><table><tr><td><a id="SantaRosa_CAImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="SantaRosa_CA" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: SantaRosa, CA</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Seattle_WA':
					Seattle_WA.setVisible(true);
					Seattle_WA.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Seattle_WALegend"><table><tr><td><a id="Seattle_WAImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Seattle_WA" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Seattle, WA</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'SimiValley_CA':
					SimiValley_CA.setVisible(true);
					SimiValley_CA.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="SimiValley_CALegend"><table><tr><td><a id="SimiValley_CAImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="SimiValley_CA" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: SimiValley, CA</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Somerville_MA':
					Somerville_MA.setVisible(true);
					Somerville_MA.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Somerville_MALegend"><table><tr><td><a id="Somerville_MAImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Somerville_MA" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Somerville, MA</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'SouthBurlington_VT':
					SouthBurlington_VT.setVisible(true);
					SouthBurlington_VT.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="SouthBurlington_VTLegend"><table><tr><td><a id="SouthBurlington_VTImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="SouthBurlington_VT" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: SouthBurlington, VT</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'StLouis_MO':
					StLouis_MO.setVisible(true);
					StLouis_MO.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="StLouis_MOLegend"><table><tr><td><a id="StLouis_MOImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="StLouis_MO" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: StLouis, MO</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Stockton_CA':
					Stockton_CA.setVisible(true);
					Stockton_CA.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Stockton_CALegend"><table><tr><td><a id="Stockton_CAImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Stockton_CA" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Stockton, CA</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Tacoma_WA':
					Tacoma_WA.setVisible(true);
					Tacoma_WA.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Tacoma_WALegend"><table><tr><td><a id="Tacoma_WAImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Tacoma_WA" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Tacoma, WA</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Tallahassee_FL':
					Tallahassee_FL.setVisible(true);
					Tallahassee_FL.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Tallahassee_FLLegend"><table><tr><td><a id="Tallahassee_FLImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Tallahassee_FL" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Tallahassee, FL</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Tampa_FL':
					Tampa_FL.setVisible(true);
					Tampa_FL.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Tampa_FLLegend"><table><tr><td><a id="Tampa_FLImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Tampa_FL" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Tampa, FL</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Toledo_OH':
					Toledo_OH.setVisible(true);
					Toledo_OH.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Toledo_OHLegend"><table><tr><td><a id="Toledo_OHImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Toledo_OH" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Toledo, OH</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Tucson_AZ':
					Tucson_AZ.setVisible(true);
					Tucson_AZ.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Tucson_AZLegend"><table><tr><td><a id="Tucson_AZImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Tucson_AZ" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Tucson, AZ</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Tulsa_OK':
					Tulsa_OK.setVisible(true);
					Tulsa_OK.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Tulsa_OKLegend"><table><tr><td><a id="Tulsa_OKImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Tulsa_OK" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Tulsa, OK</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'VirginiaBeach_VA':
					VirginiaBeach_VA.setVisible(true);
					VirginiaBeach_VA.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="VirginiaBeach_VALegend"><table><tr><td><a id="VirginiaBeach_VAImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="VirginiaBeach_VA" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: VirginiaBeach_VA</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Washington_DC':
					Washington_DC.setVisible(true);
					Washington_DC.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Washington_DCLegend"><table><tr><td><a id="Washington_DCImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Washington_DC" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Washington, DC</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Wichita_KS':
					Wichita_KS.setVisible(true);
					Wichita_KS.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Wichita_KSLegend"><table><tr><td><a id="Wichita_KSImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Wichita_KS" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Wichita, KS</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'WinstonSalem_NC':
					WinstonSalem_NC.setVisible(true);
					WinstonSalem_NC.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="WinstonSalem_NCLegend"><table><tr><td><a id="WinstonSalem_NCImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="WinstonSalem_NC" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: WinstonSalem, NC</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
                case 'Worcester_MA':
					Worcester_MA.setVisible(true);
					Worcester_MA.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="Worcester_MALegend"><table><tr><td><a id="Worcester_MAImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="Worcester_MA" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Zoning: Worcester, MA</td></tr></table></div>', true, "legendDisplayBoundaries");
					break;
            }
        }
    }
}

function addBuildingsData() {
    try {
        $("#popup-closer").click();
    } catch (ex) {}

	buildings.setVisible(false);
	eqi.set('displayInLayerSwitcher', false);

	switch ($("#buildingsSelect").val()) {
		case 'none':
			buildings.setVisible(false);
			buildings.set('displayInLayerSwitcher', false);
		break;
        case 'buildings':
			buildings.setVisible(true);
			buildings.set('displayInLayerSwitcher', true);
		break;
	}
    
	if ($("#flipTexture").prop('checked')) {
		flipTexture('on');
    } else {
		flipTexture('off');
    }
}

function getFilteredAlbertsons(layerTitle, condition) {
    var layerName;
    if (layerTitle == "Albertsons")
        layerName = "albertsons";
    if (layerTitle == "Kroger")
        layerName = "kroger";
    if (layerTitle == "Airports")
        layerName = "airports";
    if (layerTitle == "Hospitals")
        layerName = "Hospitals_Speciality";
    if (layerTitle == "DMA")
        layerName = "dma";
    if (layerTitle == "R&F Locations")
        layerName = "refrigeratedlocations";
    if (layerTitle == "Banks 2012")
        layerName = "banks_2012";
    if (layerTitle == "Banks 2016")
        layerName = "banks_2016";
    if (layerTitle == "Banks 2017")
        layerName = "banks_2017";
    if (layerTitle == "Gymboree")
        layerName = "gymboree";
    if (layerTitle == "PotbellyTwo")
        layerName = "potbellytwo";
    if (layerTitle == "Five Guys")
        layerName = "fiveguys";

    var source = new ol.source.Vector({
        format: new ol.format.GeoJSON(),
        loader: function(extent, resolution, projection) {
            var url = '../geoserver/wfs?service=WFS&request=GetFeature&' +
                'version=1.0.0&typename=Farmer:' + layerName + '&CQL_FILTER=' + condition + '' +
                '&outputFormat=application/json&srsname=EPSG:3857';
            var tilesLoaded = 0;
            var tilesPending = 0;

            $.ajax({
                url: url,
                dataType: 'json',
                beforeSend: function(e) {
					try{source.clear();}catch(ex){}
                    $('#js-progress-bar').css({
                        'opacity': '1',
                        'height': '5px',
                        'width': '5%'
                    });
                    ++tilesPending;
                },
                success: function(data) {
                    ++tilesLoaded;
                    var percentage = Math.round(tilesLoaded / tilesPending * 100);
                    $('#js-progress-bar').css({
                        'width': percentage + '%'
                    });
                    var radVal;

                    if (percentage >= 100) {
                        var features = geoJSONFormat.readFeatures(data);
                        source.addFeatures(features);
                        var sourceToAdd;
                        switch (layerName) {
                            case "albertsons":
                                radVal = $("#intervalAlbertsons").val();
                                sourceToAdd = radiusAlbertsonsSource;
                                radiusAlbertsonsSource.clear();
                                break;
                            case "kroger":
                                radVal = $("#intervalKroger").val();
                                sourceToAdd = radiusKrogerSource;
                                radiusKrogerSource.clear();
                                break;
                            case "dma":
                                radVal = $("#intervalDMA").val();
                                sourceToAdd = radiusDMASource;
                                radiusDMASource.clear();
                                break;
                            case "refrigeratedlocations":
                                radVal = $("#intervalRefri").val();
                                sourceToAdd = radiusRefriSource;
                                radiusRefriSource.clear();
                                break;
                            case "airports":
                                radVal = $("#intervalAirport").val();
                                sourceToAdd = radiusAirportSource;
                                radiusAirportSource.clear();
                                break;
                            case "fiveguys":
                                radVal = $("#intervalFiveGuys").val();
                                sourceToAdd = radiusFiveGuysSource;
                                radiusFiveGuysSource.clear();
                                break;
                        }
                        if (layerName == "albertsons" || layerName == "kroger" || layerName == "dma" || layerName == "refrigeratedlocations" || layerName == "airports" || layerName == "fiveguys")
                            for (i = 0; i <= source.getFeatures().length - 1; i++) {
                                drawCircleInMeter(map, source.getFeatures()[i].getGeometry().getCoordinates(), radVal * 1609.34, 7, sourceToAdd, i);
                            }
                        switch (layerName) {
                            case "albertsons":
                                radiusAlbertsonsLayer.setSource(radiusAlbertsonsSource);
                                break;
                            case "kroger":
                                radiusKrogerLayer.setSource(radiusKrogerSource);
                                break;
                            case "dma":
                                radiusDMALayer.setSource(radiusDMASource);
                                break;
                            case "refrigeratedlocations":
                                radiusRefriLayer.setSource(radiusRefriSource);
                                break;
                            case "airports":
                                radiusAirportLayer.setSource(radiusAirportSource);
                                break;
                            case "fiveguys":
                                radiusFiveGuysLayer.setSource(radiusFiveGuysSource);
                                break;
                        }
                        setTimeout(function() {
                            $('#js-progress-bar').css({
                                'width': '0',
                                'opacity': '0'
                            });
                            tilesLoaded = 0;
                            tilesPending = 0;
                        }, 600);
                    }
                }
            });
        },
        strategy: ol.loadingstrategy.bbox
    });

    var clusterSource = new ol.source.Cluster({
        distance: 30,
        source: source
    });

	if (layerTitle == "PotbellyTwo")
		return new ol.layer.AnimatedCluster({
			displayInLayerSwitcher: true,
			title: layerTitle,
			name: layerTitle,
			source: source,
			animationDuration: 700,
			style: getFeatureStylePB
		});
    else
		return new ol.layer.AnimatedCluster({
			displayInLayerSwitcher: true,
			title: layerTitle,
			name: layerTitle,
			source: clusterSource,
			animationDuration: 700,
			style: getStyleMulti
		});
}

function addFoodProd() {
	$("#divYears").hide();
    $("#cropTable").hide();
    $("#logosFood").hide();
	$("#radiusFood").hide();
	$("#divVorFood").hide();
	
    $('#neOneTwoLegend').remove();
    $('#neOneThreeLegend').remove();
    $('#neOneFourLegend').remove();
    $('#neOneFiveLegend').remove();
    $('#neOneSixLegend').remove();
    $('#neOneSevenLegend').remove();
    $('#caOneSevenCustomLegend').remove();
    $('#gaOneSevenCustomLegend').remove();
    $('#flOneSevenCustomLegend').remove();
    $('#scOneSevenCustomLegend').remove();
    $('#ncOneSevenCustomLegend').remove();

                    caliCropsFunction('active');
    try {
        $("#popup-closer").click();
    } catch (ex) {}
	
    $("#divCropArea").hide();
	wmsOneSix.setVisible(false);
	wmsNeOneTwo.setVisible(false);
	wmsNeOneThree.setVisible(false);
	wmsNeOneFour.setVisible(false);
	wmsNeOneFive.setVisible(false);
	wmsNeOneSix.setVisible(false);
	wmsNeOneSeven.setVisible(false);
	wmsCAOneSevenCustom.setVisible(false);
	wmsFLOneSevenCustom.setVisible(false);
	wmsGAOneSevenCustom.setVisible(false);
	wmsNCOneSevenCustom.setVisible(false);
	wmsSCOneSevenCustom.setVisible(false);
	
    wmsOneSix.set('displayInLayerSwitcher', false);
    wmsNeOneTwo.set('displayInLayerSwitcher', false);
    wmsNeOneThree.set('displayInLayerSwitcher', false);
    wmsNeOneFour.set('displayInLayerSwitcher', false);
    wmsNeOneFive.set('displayInLayerSwitcher', false);
    wmsNeOneSix.set('displayInLayerSwitcher', false);	
    wmsNeOneSeven.set('displayInLayerSwitcher', false);	
	wmsCAOneSevenCustom.set('displayInLayerSwitcher', false);
	wmsFLOneSevenCustom.set('displayInLayerSwitcher', false);
	wmsGAOneSevenCustom.set('displayInLayerSwitcher', false);
	wmsNCOneSevenCustom.set('displayInLayerSwitcher', false);
	wmsSCOneSevenCustom.set('displayInLayerSwitcher', false);
	
	if ($('#cbFoodVoronoi').is(":checked")) 
		toggleClusterVor('WFS','Food');


    var len = 0;
    try {
        len = $("#foodProd").val().length;
    } catch (ex) {}
    if (len > 0) {
		if ($('#chkLogo').is(":checked") || $('#chkIcon').is(":checked")) {
			$("#logosFood").show();
			$("#radiusFood").show();
		}
		if ($('#chkVoronoi').is(":checked")) {
			$("#divVorFood").show();
		}
        for (i = 0; i < len; i++) {
            switch ($("#foodProd").val()[i]) {
                case 'cropsUs':
					$("#divCropArea").show();
		
					if($('#cropArea').find('[value=us]').prop('selected') || $('#cropArea').find('[value=state]').prop('selected'))
					{
						wmsOneSix.setVisible(true);
						wmsOneSix.set('displayInLayerSwitcher', true);
						$("#divCropArea").show();
						$('#foodProd').find('[value=cropsUs]').prop('selected', true);
						$('#foodProd').selectpicker('render');
					}
                    break;

                case 'cropsNe':
					$("#divYears").show();
					$("#cropTable").show();
                    wmsNeOneSeven.setVisible(true);
					wmsNeOneSeven.set('displayInLayerSwitcher', true);
                    addLegendContent('<div id="neOneSevenLegend"><table><tr><td><a id="neOneSevenImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="neOneSeven" onchange="handleLegend($(this));" checked/></td><td>Nebraska Crop Layer-2017</td></tr></table></div>', true, "legendDisplayBoundaries");
                    break;

                case 'cropsCACustom':
					$("#divYears").show();
					$("#cropTable").show();
			
					wmsCAOneSevenCustom.getSource().updateParams({
						'SLD_Body': sldCropsCA
					});
                    wmsCAOneSevenCustom.setVisible(true);
					wmsCAOneSevenCustom.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="caOneSevenCustomLegend"><table><tr><td><a id="caOneSevenCustomImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="caOneSevenCustom" onchange="handleLegend($(this));" checked/></td><td>Selected California Crops (2017) </td><td>&nbsp;</td></tr></table><table id="tableInsideTable"><tr><td><input type="checkbox" id="248" onchange="handlecohort(\'cropsCA\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + divergentTheme[0] + ';"></div></td><td>Eggplants</td></tr><tr><td><input type="checkbox" id="227" onchange="handlecohort(\'cropsCA\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + divergentTheme[1] + ';"></div></td><td>Lettuce</td></tr><tr><td><input type="checkbox" id="221" onchange="handlecohort(\'cropsCA\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + divergentTheme[2] + ';"></div></td><td>Strawberries</td></tr><tr><td><input type="checkbox" id="219" onchange="handlecohort(\'cropsCA\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + divergentTheme[3] + ';"></div></td><td>Greens</td></tr><tr><td><input type="checkbox" id="216" onchange="handlecohort(\'cropsCA\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + divergentTheme[4] + ';"></div></td><td>Peppers</td></tr><tr><td><input type="checkbox" id="54" onchange="handlecohort(\'cropsCA\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + divergentTheme[5] + ';"></div></td><td>Tomatoes</td></tr><tr><td><input type="checkbox" id="50" onchange="handlecohort(\'cropsCA\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + divergentTheme[6] + ';"></div></td><td>Cucumbers</td></tr><tr><td><input type="checkbox" id="38" onchange="handlecohort(\'cropsCA\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + divergentTheme[7] + ';"></div></td><td>Camelina</td></tr></table></div>', true, "legendConditions");
                    break;

                case 'cropsGACustom':
					$("#divYears").show();
					$("#cropTable").show();
			
					wmsGAOneSevenCustom.getSource().updateParams({
						'SLD_Body': sldCropsGA
					});
                    wmsGAOneSevenCustom.setVisible(true);
					wmsGAOneSevenCustom.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="gaOneSevenCustomLegend"><table><tr><td><a id="gaOneSevenCustomImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="gaOneSevenCustom" onchange="handleLegend($(this));" checked/></td><td>Selected Georgia Crops (2018) </td><td>&nbsp;</td></tr></table><table id="tableInsideTable"><tr><td><input type="checkbox" id="248" onchange="handlecohort(\'cropsGA\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + divergentTheme[0] + ';"></div></td><td>Eggplants</td></tr><tr><td><input type="checkbox" id="227" onchange="handlecohort(\'cropsGA\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + divergentTheme[1] + ';"></div></td><td>Lettuce</td></tr><tr><td><input type="checkbox" id="221" onchange="handlecohort(\'cropsGA\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + divergentTheme[2] + ';"></div></td><td>Strawberries</td></tr><tr><td><input type="checkbox" id="219" onchange="handlecohort(\'cropsGA\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + divergentTheme[3] + ';"></div></td><td>Greens</td></tr><tr><td><input type="checkbox" id="216" onchange="handlecohort(\'cropsGA\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + divergentTheme[4] + ';"></div></td><td>Peppers</td></tr><tr><td><input type="checkbox" id="54" onchange="handlecohort(\'cropsGA\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + divergentTheme[5] + ';"></div></td><td>Tomatoes</td></tr><tr><td><input type="checkbox" id="50" onchange="handlecohort(\'cropsGA\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + divergentTheme[6] + ';"></div></td><td>Cucumbers</td></tr><tr><td><input type="checkbox" id="38" onchange="handlecohort(\'cropsGA\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + divergentTheme[7] + ';"></div></td><td>Camelina</td></tr></table></div>', true, "legendConditions");
                    break;

                case 'cropsFLCustom':
					$("#divYears").show();
					$("#cropTable").show();
			
					wmsFLOneSevenCustom.getSource().updateParams({
						'SLD_Body': sldCropsFL
					});
                    wmsFLOneSevenCustom.setVisible(true);
					wmsFLOneSevenCustom.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="flOneSevenCustomLegend"><table><tr><td><a id="flOneSevenCustomImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="flOneSevenCustom" onchange="handleLegend($(this));" checked/></td><td>Selected Florida Crops (2018) </td><td>&nbsp;</td></tr></table><table id="tableInsideTable"><tr><td><input type="checkbox" id="248" onchange="handlecohort(\'cropsFL\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + divergentTheme[0] + ';"></div></td><td>Eggplants</td></tr><tr><td><input type="checkbox" id="227" onchange="handlecohort(\'cropsFL\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + divergentTheme[1] + ';"></div></td><td>Lettuce</td></tr><tr><td><input type="checkbox" id="221" onchange="handlecohort(\'cropsFL\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + divergentTheme[2] + ';"></div></td><td>Strawberries</td></tr><tr><td><input type="checkbox" id="219" onchange="handlecohort(\'cropsFL\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + divergentTheme[3] + ';"></div></td><td>Greens</td></tr><tr><td><input type="checkbox" id="216" onchange="handlecohort(\'cropsFL\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + divergentTheme[4] + ';"></div></td><td>Peppers</td></tr><tr><td><input type="checkbox" id="54" onchange="handlecohort(\'cropsFL\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + divergentTheme[5] + ';"></div></td><td>Tomatoes</td></tr><tr><td><input type="checkbox" id="50" onchange="handlecohort(\'cropsFL\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + divergentTheme[6] + ';"></div></td><td>Cucumbers</td></tr><tr><td><input type="checkbox" id="38" onchange="handlecohort(\'cropsFL\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + divergentTheme[7] + ';"></div></td><td>Camelina</td></tr></table></div>', true, "legendConditions");
                    break;

                case 'cropsNCCustom':
					$("#divYears").show();
					$("#cropTable").show();
			
					wmsNCOneSevenCustom.getSource().updateParams({
						'SLD_Body': sldCropsNC
					});
                    wmsNCOneSevenCustom.setVisible(true);
					wmsNCOneSevenCustom.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="ncOneSevenCustomLegend"><table><tr><td><a id="ncOneSevenCustomImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="ncOneSevenCustom" onchange="handleLegend($(this));" checked/></td><td>Selected North Carolina Crops (2018) </td><td>&nbsp;</td></tr></table><table id="tableInsideTable"><tr><td><input type="checkbox" id="248" onchange="handlecohort(\'cropsNC\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + divergentTheme[0] + ';"></div></td><td>Eggplants</td></tr><tr><td><input type="checkbox" id="227" onchange="handlecohort(\'cropsNC\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + divergentTheme[1] + ';"></div></td><td>Lettuce</td></tr><tr><td><input type="checkbox" id="221" onchange="handlecohort(\'cropsNC\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + divergentTheme[2] + ';"></div></td><td>Strawberries</td></tr><tr><td><input type="checkbox" id="219" onchange="handlecohort(\'cropsNC\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + divergentTheme[3] + ';"></div></td><td>Greens</td></tr><tr><td><input type="checkbox" id="216" onchange="handlecohort(\'cropsNC\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + divergentTheme[4] + ';"></div></td><td>Peppers</td></tr><tr><td><input type="checkbox" id="54" onchange="handlecohort(\'cropsNC\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + divergentTheme[5] + ';"></div></td><td>Tomatoes</td></tr><tr><td><input type="checkbox" id="50" onchange="handlecohort(\'cropsNC\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + divergentTheme[6] + ';"></div></td><td>Cucumbers</td></tr><tr><td><input type="checkbox" id="38" onchange="handlecohort(\'cropsNC\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + divergentTheme[7] + ';"></div></td><td>Camelina</td></tr></table></div>', true, "legendConditions");
                    break;

                case 'cropsSCCustom':
					$("#divYears").show();
					$("#cropTable").show();
			
					wmsSCOneSevenCustom.getSource().updateParams({
						'SLD_Body': sldCropsSC
					});
                    wmsSCOneSevenCustom.setVisible(true);
					wmsSCOneSevenCustom.set('displayInLayerSwitcher', true);
					addLegendContent('<div id="scOneSevenCustomLegend"><table><tr><td><a id="scOneSevenCustomImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="scOneSevenCustom" onchange="handleLegend($(this));" checked/></td><td>Selected South Carolina Crops (2018) </td><td>&nbsp;</td></tr></table><table id="tableInsideTable"><tr><td><input type="checkbox" id="248" onchange="handlecohort(\'crops\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + divergentTheme[0] + ';"></div></td><td>Eggplants</td></tr><tr><td><input type="checkbox" id="227" onchange="handlecohort(\'cropsSC\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + divergentTheme[1] + ';"></div></td><td>Lettuce</td></tr><tr><td><input type="checkbox" id="221" onchange="handlecohort(\'cropsSC\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + divergentTheme[2] + ';"></div></td><td>Strawberries</td></tr><tr><td><input type="checkbox" id="219" onchange="handlecohort(\'cropsSC\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + divergentTheme[3] + ';"></div></td><td>Greens</td></tr><tr><td><input type="checkbox" id="216" onchange="handlecohort(\'cropsSC\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + divergentTheme[4] + ';"></div></td><td>Peppers</td></tr><tr><td><input type="checkbox" id="54" onchange="handlecohort(\'cropsSC\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + divergentTheme[5] + ';"></div></td><td>Tomatoes</td></tr><tr><td><input type="checkbox" id="50" onchange="handlecohort(\'cropsSC\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + divergentTheme[6] + ';"></div></td><td>Cucumbers</td></tr><tr><td><input type="checkbox" id="38" onchange="handlecohort(\'cropsSC\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:' + divergentTheme[7] + ';"></div></td><td>Camelina</td></tr></table></div>', true, "legendConditions");
                    break;

                case 'cropsCalifornia':
                    caliCropsFunction('dull');
                    break;
            }
        }
    } else {
        if ($('#switchRadiusFood').prop('checked'))
            $("#switchRadiusFood").click();
    }
}

var frameRate = 0.5; // frames per second
var animationId = null;

function stop() {
	if (animationId !== null) {
		window.clearInterval(animationId);
        animationId = null;
	}
}
	  
function play() {
	$("#iptCropYears").slider('value',2012);
	stop();
	setTime();
	
    animationId = window.setInterval(setTime, 4000 / frameRate);
}

function updateInfo() {
    var el = document.getElementById('info');
	el.innerHTML = startDate.toISOString();
}

function setTime() {
	if (animationId !== null) {
		$("#iptCropYears").slider('value',$( "#iptCropYears" ).slider( "value" ) + 1);
	}
	if($( "#iptCropYears" ).slider( "value" ) == 2017)
	{
		stop();
	}

    toastr.clear();
    toastr.info("Loading Nebraska Crop layer (Year " + $("#iptCropYears").slider('value') + ")");
	wmsNeOneTwo.setVisible(false);
	wmsNeOneThree.setVisible(false);
	wmsNeOneFour.setVisible(false);
	wmsNeOneFive.setVisible(false);
	wmsNeOneSix.setVisible(false);
	wmsNeOneSeven.setVisible(false);
	
    $('#neOneTwoLegend').remove();
    $('#neOneThreeLegend').remove();
    $('#neOneFourLegend').remove();
    $('#neOneFiveLegend').remove();
    $('#neOneSixLegend').remove();
    $('#neOneSevenLegend').remove();
	
	switch($( "#iptCropYears" ).slider( "value" ))
	{
		case 2012:
			$( "#crophandle" ).text(2012);
			wmsNeOneTwo.setVisible(true);
            addLegendContent('<div id="neOneTwoLegend"><table><tr><td><a id="neOneTwoImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="neOneTwo" onchange="handleLegend($(this));" checked/></td><td>Nebraska Crop Layer-2012</td></tr></table></div>', true, "legendDisplayBoundaries");
        break;
        case 2013:
			$( "#crophandle" ).text(2013);
			wmsNeOneThree.setVisible(true);
            addLegendContent('<div id="neOneThreeLegend"><table><tr><td><a id="neOneThreeImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="neOneThree" onchange="handleLegend($(this));" checked/></td><td>Nebraska Crop Layer-2013</td></tr></table></div>', true, "legendDisplayBoundaries");
        break;
		case 2014:
			$( "#crophandle" ).text(2014);
			wmsNeOneFour.setVisible(true);
            addLegendContent('<div id="neOneFourLegend"><table><tr><td><a id="neOneFourImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="neOneFour" onchange="handleLegend($(this));" checked/></td><td>Nebraska Crop Layer-2014</td></tr></table></div>', true, "legendDisplayBoundaries");
        break;
        case 2015:
			$( "#crophandle" ).text(2015);
			wmsNeOneFive.setVisible(true);
            addLegendContent('<div id="neOneFiveLegend"><table><tr><td><a id="neOneFiveImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="neOneFive" onchange="handleLegend($(this));" checked/></td><td>Nebraska Crop Layer-2015</td></tr></table></div>', true, "legendDisplayBoundaries");
        break;
        case 2016:
			$( "#crophandle" ).text(2016);
			wmsNeOneSix.setVisible(true);
            addLegendContent('<div id="neOneSixLegend"><table><tr><td><a id="neOneSixImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="neOneSix" onchange="handleLegend($(this));" checked/></td><td>Nebraska Crop Layer-2016</td></tr></table></div>', true, "legendDisplayBoundaries");
        break;
        case 2017:
			$( "#crophandle" ).text(2017);
			wmsNeOneSeven.setVisible(true);
			addLegendContent('<div id="neOneSevenLegend"><table><tr><td><a id="neOneSevenImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="neOneSeven" onchange="handleLegend($(this));" checked/></td><td>Nebraska Crop Layer-2017</td></tr></table></div>', true, "legendDisplayBoundaries");
        break;				
	}
}

function fetchCrops() {
    $('#cropOneSixLegend').remove();
	switch ($("#cropArea").val()) {
		case 'us':
			wmsOneSix.setVisible(true);
			addLegendContent('<div id="cropOneSixLegend"><table><tr><td><a id="cropOneSixImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="cropOneSix" onchange="handleLegend($(this));" checked/></td><td>US Crop Layer-2016</td></tr></table></div>', true, "legendDisplayBoundaries");
            break;

		case 'region':
			addRegionsVoro();
			addLegendContent('<div id="cropOneSixLegend"><table><tr><td><a id="cropOneSixImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="cropOneSix" onchange="handleLegend($(this));" checked/></td><td>US Crop Layer - 2016</td></tr></table></div>', true, "legendDisplayBoundaries");
			break;

		case 'state':
			addStatesVoro('VoronoiStates','states', true);
			addLegendContent('<div id="cropOneSixLegend"><table><tr><td><a id="cropOneSixImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="cropOneSix" onchange="handleLegend($(this));" checked/></td><td>US Crop Layer - 2016</td></tr></table></div>', true, "legendDisplayBoundaries");
			break;
    
		default:
			break;
	}
}

function addCommodities() {/**/
	$('#cornLegend').remove();
	$("#divCornOptions").hide();
	$("#divEggplantOptions").hide();
	$("#logosEggPlants").hide();
	try {map.removeLayer(statesWFSVoronoi);} catch (ex) {}
	try {$("#popup-closer").click();} catch (ex) {}
	cornno.setVisible(false);
	cornno.set('displayInLayerSwitcher', false);
	corn.setVisible(false);
	
	switch ($("#commoditiesSelect").val()) {
		case 'none':
			$('#cornLegend').remove();
			$("#divCornOptions").hide();
			$("#divEggplantOptions").hide();
			$("#logosEggPlants").hide();
			try {map.removeLayer(statesWFSVoronoi);} catch (ex) {}
			try {$("#popup-closer").click();} catch (ex) {}
			cornno.setVisible(false);
			corn.setVisible(false);
			break;
		case 'corn':
			cornno.setVisible(true);
			cornno.set('displayInLayerSwitcher', true);
			corn.setVisible(true);
			$("#divCornOptions").show();
			doAnimate();
			addLegendContent('<div id="cornLegend"><table><tr><td><a id="cornImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="corn" onchange="handleLegend($(this));" checked/></td><td>Corn Condition</td><td>&nbsp;</td></tr></table><table id="tableInsideTable"><tr><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#006837;"></div></td><td>Excellent</td></tr><tr><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#a6d96a;"></div></td><td>Good</td></tr><tr><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#fee08b;"></div></td><td>Fair</td></tr><tr><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#f46d43;"></div></td><td>Poor</td></tr><tr><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#a50026;"></div></td><td>Very Poor</td></tr></table></div>', true, "legendConditions");
			break;
		case 'eggplants':
			$('#selRefrigerated').find('[value=shipping]').prop('selected', false);
			$("#divEggplantOptions").show();
			$("#logosEggPlants").show();
			addStatesVoro('EggPlants','states', true);
			addShippingData('eggplants');
			shippingRef('selTrafficEgg');
	}
}

function addBeverages() {
    $('#cbrandsLegend').remove();
	$("#divVorBeverages").hide();

    try {
        $("#popup-closer").click();
    } catch (ex) {}

	cbrands.setVisible(false);
    cbrands.set('displayInLayerSwitcher', false);

	if ($('#cbBeveragesVoronoi').is(":checked")) 
		toggleClusterVor('WFS','Beverages');  
					
    var len = 0;
    try {
        len = $("#beveragesSelect").val().length;
    } catch (ex) {}
    if (len > 0) {
		if ($('#chkVoronoi').is(":checked")) {
			$("#divVorBeverages").show();
		}
        for (i = 0; i < len; i++) {
            switch ($("#beveragesSelect").val()[i]) {
				case 'cbrands':
					cbrands.setVisible(true);
					addLegendContent('<div id="cbrandsLegend"><table><tr><td><a id="cbrandsImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="cbrands" onchange="handleLegend($(this));" checked/></td><td><img height="40px" width="25px" src="images/Icons/cbrands/pin-headquarters.png" /></td><td>Constellation Brands</td></tr></table></div>', true, "legendData");
					cbrands.set('displayInLayerSwitcher', true);
					break;

                default:
                    break;
            }
        }
    }
}

function addDCData() {
    $("#logosDC").hide();
    $("#radiusDC").hide();
	$("#divVorDC").hide();
    $("#optDMA").hide();
	
    $("#mclaneLegend").remove();
    $("#amazonLegend").remove();
    $("#syscoLegend").remove();
    $("#robinsonfreshLegend").remove();
    $("#keheLegend").remove();
    $("#vistarLegend").remove();
    $("#sygmaLegend").remove();
    $("#dmadcsLegend").remove();
    $("#pfgpfsLegend").remove();
    $("#usfLegend").remove();
    $("#fedexLegend").remove();
    $("#dhlLegend").remove();
    $("#upsLegend").remove();
    $("#dmaLegend").remove();
    try {
        $("#popup-closer").click();
    } catch (ex) {}

    mclane.setVisible(false);
    amazon.setVisible(false);
    sysco.setVisible(false);
    robinsonfresh.setVisible(false);
    kehe.setVisible(false);
    vistar.setVisible(false);
    sygma.setVisible(false);
    dmadcs.setVisible(false);
    pfgpfs.setVisible(false);
    usf.setVisible(false);
    fedex.setVisible(false);
    dhl.setVisible(false);
    ups.setVisible(false);
    dma.setVisible(false);
	
    mclane.set('displayInLayerSwitcher', false);
    amazon.set('displayInLayerSwitcher', false);
    sysco.set('displayInLayerSwitcher', false);
    robinsonfresh.set('displayInLayerSwitcher', false);
    kehe.set('displayInLayerSwitcher', false);
    pfgpfs.set('displayInLayerSwitcher', false);
    sygma.set('displayInLayerSwitcher', false);
    dmadcs.set('displayInLayerSwitcher', false);
    vistar.set('displayInLayerSwitcher', false);
    usf.set('displayInLayerSwitcher', false);
    fedex.set('displayInLayerSwitcher', false);
    dhl.set('displayInLayerSwitcher', false);
    ups.set('displayInLayerSwitcher', false);
    dma.set('displayInLayerSwitcher', false);
	
	if ($('#cbDCVoronoi').is(":checked")) 
		toggleClusterVor('WFS','DC'); 

    radiusAmazonLayer.setVisible(false);
    radiusDMALayer.setVisible(false);
    radiusMclaneLayer.setVisible(false);
    radiusSyscoLayer.setVisible(false);
    radiusRobinsonFreshLayer.setVisible(false);
    radiusKeHELayer.setVisible(false);
    radiusPFGPSFLayer.setVisible(false);
    radiusSygmaLayer.setVisible(false);
    radiusDmaDcsLayer.setVisible(false);
    radiusVistarLayer.setVisible(false);
    radiusUsfLayer.setVisible(false);
    var len = 0;
    try {
        len = $("#dcData").val().length;
    } catch (ex) {}
    if (len > 0) {
		if ($('#chkLogo').is(":checked") || $('#chkIcon').is(":checked")) {
			$("#logosDC").show();
			$("#radiusDC").show();
		}
		if ($('#chkVoronoi').is(":checked")) {
			$("#divVorDC").show();
		}
        for (i = 0; i < len; i++) {
			if(len==1 && $("#dcData").val().indexOf("dma") !== -1){
				$("#optDMA").show();
				$("#divVorDC").hide();
			}
            switch ($("#dcData").val()[i]) {
                case 'mclane':
                    if ($('#switchRadiusDC').prop('checked'))
                        radiusMclaneLayer.setVisible(true);
					mclane.setVisible(true);
                    addLegendContent('<div id="mclaneLegend"><table><tr><td><a id="mclaneImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="mclane" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="75px" src="images/Icons/distributions/mclane.png" /></td><td>McLane DCs</td></tr></table></div>', true, "legendData");
					mclane.set('displayInLayerSwitcher', true);
					break;
                case 'amazon':
                    if ($('#switchRadiusDC').prop('checked'))
                        radiusAmazonLayer.setVisible(true);
					amazon.setVisible(true);
                    addLegendContent('<div id="amazonLegend"><table><tr><td><a id="amazonImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="amazon" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/distributions/amazon.png" /></td><td>Amazon DCs</td></tr></table></div>', true, "legendData");
					amazon.set('displayInLayerSwitcher', true);
                    break;
                case 'sysco':
                    if ($('#switchRadiusDC').prop('checked'))
                        radiusSyscoLayer.setVisible(true);
					sysco.setVisible(true);
                    addLegendContent('<div id="syscoLegend"><table><tr><td><a id="syscoImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="sysco" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="65px" src="images/Icons/distributions/sysco.png" /></td><td>Sysco DCs</td></tr></table></div>', true, "legendData");
					sysco.set('displayInLayerSwitcher', true);
					break;
                case 'robinsonfresh':
                    if ($('#switchRadiusDC').prop('checked'))
                        radiusRobinsonFreshLayer.setVisible(true);
					robinsonfresh.setVisible(true);
                    addLegendContent('<div id="robinsonfreshLegend"><table><tr><td><a id="robinsonfreshImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="robinsonfresh" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="65px" src="images/Icons/distributions/robinsonfresh.png" /></td><td>RobinsonFresh</td></tr></table></div>', true, "legendData");
					robinsonfresh.set('displayInLayerSwitcher', true);
					break;
                case 'kehe':
                    if ($('#switchRadiusDC').prop('checked'))
                        radiusKeHELayer.setVisible(true);
					kehe.setVisible(true);
                    addLegendContent('<div id="keheLegend"><table><tr><td><a id="keheImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="kehe" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="35px" src="images/Icons/distributions/kehe.png" /></td><td>KeHE Distributors</td></tr></table></div>', true, "legendData");
					kehe.set('displayInLayerSwitcher', true);
					break;
                case 'sygma':
                    if ($('#switchRadiusDC').prop('checked'))
                        radiusSygmaLayer.setVisible(true);
					sygma.setVisible(true);
                    addLegendContent('<div id="sygmaLegend"><table><tr><td><a id="sygmaImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="sygma" onchange="handleLegend($(this));" checked/></td><td><img height="30px" width="80px" src="images/Icons/distributions/sygma.png" /></td><td>Sygma</td></tr></table></div>', true, "legendData");
					sygma.set('displayInLayerSwitcher', true);
					break;
                case 'dmadcs':
                    if ($('#switchRadiusDC').prop('checked'))
                        radiusDmaDcsLayer.setVisible(true);
					dmadcs.setVisible(true);
                    addLegendContent('<div id="dmadcsLegend"><table><tr><td><a id="dmadcsImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="dmadcs" onchange="handleLegend($(this));" checked/></td><td><img height="30px" width="20px" src="images/Icons/distributions/dmadcs.png" /></td><td>DMA DCs</td></tr></table></div>', true, "legendData");
					dmadcs.set('displayInLayerSwitcher', true);
					break;
                case 'vistar':
                    if ($('#switchRadiusDC').prop('checked'))
                        radiusVistarLayer.setVisible(true);
					vistar.setVisible(true);
                    addLegendContent('<div id="vistarLegend"><table><tr><td><a id="vistarImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="vistar" onchange="handleLegend($(this));" checked/></td><td><img height="30px" width="80px" src="images/Icons/distributions/vistar.png" /></td><td>Vistar</td></tr></table></div>', true, "legendData");
					vistar.set('displayInLayerSwitcher', true);
					break;
                case 'pfgpfs':
                    if ($('#switchRadiusDC').prop('checked'))
                        radiusPFGPSFLayer.setVisible(true);
					pfgpfs.setVisible(true);
                    addLegendContent('<div id="pfgpfsLegend"><table><tr><td><a id="pfgpfsImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="pfgpfs" onchange="handleLegend($(this));" checked/></td><td><img height="30px" width="80px" src="images/Icons/distributions/pfgpfs.png" /></td><td>PFG / PFS</td></tr></table></div>', true, "legendData");
					pfgpfs.set('displayInLayerSwitcher', true);
					break;
                case 'usfoods':
                    if ($('#switchRadiusDC').prop('checked'))
                        radiusUsfLayer.setVisible(true);
					usf.setVisible(true);
                    addLegendContent('<div id="usfLegend"><table><tr><td><a id="usfImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="usf" onchange="handleLegend($(this));" checked/></td><td><img height="30px" width="40px" src="images/Icons/distributions/usf.png" /></td><td>US Foods</td></tr></table></div>', true, "legendData");
					usf.set('displayInLayerSwitcher', true);
					break;
                case 'fedex':
                    fedex.setVisible(true);
                    addLegendContent('<div id="fedexLegend"><table><tr><td><a id="fedexImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="fedex" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="50px" src="images/Icons/distributions/fedex.png" /></td><td>Fedex</td></tr></table></div>', true, "legendData");
					fedex.set('displayInLayerSwitcher', true);
					break;
                case 'dhl':
                    dhl.setVisible(true);
                    addLegendContent('<div id="dhlLegend"><table><tr><td><a id="dhlImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="dhl" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="50px" src="images/Icons/distributions/dhl.png" /></td><td>DHL</td></tr></table></div>', true, "legendData");
					dhl.set('displayInLayerSwitcher', true);
                    break;
                case 'usps':
					ups.setVisible(true);
                    addLegendContent('<div id="upsLegend"><table><tr><td><a id="upsImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="ups" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/distributions/ups.png" /></td><td>UPS</td></tr></table></div>', true, "legendData");
					ups.set('displayInLayerSwitcher', true);
					break;
                case 'dma':
                    if ($('#switchRadiusDC').prop('checked'))
                        radiusDMALayer.setVisible(true);
                    $("#optDMA").show();
                    addLegendContent('<div id="dmaLegend"><table><tr><td><a id="dmaImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="dma" onchange="handleLegend($(this));" checked/></td><td colspan="2">DMA Partner Companies</td></tr><tr><td colspan="2"></td><td><img height="50px" width="100px" src="images/Icons/warehouses/Ben E. Keith Foods.png" /></td><td>Ben E. Keith Foods</td></tr><tr><td colspan="2"></td><td><img height="40px" width="100px" src="images/Icons/warehouses/Cheney Brothers, Inc.png" /></td><td>Cheney Brothers, Inc</td></tr><tr><td colspan="2"></td><td><img height="40px" width="100px" src="images/Icons/warehouses/Food Services of America.png" /></td><td>Food Services of America</td></tr><tr><td colspan="2"></td><td><img height="30px" width="100px" src="images/Icons/warehouses/Gordon Food Service.png" /></td><td>Gordon Food Service</td></tr><tr><td colspan="2"></td><td><img height="50px" width="70px" src="images/Icons/warehouses/HPC Foodservice.png" /></td><td>HPC Foodservice</td></tr><tr><td colspan="2"></td><td><img height="40px" width="100px" src="images/Icons/warehouses/Jacmar.png" /></td><td>Jacmar</td></tr><tr><td colspan="2"></td><td><img height="40px" width="100px" src="images/Icons/warehouses/Merchants Foodservice.png" /></td><td>Merchants Foodservice</td></tr><tr><td colspan="2"></td><td><img height="50px" width="100px" src="images/Icons/warehouses/Nicholas & Co., Inc..png" /></td><td>Nicholas & Co., Inc.</td></tr><tr><td colspan="2"></td><td><img height="40px" width="100px" src="images/Icons/warehouses/Reinhart Foodservice.png" /></td><td>Reinhart Foodservice</td></tr><tr><td colspan="2"></td><td><img height="60px" width="100px" src="images/Icons/warehouses/Shamrock Foods.png" /></td><td>Shamrock Foods</td></tr><tr><td colspan="2"></td><td><img height="40px" width="100px" src="images/Icons/warehouses/Systems Services of America.png" /></td><td>Systems Services of America</td></tr></table></div>', true, "legendData");
					dma.set('displayInLayerSwitcher', true);
					break;
                default:
                    break;
            }
        }
    } else {
        if ($('#switchRadiusDC').prop('checked'))
            $("#switchRadiusDC").click();
    }
}

function filterDMA() {
	$("#divVorDC").hide();
    if ($('#switchRadiusDC').prop('checked'))
        $("#switchRadiusDC").click();

    if ($('#switchLabelsDC').prop('checked', false))
        $("#switchLabelsDC").click();
    var lenDMA = 0;
    var legend = '';
    var result = '';
    $("#dmaLegend").remove();
    try {
        lenDMA = $("#dmaCompanies").val().length;
    } catch (ex) {}
    if (lenDMA > 0) {
		$("#divVorDC").show();
        for (i = 0; i < lenDMA; i++) { 
            result += "\"ord\"='" + $("#dmaCompanies").val()[i] + "' or ";
        }
        result = result.substring(0, result.length - 3);
    }
    legend = '<div id="dmaLegend"><table><tr><td><a id="dmaImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="dma" onchange="handleLegend($(this));" checked/></td><td colspan="2">DMA Partner Companies</td></tr>';
    for (i = 0; i < lenDMA; i++) { 
        if ($("#dmaCompanies").val()[i] == "1")
            legend += '<tr><td colspan="2"></td><td><img height="40px" width="100px" src="images/Icons/warehouses/Ben E. Keith Foods.png" /></td><td>Ben E. Keith Foods</td></tr>';
        if ($("#dmaCompanies").val()[i] == "2")
            legend += '<tr><td colspan="2"></td><td><img height="40px" width="100px" src="images/Icons/warehouses/Cheney Brothers, Inc.png" /></td><td>Cheney Brothers, Inc</td></tr>';
        if ($("#dmaCompanies").val()[i] == "3")
            legend += '<tr><td colspan="2"></td><td><img height="40px" width="100px" src="images/Icons/warehouses/Food Services of America.png" /></td><td>Food Services of America</td></tr>';
        if ($("#dmaCompanies").val()[i] == "4")
            legend += '<tr><td colspan="2"></td><td><img height="40px" width="100px" src="images/Icons/warehouses/Gordon Food Service.png" /></td><td>Gordon Food Service</td></tr>';
        if ($("#dmaCompanies").val()[i] == "5")
            legend += '<tr><td colspan="2"></td><td><img height="40px" width="100px" src="images/Icons/warehouses/HPC Foodservice.png" /></td><td>HPC Foodservice</td></tr>';
        if ($("#dmaCompanies").val()[i] == "6")
            legend += '<tr><td colspan="2"></td><td><img height="40px" width="100px" src="images/Icons/warehouses/Jacmar.png" /></td><td>Jacmar</td></tr>';
        if ($("#dmaCompanies").val()[i] == "7")
            legend += '<tr><td colspan="2"></td><td><img height="40px" width="100px" src="images/Icons/warehouses/Merchants Foodservice.png" /></td><td>Merchants Foodservice</td></tr>';
        if ($("#dmaCompanies").val()[i] == "8")
            legend += '<tr><td colspan="2"></td><td><img height="40px" width="100px" src="images/Icons/warehouses/Nicholas & Co., Inc..png" /></td><td>Nicholas & Co., Inc.</td></tr>';
        if ($("#dmaCompanies").val()[i] == "9")
            legend += '<tr><td colspan="2"></td><td><img height="40px" width="100px" src="images/Icons/warehouses/Reinhart Foodservice.png" /></td><td>Reinhart Foodservice</td></tr>';
        if ($("#dmaCompanies").val()[i] == "10")
            legend += '<tr><td colspan="2"></td><td><img height="60px" width="100px" src="images/Icons/warehouses/Shamrock Foods.png" /></td><td>Shamrock Foods</td></tr>';
        if ($("#dmaCompanies").val()[i] == "11")
            legend += '<tr><td colspan="2"></td><td><img height="40px" width="100px" src="images/Icons/warehouses/Systems Services of America.png" /></td><td>Systems Services of America</td></tr>';
    }
    legend += '</table></div>';
	map.removeLayer(dma);
	dma = getFilteredAlbertsons("DMA", result);
    addLegendContent(legend, "dma", "legendData");
	map.getLayers().insertAt(301, dma);

	if ($('#switchLabelsDC').is(":checked"))
		changeLabelsDC('active');		
	else
		changeLabelsDC('dull');
}

function filterFiveGuys() {
	// $("#divVorDC").hide();
    // if ($('#switchRadiusFoodAway').prop('checked'))
        // $("#switchRadiusFoodAway").click();

    // if ($('#switchLabelsFoodAway').prop('checked', false))
        // $("#switchLabelsFoodAway").click();
    var lenFG = 0;
    var legend = '';
    var result = '';
    try {
        lenFG = $("#fiveguysFilter").val().length;
    } catch (ex) {}
    if (lenFG > 0) {
		$("#divVorDC").show();
        for (i = 0; i < lenFG; i++) { 
            result += "\"" + $("#fiveguysFilter").val()[i]+ "\"='true' or ";
        }
        result = result.substring(0, result.length - 3);
    }
	else
		result = "\"beer\"='umair' or \"breakfast\"='umair' or \"cokefrees\"='umair' or \"milkshakes\"='umair' or \"delivery\"='umair'";
	map.removeLayer(fiveguys);
	fiveguys = getFilteredAlbertsons("Five Guys", result);
	map.getLayers().insertAt(390, fiveguys);

	if ($('#switchLabelsFoodAway').is(":checked"))
		changeLabelsFoodAway('active');		
	else
		changeLabelsFoodAway('dull');
}

function addRefrigeratedData() { /**/
	$("#refriLegend").remove();
    $("#logosShipping").hide();
    $("#logosRefri").hide();
    $("#radiusRefri").hide();
    $("#activitesRef").hide();
	$("#divShippingOpts").hide();
	$("#intraBar").hide();
	$("#InteractiveChord").hide();
	$("#divVorRef").hide();
	$("#divTransRefri").hide();
	try {svg.selectAll("*").remove();} catch (ex) {}
	try {map.removeLayer(statesWFSVoronoi);} catch (ex) {}
	try {map.removeLayer(shipping);} catch (ex) {}
    $("#refrigeratedLegend").remove();
    try {
        $("#popup-closer").click();
    } catch (ex) {}

	refrigeratedlocations.set('displayInLayerSwitcher', false);
	refri.set('displayInLayerSwitcher', false);
        
	refrigeratedlocations.setVisible(false);
    radiusRefriLayer.setVisible(false);
    refri.setVisible(false);
	
	if ($('#cbRefVoronoi').is(":checked")) 
		toggleClusterVor('WFS','Refrigerated'); 
	
    var len = 0;
    try {
        len = $("#selRefrigerated").val().length;
    } catch (ex) {}
    if (len > 0) {
        for (i = 0; i < len; i++) {
			if(len==1 && $("#selRefrigerated").val().indexOf("refrigerated") !== -1){
				$("#activitesRef").show();
				$("#divVorRef").hide();
			}
            switch ($("#selRefrigerated").val()[i]) {
                case 'refrigerated':
					if ($('#chkLogo').is(":checked") || $('#chkIcon').is(":checked")) {
						$("#logosRefri").show();
						$("#radiusRefri").show();
					}
					if ($('#chkVoronoi').is(":checked")) {
						$("#divVorRef").show();
					}
                    addLegendContent('<div id="refrigeratedLegend"><table><tr><td><a id="refrigeratedImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="refrigerated" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/refrigerated.png" /></td><td>R&F Locations</td></tr></table></div>', true, "legendData");
					refrigeratedlocations.set('displayInLayerSwitcher', true);
                    break;
				case 'refri':
					updateLook();
					$("#divTransRefri").show();
					refri.setVisible(true);
					refri.set('displayInLayerSwitcher', true);
					break;
				case 'shipping':
					$('#commoditiesSelect').find('[value=eggplants]').prop('selected', false);
					$("#logosShipping").show();
					addStatesVoro('Shipping','states', true);//idher
					addShippingData('flights');
					shippingRef('none');
					$("#divShippingOpts").show();
					break;
                default:
                    break;
            }
        }
    } else {
        if ($('#switchRadiusRefri').prop('checked'))
            $("#switchRadiusRefri").click();
    }
}

function filterActivities() {
	if ($('#chkLogo').is(":checked") || $('#chkIcon').is(":checked")) {
		$("#logosRefri").show();
		$("#radiusRefri").show();
	}
	if ($('#chkVoronoi').is(":checked")) {
		$("#divVorRef").show();
	}
    if ($('#switchRadiusRefri').prop('checked'))
        changeRefriRadius('active');
	
    var len = 0,
        result = '';
    try {
        len = $("#activityFilter").val().length;
    } catch (ex) {
        refrigeratedlocations.setVisible(false);
		radiusRefriLayer.setVisible(false);
		radiusRefriLayer.getSource().clear();
        return;
    }

    for (i = 0; i < $("#activityFilter").val().length; i++) {
		var val = "%25" + $("#activityFilter").val()[i] + "%25";
        result += "category LIKE '" + val + "' or ";
    }
	result = result.substring(0, result.length - 3);
	map.removeLayer(refrigeratedlocations);
	refrigeratedlocations = getFilteredAlbertsons("R&F Locations", result);
	map.getLayers().insertAt(145, refrigeratedlocations);
	
	if ($('#switchLabelsRefri').is(":checked"))
		changeLabelsRefri('active');
	else
		changeLabelsRefri('dull');
}

function shippingRef(val){ /**/
	if(val=='selTraffic') {
		try{svg.selectAll("*").remove();}catch(ex){}
		loadStyle();
		return;
	}
	if(val=='selTrafficEgg') {
		try{svg.selectAll("*").remove();}catch(ex){}
		loadStyle('eggplants');
		return;
	}
	else if(val=='selMode') {
		flag=0;
		origFlag=0;
		destFlag=0;
		try{svg.selectAll("*").remove();}catch(ex){}
		try{map.removeLayer(shipping);}catch(ex){}
		mode=$("#selMode").val();
		loadStyle();
		return;
	}
}

function loadStyle(val) {/**/
	var p="crosses";
	var PatternStyle = new ol.style.Style(
	{
		fill: new ol.style.FillPattern({
			pattern: (p!='Image (PNG)') ? p : undefined,
			image: (p=='Image (PNG)') ? new ol.style.Icon({ src : imgFile }) : undefined,
			ratio: 1,
			icon: p=='Image (PNG)' ? new ol.style.Icon ({src:'data/target.png'}) : undefined,
			color: '#C8C8C8',
			offset: 0,
			scale: 1,
			fill: new ol.style.Fill ({ color:'#FFFFFF' }),
			size: 7,
			spacing: 12,
			angle: 45
		})
	});
	var SimpleStyle = new ol.style.Style({
		stroke: new ol.style.Stroke({
			color: '#000',
			width: 0.2
		})
	});
	if(val=="eggplants"){
		statesWFSVoronoi.setStyle(
			function(feature) {
				var name=feature.get('name');
				if($("#selTrafficEgg").val()=="in"){
					if(name == "MARYLAND" || name == "FLORIDA" || name == "ILLINOIS" || name == "MASSACHUSETTS" || name == "GEORGIA" || name == "PENNSYLVANIA" || name == "TEXAS" || name == "WASHINGTON" || name == "MICHIGAN" || name == "CALIFORNIA" || name == "NEW YORK")
						return SimpleStyle;
					else
						return PatternStyle;
				}
				else if($("#selTrafficEgg").val()=="out"){
					if(name == "NEW JERSEY" || name == "MARYLAND" || name == "FLORIDA" || name == "OHIO" || name == "GEORGIA" || name == "PENNSYLVANIA" || name == "NORTH CAROLINA" || name == "MICHIGAN" || name == "CALIFORNIA" || name == "TENNESSEE" || name == "VIRGINIA" || name == "SOUTH CAROLINA" || name == "MISSISSIPPI" || name == "KENTUCKY" || name == "NETHERLANDS" || name == "MEXICO" || name == "CANADA" || name == "NEW YORK" || name == "CONNECTICUT")
						return SimpleStyle;
					else
						return PatternStyle;
				}
			}	
		);
	}
	else {
		statesWFSVoronoi.setStyle(
			function(feature) {
				var name=feature.get('name');
				if($("#selMode").val()=="all" || $("#selMode").val()=="truck" && $("#selTraffic").val()=="in"){
					if(name=='DISTRICT OF COLUMBIA')
						return PatternStyle;
					else
						return SimpleStyle;
				}
				else if($("#selMode").val()=="all" || $("#selMode").val()=="truck" && $("#selTraffic").val()=="out"){
					if(name=='DISTRICT OF COLUMBIA')
						return PatternStyle;
					else
						return SimpleStyle;
				}
				else if($("#selMode").val()=="air" && $("#selTraffic").val()=="in"){
					if(name=='ALABAMA' || name=='ARIZONA' || name=='ARKANSAS' || name=='CALIFORNIA' || name=='COLORADO' || name=='FLORIDA' || name=='GEORGIA' || name=='IDAHO' || name=='ILLINOIS' || name=='INDIANA' || name=='KANSAS' || name=='MARYLAND' || name=='MASSACHUSETTS' || name=='NEVADA' || name=='NEW JERSEY' || name=='NEW YORK' || name=='OHIO' || name=='OREGON' || name=='PENNSYLVANIA' || name=='SOUTH CAROLINA' || name=='TEXAS' || name=='UTAH' || name=='VIRGINIA' || name=='WASHINGTON' || name=='WISCONSIN')
						return SimpleStyle;
					else
						return PatternStyle;
				}
				else if($("#selMode").val()=="air" && $("#selTraffic").val()=="out"){
					if(name=='CALIFORNIA' || name=='CONNECTICUT' || name=='ILLINOIS' || name=='LOUISIANA' || name=='MASSACHUSETTS' || name=='NEW JERSEY' || name=='NORTH CAROLINA' || name=='TEXAS' || name=='VIRGINIA' || name=='WISCONSIN')
						return SimpleStyle;
					else
						return PatternStyle;
				}
				else if($("#selMode").val()=="train" && $("#selTraffic").val()=="in"){
					if(name=='CALIFORNIA' || name=='FLORIDA' || name=='GEORGIA' || name=='ILLINOIS' || name=='MASSACHUSETTS' || name=='NEW JERSEY' || name=='NEW YORK' || name=='OHIO' || name=='OREGON' || name=='TEXAS' || name=='WASHINGTON')
						return SimpleStyle;
					else
						return PatternStyle;
				}
				else if($("#selMode").val()=="train" && $("#selTraffic").val()=="out"){
					if(name=='CALIFORNIA' || name=='COLORADO' || name=='ILLINOIS' || name=='MASSACHUSETTS' || name=='RHODE ISLAND')
						return SimpleStyle;
					else
						return PatternStyle;
				}
				else if($("#selMode").val()=="mail" && $("#selTraffic").val()=="in"){
					if(name=='DISTRICT OF COLUMBIA')
						return PatternStyle;
					else
						return SimpleStyle;
				}
				else if($("#selMode").val()=="mail" && $("#selTraffic").val()=="out"){
					if(name=='ARKANSAS' || name=='CALIFORNIA' || name=='COLORADO' || name=='ILLINOIS' || name=='IOWA' || name=='KANSAS' || name=='KENTUCKY' || name=='MAINE' || name=='MASSACHUSETTS' || name=='MICHIGAN' || name=='MINNESOTA' || name=='MISSOURI' || name=='NEBRASKA' || name=='NEW HAMPSHIRE' || name=='NEW JERSEY' || name=='NORTH CAROLINA' || name=='OHIO' || name=='OKLAHOMA' || name=='PENNSYLVANIA' || name=='RHODE ISLAND' || name=='TENNESSEE' || name=='TEXAS' || name=='VIRGINIA' || name=='WISCONSIN') {
						return new ol.style.Style({
							stroke: new ol.style.Stroke({
								color: '#000',
								width: 0.2
							})
						});
					}
					else {
						return PatternStyle;
					}
				}
			}	
		);
	}
}

function selectRegionBoundary() {
    $("#boundariesRegionLegend").remove();
    $("#divDivisionBoundary").hide();
    $("#divStateBoundary").hide();
    $("#boundariesRegion").remove();
    $("#divCountiesBoundary").hide();
    $("#btnBoundaryReset").hide();
    txtSearchLayerRegion.setVisible(false);
    var table = "";

    switch ($("#selRegionBoundary").val()) {
        case 'none':
            toastr.error("Please select the region");
			$("#divDivisionBoundary").hide();
			$("#divStateBoundary").hide();
			$("#divCountiesBoundary").hide();
			$("#boundariesRegion").remove();
			$("#btnBoundaryReset").hide();
            return;
            break;
        case 'censusfBoundary':
            table = "censusf";
            break;
        case 'censusnBoundary':
            table = "censusn";
            break;
        case 'ariBoundary':
            table = "ari";
            break;
        case 'beaBoundary':
            table = "bea";
            break;
        case 'reaBoundary':
            table = "rea";
            break;
        default:
            break;
    }
    fetchSearchLayerDataRegion('../geoserver/wfs?service=WFS&' +
        'version=1.1.0&request=GetFeature&typename=Farmer:' + table +
        '&outputFormat=application/json&srsname=EPSG:3857&' +
        ',EPSG:3857');
    $("#divDivisionBoundary").show();

    addLegendContent('<div id="boundariesRegionLegend"><table><tr><td><a id="boundariesRegionImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="boundariesRegion" onchange="handleLegend($(this));" checked/></td><td colspan="2">Region</td></tr><tr><td colspan="2"></td><td><p style="margin-left: 3px; margin-right: 10px; float: left; color:#FAAF18;">----------</p><td></tr></table></div>', true, "legendArea");

    $('#division').each(function(index, value) {
        var select = $(this);
        var list = [];
        var gid = '';
        // list.push('<option value="none">Select the Division</option>');

        $.getJSON('readGeojson.php?cond=getDiv&tab=' + table, function(data) {
            $.each(data, function(key, val) {
                list.push('<option value="' + val.name + '">' + val.name + '</option>');
                gid = val.gid;
            });
            select.html(list.join(''));
            select.selectpicker('refresh');
        });
    });
}

function selectDivisionRegions() {
    $("#divStateBoundary").hide();
    $("#boundariesRegionLegend").remove();
    $("#divCountiesBoundary").hide();
    if ($("#division").val() == "none") {
        $("#divStates").hide();
        toastr.error("Please select the divison");
        selectRegion();
        return;
    }
    var statesTable = "";
    var col = "";
    var table = "";

    switch ($("#selRegionBoundary").val()) {
        case 'censusfBoundary':
            statesTable = "states";
            col = "censusfid";
            table = "censusf";
            break;
        case 'censusnBoundary':
            statesTable = "states";
            col = "censusnid";
            table = "censusn";
            break;
        case 'ariBoundary':
            statesTable = "aristates";
            col = "regionid";
            table = "ari";
            break;
        case 'beaBoundary':
            statesTable = "states";
            col = "beaid";
            table = "bea";
            break;
        case 'reaBoundary':
            statesTable = "reastates";
            col = "regionid";
            table = "rea";
            break;
        default:
            break;
    }
    $("#divStateBoundary").show();
    ar = false;

    // switch ($("#selRegionBoundary").val()) {
        // case 'censusfBoundary':
            // break;
        // case 'censusnBoundary':
            // break;
        // case 'ariBoundary':
            // break;
        // case 'beaBoundary':
            // break;
        // case 'reaBoundary':
            // break;
    // }
    addLegendContent('<div id="boundariesRegionLegend"><table><tr><td><a id="boundariesRegionImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="boundariesRegion" onchange="handleLegend($(this));" checked/></td><td colspan="2">Boundary Overlay</td></tr><tr><td colspan="2"></td><td><img src="images/Legend/region.png" /><td>Division(s)</td></tr></table></div>', true, "legendArea");

    $('#stateRegions').each(function(index, value) {
        var select = $(this);
        var list = [];
        var gid = '';

        $.getJSON('readGeojson.php?cond=getStates&tab=' + statesTable + '&value=' + $("#division").val() + '&par=' + table + '&col=' + col, function(data) {
            $.each(data, function(key, val) {
                lat = '', lon = ''
                list.push('<option value="' + val.id + '">' + val.name + '</option>');
                gid = val.gid;
            });
            select.html(list.join(''));
            select.selectpicker('refresh');
        });
    });
				
	// if(table == "ari" || table == "rea")
	// {
		fetchSearchLayerDataRegion('../geoserver/wfs?service=WFS&' +
		'version=1.1.0&request=GetFeature&typename=Farmer:' + table + '&CQL_FILTER=name=' + '\'' + $("#division").val() + '\'&outputFormat=application/json&srsname=EPSG:3857&,EPSG:3857');
	// }
	// else{
		// fetchSearchLayerDataRegion('../geoserver/wfs?service=WFS&' +
			// 'version=1.1.0&request=GetFeature&typename=Farmer:' + statesTable + '&CQL_FILTER='+ table +'region=' + '\'' + $("#division").val() + '\'' +
			// '&outputFormat=application/json&srsname=EPSG:3857&' +
			// ',EPSG:3857');
	// }
}

function selectStateRegions() {
    $("#divCountiesBoundary").hide();
    $("#boundariesRegionLegend").remove();
    var len = 0;
    try {
        len = $("#stateRegions").val().length;
    } catch (e) {}
    if (len == 0) {
        selectDivisionRegions();
        $("#divCounties").hide();
        $("#divCity").hide();
        toastr.error("Please select the State(s)");
        return;
    }
    if (len > 0) {
        var statesTable = "";

        switch ($("#selRegionBoundary").val()) {
            case 'censusfBoundary':
                statesTable = "states";
                break;
            case 'censusnBoundary':
                statesTable = "states";
                break;
            case 'ariBoundary':
                statesTable = "aristates";
                break;
            case 'beaBoundary':
                statesTable = "states";
                break;
            case 'reaBoundary':
                statesTable = "reastates";
                break;
            default:
                break;
        }
        var result = '';
        for (i = 0; i < $("#stateRegions").val().length; i++) {
            result += "b.gid='" + $("#stateRegions").val()[i] + "' or ";
        }
        result = result.substring(0, result.length - 3);

        var state = '';
        for (i = 0; i < $("#stateRegions").val().length; i++) {
            state += "\"gid\"='" + $("#stateRegions").val()[i] + "' or ";
        }
        state = state.substring(0, state.length - 3);
        fetchSearchLayerDataRegion('../geoserver/wfs?service=WFS&' +
            'version=1.1.0&request=GetFeature&typename=Farmer:' + statesTable + '&CQL_FILTER=' + state + '' +
            '&outputFormat=application/json&srsname=EPSG:3857&' +
            ',EPSG:3857');

        var table;
        switch (statesTable) {
            case 'states':
                table = "counties";
                break;
            case 'aristates':
                table = "aricounties";
                break;
            case 'reastates':
                table = "reacounties";
                break;
            default:
                break;
        }
		$("#divCountiesBoundary").show();
		$("#btnBoundaryReset").show();
        // if (detailSelected == "Region") {
            // $("#divCounties").show();

            // ar = false;
            addLegendContent('<div id="boundariesRegionLegend"><table><tr><td><a id="boundariesRegionImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="boundariesRegion" onchange="handleLegend($(this));" checked/></td><td colspan="2">Boundary Overlay</td></tr><tr><td colspan="2"></td><td><img src="images/Legend/states.png" /><td>State(s)</td></tr></table></div>', true, "legendArea");
            $('#countyRegions').each(function(index, value) {
                var select = $(this);
                var list = [];

                list.push('<option value="none">Select the Counties</option>');
                $.getJSON('readGeojson.php?cond=getCounties&tab=' + table + '&par=' + statesTable + '&value=' + result, function(data) {
                    $.each(data, function(key, val) {
                        list.push('<option value="' + val.gid + '">' + val.name + '</option>');
                    });
                    select.html(list.join(''));
                    select.selectpicker('refresh');
                });
            });
        // }
    }
	else
		selectDivisionRegions();
}

function selectCountiesRegions() {
    $("#boundariesRegionLegend").remove();
    if ($("#countyRegions").val() == "none") {
        $("#divCounties").hide();
		selectStateRegions();
        toastr.error("Please select County(ies)");
        return;
    }
    try {
        var len = $("#countyRegions").val().length;
    } catch (e) {}
    if (len > 0) {
        var statesTable = "";
        switch ($("#selRegionBoundary").val()) {
            case 'censusfBoundary':
                countiesTable = "counties";
                break;
            case 'censusnBoundary':
                countiesTable = "counties";
                break;
            case 'ariBoundary':
                countiesTable = "aricounties";
                break;
            case 'beaBoundary':
                countiesTable = "counties";
                break;
            case 'reaBoundary':
                countiesTable = "reacounties";
                break;
            default:
                break;
        }
        var result = '';
        for (i = 0; i < $("#countyRegions").val().length; i++) {
            result += "gid='" + $("#countyRegions").val()[i] + "' or ";
        }
        result = result.substring(0, result.length - 3);

        if (result.indexOf("none") !== -1)
            result = result.replace("gid='none' or ", "");

        fetchSearchLayerDataRegion('../geoserver/wfs?service=WFS&' +
            'version=1.1.0&request=GetFeature&typename=Farmer:' + countiesTable + '&CQL_FILTER=' + result + '' +
            '&outputFormat=application/json&srsname=EPSG:3857&' +
            ',EPSG:3857');

        ar = false;
        addLegendContent('<div id="boundariesRegionLegend"><table><tr><td><a id="boundariesRegionImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="boundariesRegion" onchange="handleLegend($(this));" checked/></td><td colspan="2">Boundary Overlay</td></tr><tr><td colspan="2"></td><td><img src="images/Legend/counties.png" /><td>Counties</td></tr></table></div>', true, "legendArea");
    } else
        
		selectStateRegions();
}

function resetSelectionsBoundary(){
    $('#selRegionBoundary').find('[value=none]').prop('selected', true);
    $("#boundariesLegend").remove();
    $("#btnBoundaryReset").hide();
    $("#divDivisionBoundary").hide();
    $("#divStateBoundary").hide();
    $("#divCountiesBoundary").hide();
	
    txtSearchLayerRegion.setVisible(false);
}

function addRespectiveUnits(tab, lyrNameWFS, lyrNameWMS, ind, lyrTitle) {
    map.getLayers().removeAt(ind);
    source = new ol.source.Vector({
        loader: function(extent, resolution, projection) {
            var extent = map.getView().calculateExtent(map.getSize());
            extent = ol.extent.applyTransform(extent, ol.proj.getTransform("EPSG:3857", "EPSG:4326"));
            var url = '../geoserver/ows?' +
                'service=WFS&request=GetFeature&' +
                'version=1.0.0&typename=Farmer:' + tab + '&' +
                'outputFormat=application/json&PropertyName=gid,name,geom&srsname=EPSG:3857&bbox=' + extent.join(',');

            $.ajax({
                url: url,
                dataType: 'json',
                beforeSend: function(e) {
                    $('#js-progress-bar').css({
                        'opacity': '1',
                        'height': '5px'
                    });
                    ++tilesPending;
                },
                success: function(data) {
                    ++tilesLoaded;
                    var percentage = Math.round(tilesLoaded / tilesPending * 100);
                    $('#js-progress-bar').css({
                        'width': percentage + '%'
                    });
                    if (percentage >= 100) {
                        setTimeout(function() {
                            $('#js-progress-bar').css({
                                'width': '0',
                                'opacity': '0'
                            });
                            tilesLoaded = 0;
                            tilesPending = 0;
                        }, 600);
                    }
                    var features = new ol.format.GeoJSON().readFeatures(data);
                    source.addFeatures(features);
                }
            });
        },
        strategy: ol.loadingstrategy.bbox
    });

    lyrNameWFS.setSource(source);
    lyrNameWFS.setVisible(true);

    lyrNameWMS = getWMS(lyrTitle, lyrTitle, tab, false);
    map.getLayers().insertAt(ind, lyrNameWMS);
    lyrNameWMS.setVisible(true);
}

function setFrames() {
    try {
        $("#popup-closer").click();
    } catch (ex) {}

    if ($("#selFramesSocial").val() == "black" || $("#selFramesRefri").val() == "black" || $("#selFramesEcono").val() == "black" || $("#selFramesEnviro").val() == "black" || $("#selFramesMuap").val() == "black" || $("#selFramesBT").val() == "black" || $("#selFramesSW").val() == "black") {
        frameBorder = '#000000';
    }
    if ($("#selFramesSocial").val() == "darkgray" || $("#selFramesRefri").val() == "darkgray" || $("#selFramesEcono").val() == "darkgray" || $("#selFramesEnviro").val() == "darkgray" || $("#selFramesMuap").val() == "darkgray" || $("#selFramesBT").val() == "darkgray" || $("#selFramesSW").val() == "darkgray") {
        frameBorder = '#A9A9A9';
    }
    if ($("#selFramesSocial").val() == "lightgray" || $("#selFramesRefri").val() == "lightgray" || $("#selFramesEcono").val() == "lightgray" || $("#selFramesEnviro").val() == "lightgray" || $("#selFramesMuap").val() == "lightgray" || $("#selFramesBT").val() == "lightgray" || $("#selFramesSW").val() == "lightgray") {
        frameBorder = '#D3D3D3';
    }
    if ($("#selFramesSocial").val() == "white" || $("#selFramesRefri").val() == "white" || $("#selFramesEcono").val() == "white" || $("#selFramesEnviro").val() == "white" || $("#selFramesMuap").val() == "white" || $("#selFramesBT").val() == "white" || $("#selFramesSW").val() == "white") {
        frameBorder = '#FFFFFF';
    }
    updateLook();
}

function setFramesSchool() {
    try {
        $("#popup-closer").click();
    } catch (ex) {}

    if ($("#selFramesSchool").val() == "black"){
        frameColor = '#000000';
    }
    if ($("#selFramesSchool").val() == "darkgray") {
        frameColor = '#A9A9A9';
    }
    if ($("#selFramesSchool").val() == "lightgray") {
        frameColor = '#D3D3D3';
    }
    if ($("#selFramesSchool").val() == "white") {
        frameColor = '#FFFFFF';
    }
	
    if ($('#switchFramesSchools').prop('checked'))
	{
        changeFramesSchools('on');
    } else {
        changeFramesSchools('off');
    }
}

function changeFramesSchools(value) {
    if ($('#switchFramesSchools').prop('checked'))
        $("#divSelFramesSchool").show();
    else
        $("#divSelFramesSchool").hide();
	if (value == "off") {
		wmsCCD.getSource().updateParams({
			'SLD_Body': '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0"  xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:schools_ccd</Name><UserStyle><FeatureTypeStyle><Rule><PolygonSymbolizer><Fill><CssParameter name="fill">#AAAAAA</CssParameter><CssParameter name="fill-opacity">0.3</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>'
		});
		wmsSCSD.getSource().updateParams({
			'SLD_Body': '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0"  xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:scsd</Name><UserStyle><FeatureTypeStyle><Rule><PolygonSymbolizer><Fill><CssParameter name="fill">#AAAAAA</CssParameter><CssParameter name="fill-opacity">0.3</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>'
		});
	}
	if (value == "on") {	
		wmsCCD.getSource().updateParams({
			'SLD_Body': '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0"  xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:schools_ccd</Name><UserStyle><FeatureTypeStyle><Rule><PolygonSymbolizer><Fill><CssParameter name="fill">#AAAAAA</CssParameter><CssParameter name="fill-opacity">0.3</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameColor + '</CssParameter><CssParameter name="stroke-width">1</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>'
		});
		wmsSCSD.getSource().updateParams({
			'SLD_Body': '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0"  xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:scsd</Name><UserStyle><FeatureTypeStyle><Rule><PolygonSymbolizer><Fill><CssParameter name="fill">#AAAAAA</CssParameter><CssParameter name="fill-opacity">0.3</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameColor + '</CssParameter><CssParameter name="stroke-width">1</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>'
		});
	}
}

function updateLook() {
    wmsUrbanRural.setExtent(wmsFetchExtent);
    ptrrWMSOS.setExtent(wmsFetchExtent);
    naicsest.setExtent(wmsFetchExtent);
    naicsap.setExtent(wmsFetchExtent);
    naicsgrainger.setExtent(wmsFetchExtent);
    ffr.setExtent(wmsFetchExtent);
    ffrchange.setExtent(wmsFetchExtent);
    ffrpopu.setExtent(wmsFetchExtent);
    ffrpopuchange.setExtent(wmsFetchExtent);
    fsr.setExtent(wmsFetchExtent);
    fsrchange.setExtent(wmsFetchExtent);
    fsrpopu.setExtent(wmsFetchExtent);
    fsrpopuchange.setExtent(wmsFetchExtent);
    farmermarket.setExtent(wmsFetchExtent);
    farmermarketchange.setExtent(wmsFetchExtent);
    dsf.setExtent(wmsFetchExtent);
    ngp.setExtent(wmsFetchExtent);
    dsfchange.setExtent(wmsFetchExtent);
    aquifer.setExtent(wmsFetchExtent);
    alluvialandglacial.setExtent(wmsFetchExtent);
    majorsoilresource.setExtent(wmsFetchExtent);
    eqi.setExtent(wmsFetchExtent);
    foodaccess.setExtent(wmsFetchExtent);
    households.setExtent(wmsFetchExtent);
    avg_hh_size_renters.setExtent(wmsFetchExtent);
    avg_hh_size_owners.setExtent(wmsFetchExtent);
    avg_hh_size.setExtent(wmsFetchExtent);
    gross_hh_density.setExtent(wmsFetchExtent);
    job_density_simple.setExtent(wmsFetchExtent);
    retail_density_simple.setExtent(wmsFetchExtent);
    refri.setExtent(wmsFetchExtent);
    muap.setExtent(wmsFetchExtent);
    naics.setExtent(wmsFetchExtent);
	
    if ($("#switchFramesSocial").prop('checked') || $("#switchFramesRefri").prop('checked') || $('#switchFramesEcono').prop('checked') || $('#switchFramesEnviro').prop('checked') || $('#switchFramesMuap').prop('checked'))
	{
        changeFrames('on');
    } else {
        changeFrames('off');
    }
	
    if ($('#switchFramesSW').prop('checked'))
	{
        changeFramesSW('on');
    } else {
        changeFramesSW('off');
    }
	
    if ($('#switchFramesFood').prop('checked'))
	{
        changeFramesFood('on');
    } else {
        changeFramesFood('off');
    }
}

function changeFramesSW(value) {
    if ($('#switchFramesSW').prop('checked'))
        $("#divSelFramesSW").show();
    else
        $("#divSelFramesSW").hide();
	if (value == "off") {
		
		surfacewaterSLD = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:surfacewater</Name><UserStyle><FeatureTypeStyle><Rule><PolygonSymbolizer><Fill><CssParameter name="fill">#003EBA</CssParameter></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
	}
	if (value == "on") {
		
		surfacewaterSLD = '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd"  xmlns="http://www.opengis.net/sld"  xmlns:ogc="http://www.opengis.net/ogc"  xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:surfacewater</Name><UserStyle><FeatureTypeStyle><Rule><PolygonSymbolizer><Fill><CssParameter name="fill">#003EBA</CssParameter></Fill><Stroke><CssParameter name="stroke">' + frameBorder + '</CssParameter><CssParameter name="stroke-width">0.2</CssParameter></Stroke></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>';
	}
    surfacewater.getSource().updateParams({
        'SLD_Body': surfacewaterSLD
    });
}

function showSelectionOptions() {	
    isoChroneLayer.setVisible(false);
    $("#divMask").hide();
    $("#marketOverviewTableSmall").hide();
    $("#marketOverviewTableBig").hide();
    $('#ownData').find('[value=natural]').prop('selected', false);
    $('#ownData').find('[value=manmade]').prop('selected', false);
    $("#ownData").selectpicker('render');
    try {
        map.removeInteraction(draw);
    } catch (ex) {}
    try {
        maskFilter.set('active', false);
    } catch (ex) {}
    $("#divRegion").hide();
    $("#divDivision").hide();
    $("#divStates").hide();
    $("#divCounties").hide();
    $("#divCity").hide();
    $("#divNeighbour").hide();
    $("#iptMarket").attr('checked', false);
    $('#region').selectpicker('val', 'region');
    $('#drawType').selectpicker('val', 'None');
    try {
        selectSource.clear();
    } catch (ex) {}
    try {
        txtSearchLayer.setVisible(false);
    } catch (ex) {}

    $("#boundaryOpts").hide();
    $("#divType").hide();
    clearRadius();

    // $("#boundariesLegend").remove();

    try {
        dialogTwo.dialog("close");
    } catch (ex) {}
    mappingSource.clear();

    turnLayersAndLegendOff();

    switch ($("#selSelectionOptions").val()) {
        case 'none':
            // fetchExtent = ol.proj.transformExtent([-125.052, 24.3988, -66.6608, 49.5087], 'EPSG:3857', 'EPSG:4326');
            // updateLayers(fetchExtent);
            break;
        case 'boundary':
            $("#boundaryOpts").show();
            selectSource = new ol.source.Vector({
                format: new ol.format.GeoJSON(),
                loader: function(extent, resolution, projection) {
                    var url = '../geoserver/wfs?service=WFS&' +
                        'version=1.1.0&request=GetFeature&typename=Farmer:us' +
                        '&outputFormat=application/json&srsname=EPSG:3857&' +
                        ',EPSG:3857';

                    var tilesLoaded = 0;
                    var tilesPending = 0;

                    $.ajax({
                        url: url,
                        dataType: 'json',
                        beforeSend: function(e) {
                            $('#js-progress-bar').css({
                                'opacity': '1',
                                'height': '5px',
                                'width': '5%'
                            });
                            ++tilesPending;
                        },
                        success: function(data) {
                            ++tilesLoaded;
                            var percentage = Math.round(tilesLoaded / tilesPending * 100);
                            $('#js-progress-bar').css({
                                'width': percentage + '%'
                            });

                            if (percentage >= 100) {
                                var features = new ol.format.GeoJSON().readFeatures(data);
                                selectSource.addFeatures(features);
                                setTimeout(function() {
                                    $('#js-progress-bar').css({
                                        'width': '0',
                                        'opacity': '0'
                                    });
                                    tilesLoaded = 0;
                                    tilesPending = 0;
                                }, 600);
                            }
                        }
                    });
                },
                strategy: ol.loadingstrategy.all
            });

            txtSearchLayer.setSource(selectSource);
            selectSource.once('change', function(e) {
                if (selectSource.getState() === 'ready') {
                    map.getView().fit(selectSource.getExtent(), {
                        duration: 2000
                    });
                }
            });
            txtSearchLayer.setVisible(true);
            
            addLegendContent('<div id="boundariesLegend"><table><tr><td><a id="boundariesImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="boundaries" onchange="handleLegend($(this));" checked/></td><td colspan="2">Boundary Overlay</td></tr><tr><td colspan="2"></td><td><p style="margin-left: 3px; margin-right: 10px; float: left; color:#FAAF18;">----------</p><td>US Boundary</td></tr></table></div>', true, "legendArea");
            break;
        case 'radius':
            addInteraction('Point');
            break;
        case 'timedist':
			if($('#isochrone').is(":checked"))
				$('#isochrone').click();
            addInteraction('Point');
            break;
        case 'cas':
            detailSelected = "Area";
            $("#divType").show();
            $("#divRegion").hide();
            $("#divDivision").hide();
            break;
        default:
            break;
    }
}

function addInteractiveStates()
{
	$("#boundariesLegend").remove();
	selectSource = new ol.source.Vector({
		format: new ol.format.GeoJSON(),
        loader: function(extent, resolution, projection) {
			var url = '../geoserver/wfs?service=WFS&' +
				'version=1.1.0&request=GetFeature&typename=Farmer:states' +
                '&outputFormat=application/json&srsname=EPSG:3857&' +
                ',EPSG:3857';

			var tilesLoaded = 0;
            var tilesPending = 0;

            $.ajax({
				url: url,
                dataType: 'json',
                beforeSend: function(e) {
					$('#js-progress-bar').css({
						'opacity': '1',
						'height': '5px',
						'width': '5%'
					});
                    ++tilesPending;
				},
                success: function(data) {
					++tilesLoaded;
                    var percentage = Math.round(tilesLoaded / tilesPending * 100);
                    $('#js-progress-bar').css({
						'width': percentage + '%'
                    });

                    if (percentage >= 100) {
						var features = new ol.format.GeoJSON().readFeatures(data);
                        selectSource.addFeatures(features);
                        setTimeout(function() {
							$('#js-progress-bar').css({
								'width': '0',
								'opacity': '0'
                            });
                            tilesLoaded = 0;
                            tilesPending = 0;
                            }, 600);
                        }
                    }
                });
            },
		strategy: ol.loadingstrategy.all
	});

    txtSearchLayer.setSource(selectSource);
		selectSource.once('change', function(e) {
        if (selectSource.getState() === 'ready') {
			map.getView().fit(selectSource.getExtent(), {
				duration: 2000
            });
        }
	});
    txtSearchLayer.setVisible(true);
			
	$("#divStates").show();
	$('#state').each(function(index, value) {
		var select = $(this);
		var list = [];
		var gid = '';
		$.getJSON('readGeojson.php?cond=allStates&tab=states', function(data) {
			$.each(data, function(key, val) {
				list.push('<option value="' + val.id + '">' + val.name + '</option>');
				gid = val.gid;
			});
			select.html(list.join(''));
			select.selectpicker('refresh');
		});
	});

	map.addInteraction(selectDragger);
	map.addInteraction(dragBox);

	dragBox.on('boxend', function() {
		var extent = dragBox.getGeometry().getExtent();
		selectSource.forEachFeatureIntersectingExtent(extent, function(feature) {
			if (feature.c.indexOf("states") !== -1)
			{
				$('#state').find('[value=' + feature.get('statefp') + ']').prop('selected', true);
				$('#state').selectpicker('refresh');
				selectState();
			}
			if (feature.c.indexOf("counties") !== -1)
			{
				$('#county').find('[value=' + feature.get('gid') + ']').prop('selected', true);
				$('#county').selectpicker('refresh');
				selectCounties();
				map.removeInteraction(selectDragger);
				map.removeInteraction(dragBox);
			}
			if (feature.c.indexOf("cities") !== -1)
			{
				$('#city').find('[value=' + feature.get('gid') + ']').prop('selected', true);
				$('#city').selectpicker('refresh');
				selectCity();
				map.removeInteraction(selectDragger);
				map.removeInteraction(dragBox);
			}
		});
	});
			
	dragBox.on('boxstart', function() {
		selectedFeatures.clear();
	});
	
	selectedFeatures.on(['add', 'remove'], function() {
		var names = selectedFeatures.getArray().map(function(feature) {
			if(feature.c.indexOf("states") !== -1)
				return feature.c + "-" + feature.get('statefp');
			if(feature.c.indexOf("counties") !== -1)
				return feature.c + "-" + feature.get('gid');
			if(feature.c.indexOf("cities") !== -1)
				return feature.c + "-" + feature.get('gid');
		});
		if (names.length == 1) {
			if (names[0].indexOf("states") !== -1)
			{
				$('#state').find('[value=' + names[0].split('-').pop() + ']').prop('selected', true);
				$('#state').selectpicker('refresh');
				selectState();
			}
			if (names[0].indexOf("counties") !== -1)
			{
				$('#county').find('[value=' + names[0].split('-').pop() + ']').prop('selected', true);
				$('#county').selectpicker('refresh');
				selectCounties();
			}
			if (names[0].indexOf("cities") !== -1)
			{
				$('#city').find('[value=' + names[0].split('-').pop() + ']').prop('selected', true);
				$('#city').selectpicker('refresh');
				selectCity();
			}
		}
	});
			
	addLegendContent('<div id="boundariesLegend"><table><tr><td><a id="boundariesImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="boundaries" onchange="handleLegend($(this));" checked/></td><td colspan="2">Boundary Overlay</td></tr><tr><td colspan="2"></td><td><img height="5px" width="19px" src="images/Legend/states.png" /><td>States</td></tr></table></div>', true, "legendArea");
}

function showSelectionOptionsTwo() {
    switch ($("#selSelectionOptionsTwo").val()) {
        case 'none':
            break;
        case 'macro':
			addInteractiveStates();
            break;
        case 'market':
			addInteractiveStates();
            break;
        default:
            break;
    }
}


function resetSelections() {
    selectSource.clear();
    selectSource = new ol.source.Vector({
        format: new ol.format.GeoJSON(),
        loader: function(extent, resolution, projection) {
            var url = '../geoserver/wfs?service=WFS&' +
                'version=1.1.0&request=GetFeature&typename=Farmer:us' +
                '&outputFormat=application/json&srsname=EPSG:3857&' +
                ',EPSG:3857';
            var tilesLoaded = 0;
            var tilesPending = 0;
            $.ajax({
                url: url,
                dataType: 'json',
                beforeSend: function(e) {
                    $('#js-progress-bar').css({
                        'opacity': '1',
                        'height': '5px',
                        'width': '5%'
                    });
                    ++tilesPending;
                },
                success: function(data) {
                    ++tilesLoaded;
                    var percentage = Math.round(tilesLoaded / tilesPending * 100);
                    $('#js-progress-bar').css({
                        'width': percentage + '%'
                    });
                    if (percentage >= 100) {
                        var features = new ol.format.GeoJSON().readFeatures(data);
                        selectSource.addFeatures(features);
                        setTimeout(function() {
                            $('#js-progress-bar').css({
                                'width': '0',
                                'opacity': '0'
                            });
                            tilesLoaded = 0;
                            tilesPending = 0;
                        }, 600);
                    }
                }
            });
        },
        strategy: ol.loadingstrategy.all
    });

    txtSearchLayer.setSource(selectSource);
    selectSource.once('change', function(e) {
        if (selectSource.getState() === 'ready') {
            map.getView().fit(selectSource.getExtent(), {
                duration: 2000
            });
        }
    });
    txtSearchLayer.setVisible(true);

    $("#divRegion").hide();
    $("#divDivision").hide();
    $("#divStates").hide();
    $("#divCounties").hide();
    $("#divCity").hide();
    $("#divNeighbour").hide();
    $('#cbNone').prop('checked', true);
    $('#selRegion').selectpicker('val', 'none');
    $('#selSelectionOptionsTwo').selectpicker('val', 'none');

    $('input[name="detailLevel"]').attr('checked', false);
}

function fetchSearchLayerData(url) {
    try {
        selectSource.clear();
    } catch (ex) {}
    selectSource = new ol.source.Vector({
        format: new ol.format.GeoJSON(),
        loader: function(extent, resolution, projection) {
            var tilesLoaded = 0;
            var tilesPending = 0;
            $.ajax({
                url: url,
                dataType: 'json',
                beforeSend: function(e) {
                    $('#js-progress-bar').css({
                        'opacity': '1',
                        'height': '5px',
                        'width': '5%'
                    });
                    ++tilesPending;
                },
                success: function(data) {
                    ++tilesLoaded;
                    var percentage = Math.round(tilesLoaded / tilesPending * 100);
                    $('#js-progress-bar').css({
                        'width': percentage + '%'
                    });
                    if (percentage >= 100) {
                        var features = new ol.format.GeoJSON().readFeatures(data);
                        selectSource.addFeatures(features);
                        setTimeout(function() {
                            $('#js-progress-bar').css({
                                'width': '0',
                                'opacity': '0'
                            });
                            tilesLoaded = 0;
                            tilesPending = 0;
                        }, 600);
                    }
                }
            });
        },
        strategy: ol.loadingstrategy.all
    });

    txtSearchLayer.setSource(selectSource);
    selectSource.once('change', function(e) {
        if (selectSource.getState() === 'ready') {
            try {
                map.getView().fit(selectSource.getExtent(), {
                    duration: 2000
                });
            } catch (ex) {}

            fetchExtent = ol.extent.applyTransform(selectSource.getExtent(), ol.proj.getTransform("EPSG:3857", "EPSG:4326"));
            updateLayers(fetchExtent);
        }
    });
    txtSearchLayer.setVisible(true);
}

function fetchSearchLayerDataRegion(url) {
    // try {
        // selectSource.clear();
    // } catch (ex) {}
    var source = new ol.source.Vector({
        format: new ol.format.GeoJSON(),
        loader: function(extent, resolution, projection) {
            var tilesLoaded = 0;
            var tilesPending = 0;
            $.ajax({
                url: url,
                dataType: 'json',
                beforeSend: function(e) {
                    $('#js-progress-bar').css({
                        'opacity': '1',
                        'height': '5px',
                        'width': '5%'
                    });
                    ++tilesPending;
                },
                success: function(data) {
                    ++tilesLoaded;
                    var percentage = Math.round(tilesLoaded / tilesPending * 100);
                    $('#js-progress-bar').css({
                        'width': percentage + '%'
                    });
                    if (percentage >= 100) {
                        var features = new ol.format.GeoJSON().readFeatures(data);
                        source.addFeatures(features);
                        setTimeout(function() {
                            $('#js-progress-bar').css({
                                'width': '0',
                                'opacity': '0'
                            });
                            tilesLoaded = 0;
                            tilesPending = 0;
                        }, 600);
                    }
                }
            });
        },
        strategy: ol.loadingstrategy.all
    });

    txtSearchLayerRegion.setSource(source);
    source.once('change', function(e) {
        if (source.getState() === 'ready') {
            try {
                map.getView().fit(source.getExtent(), {
                    duration: 2000
                });
            } catch (ex) {}

            fetchExtent = ol.extent.applyTransform(source.getExtent(), ol.proj.getTransform("EPSG:3857", "EPSG:4326"));
            updateLayers(fetchExtent);
        }
    });
    txtSearchLayerRegion.setVisible(true);

	map.addInteraction(selectDraggerTwo);
	
	selectedFeaturesTwo.on(['add', 'remove'], function() {
		var names = selectedFeaturesTwo.getArray().map(function(feature) {
			if(feature.c.indexOf("censusf") !== -1 || feature.c.indexOf("censusn") !== -1 || feature.c.indexOf("ari.") !== -1 || feature.c.indexOf("bea.") !== -1 || feature.c.indexOf("rea.") !== -1)
				return "division-" + feature.get('name');
			if(feature.c.indexOf("states") !== -1 || feature.c.indexOf("aristates") !== -1 || feature.c.indexOf("reastates") !== -1)
				return "states-" + feature.get('gid');
		});
		if (names.length == 1) {
			if (names[0].indexOf("division") !== -1)
			{
				$('#division').find('[value="' + names[0].split('-').pop() + '"]').prop('selected', true);
				$('#division').selectpicker('refresh');
				selectDivisionRegions();
			}
			if (names[0].indexOf("states") !== -1)
			{
				$('#stateRegions').find('[value=' + names[0].split('-').pop() + ']').prop('selected', true);
				$('#stateRegions').selectpicker('refresh');
				selectStateRegions();
			}
		}
	});
}

function clipLayers() {
    $("#dataForReport").unbind("change");

    $('#dataForReport').selectpicker('deselectAll');
    $("#tableFarmer").hide();
    $("#tableStores").hide();
    $("#tableLogos").hide();
    $("#tableBrown").hide();
    $("#tableGardens").hide();
    $("#tableNatural").hide();
    $("#tableManmadeDest").hide();
    $("#tableManmadeFaith").hide();
    $("#tableManmadeGovt").hide();
    $("#tableManmadeInfra").hide();
    $("#tableManmadePublic").hide();
    $("#tableManmadeRetail").hide();
    $("#tableAirports").hide();
    $("#tableFreight").hide();
    $("#tableCrossing").hide();
    $("#tableIana").hide();
    $("#tableTransit").hide();
    $("#tablePort").hide();
    $("#tableMclane").hide();
    $("#tableAmazon").hide();
    $("#tableSysco").hide();
    $("#tableUsf").hide();
    $("#tableFedex").hide();
    $("#tableDhl").hide();
    $("#tableUps").hide();
    $("#tableAlbertsons").hide();
    $("#tableCulver").hide();
    $("#tableDicks").hide();
    $("#tablePublix").hide();
    $("#tableGiantEagle").hide();
    $("#tableKroger").hide();
    $("#tableShopping").hide();
    $("#tableTyson").hide();
    $("#tableRanches").hide();
    $("#tableWholeFoods").hide();
    $("#tableTraderJoes").hide();
    $("#tableDen").hide();
    $("#tableHH").hide();
    $("#tablePopu").hide();
    $("#tableInc").hide();
    $("#tableVac").hide();
    $("#tableBanks12").hide();
    $("#tableBanks16").hide();
    $("#tableBanks17").hide();
    $("#tableDMA").hide();
    $("#tableThornton").hide();

    var selectedOpts = [];
    for (i = 0; i < $("#dataForReportModal").val().length; i++) {
        selectedOpts.push($("#dataForReportModal").val()[i]);
        switch ($("#dataForReportModal").val()[i]) {
            case 'reportFarmer':
                $("#tableFarmer").show();
                farmer.setVisible(true);
                addLegendContent('<div id="farmerLegend"><table><tr><td><a id="farmerImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="farmer" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/tractor.png" /></td><td>Farmers</td></tr></table></div>', true, "legendData");
                $('#primaryData').selectpicker('val', 'farmers');
                break;

            case 'reportStores':
                $("#tableStores").show();
                stores.setVisible(true);
                addLegendContent('<div id="storesLegend"><table><tr><td><a id="storesImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="stores" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/store.png" /></td><td>Grocery Stores</td></tr></table></div>', true, "legendData");
                $('#primaryData').selectpicker('val', 'stores');
                break;

            case 'reportLogos':
                $("#tableLogos").show();
                logo.setVisible(true);
                addLegendContent('<div id="logosLegend"><table><tr><td><a id="logosImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="logos" onchange="handleLegend($(this));" checked/></td><td><img height="45px" width="45px" src="images/Icons/logosIL/24.png" /></td><td>Stores Logos</td></tr></table></div>', true, "legendData");
                $('#primaryData').selectpicker('val', 'logos');
                break;

            case 'reportBrown':
                $("#tableBrown").show();
                brownfields.setVisible(true);
                addLegendContent('<div id="brownLegend"><table><tr><td><a id="brownImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="brown" onchange="handleLegend($(this));" checked/></td><td><img height="45px" width="45px" src="images/Icons/brownfields.png" /></td><td>Brownfields</td></tr></table></div>', true, "legendData");
                $('#primaryData').selectpicker('val', 'logos');
                break;

            case 'reportBanks12':
                $("#tableBanks12").show();
                banks_2012.setVisible(true);
                addLegendContent('<div id="banks2012Legend"><table><tr><td><a id="banks2012Img" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="banks2012" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/Banks/banks2012.png" /></td><td>Banks 2017</td></tr></table></div>', true, "legendData");
                $('#bankData').selectpicker('val', '2012');
                break;

            case 'reportBanks16':
                $("#tableBanks16").show();
                banks_2016.setVisible(true);
                addLegendContent('<div id="banks2016Legend"><table><tr><td><a id="banks2016Img" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="banks2016" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/Banks/banks2016.png" /></td><td>Banks 2017</td></tr></table></div>', true, "legendData");
                $('#bankData').selectpicker('val', '2016');
                break;

            case 'reportBanks17':
                $("#tableBanks17").show();
                banks_2017.setVisible(true);
                addLegendContent('<div id="banks2017Legend"><table><tr><td><a id="banks2017Img" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="banks2017" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/Banks/banks2017.png" /></td><td>Banks 2017</td></tr></table></div>', true, "legendData");
                $('#bankData').selectpicker('val', '2017');
                break;

            case 'reportGardens':
                $("#tableGardens").show();
                garden.setVisible(true);
                addLegendContent('<div id="gardenLegend"><table><tr><td><a id="gardenImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="garden" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/garden.png" /></td><td>Gardens</td></tr></table></div>', true, "legendData");
                $('#ownData').selectpicker('val', 'gardens');
                break;

            case 'reportNatural':
                $("#tableNatural").show();
                natural.setVisible(true);
                addLegendContent('<div id="naturalLegend"><table><tr><td><a id="naturalImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="natural" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/natural.png" /></td><td>Natural</td></tr></table></div>', true, "legendData");
                $('#ownData').selectpicker('val', 'natural');
                break;

            case 'reportManMadeDest':
                $("#tableManmadeDest").show();
                manmade_destinations.setVisible(true);
                addLegendContent('<div id="destinationsLegend"><table><tr><td><a id="destinationsImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="destinations" onchange="handleLegend($(this));" checked/></td><td colspan="2">Destinations</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/arena.png" /></td><td>Arena</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/beach.png" /></td><td>Beach</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/camp.png" /></td><td>Camp</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/castle.png" /></td><td>Castle</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/cave.png" /></td><td>Cave</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/club.png" /></td><td>Club</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/complex.png" /></td><td>Complex</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/farm.png" /></td><td>Farm</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/golf course.png" /></td><td>Golf Course</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/landmark.png" /></td><td>Landmark</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/lodge.png" /></td><td>Lodge</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/monument.png" /></td><td>Monument</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/museum.png" /></td><td>Museum</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/observatory.png" /></td><td>Observatory</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/orchard.png" /></td><td>Orchard</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/pool.png" /></td><td>Pool</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/racetrack.png" /></td><td>Racetrack</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/ranch.png" /></td><td>Ranch</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/resort.png" /></td><td>Resort</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/retreat.png" /></td><td>Retreat</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/ruins.png" /></td><td>Ruins</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/site.png" /></td><td>Site</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/speedway.png" /></td><td>Speedway</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/stadium.png" /></td><td>Stadium</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/winery.png" /></td><td>Winery</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/yacht.png" /></td><td>yacht</td></tr></table></div>', true, "legendData");
                break;

            case 'reportManMadeFaith':
                $("#tableManmadeFaith").show();
                manmade_faith.setVisible(true);
                addLegendContent('<div id="faithLegend"><table><tr><td><a id="faithImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="faith" onchange="handleLegend($(this));" checked/></td><td colspan="2">Faith</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/cemetery.png" /></td><td>Cemetery</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/chapel.png" /></td><td>Chapel</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/church.png" /></td><td>Church</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/monastery.png" /></td><td>Monastery</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/shrine.png" /></td><td>Shrine</td></tr></table></div>', true, "legendData");
                break;

            case 'reportManMadeGovt':
                $("#tableManmadeGovt").show();
                manmade_govt_places.setVisible(true);
                addLegendContent('<div id="govtLegend"><table><tr><td><a id="govtImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="govt" onchange="handleLegend($(this));" checked/></td><td colspan="2">Government Places</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/civil.png" /></td><td>Civil</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/military.png" /></td><td>Military</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/post office.png" /></td><td>Post Office</td></tr></table></div>', true, "legendData");
                break;

            case 'reportManMadeInfra':
                $("#tableManmadeInfra").show();
                manmade_infrastructure.setVisible(true);
                addLegendContent('<div id="destinationsLegend"><table><tr><td><a id="destinationsImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="destinations" onchange="handleLegend($(this));" checked/></td><td colspan="2">Destinations</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/arena.png" /></td><td>Arena</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/beach.png" /></td><td>Beach</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/camp.png" /></td><td>Camp</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/castle.png" /></td><td>Castle</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/cave.png" /></td><td>Cave</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/club.png" /></td><td>Club</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/complex.png" /></td><td>Complex</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/farm.png" /></td><td>Farm</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/golf course.png" /></td><td>Golf Course</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/landmark.png" /></td><td>Landmark</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/lodge.png" /></td><td>Lodge</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/monument.png" /></td><td>Monument</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/museum.png" /></td><td>Museum</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/observatory.png" /></td><td>Observatory</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/orchard.png" /></td><td>Orchard</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/pool.png" /></td><td>Pool</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/racetrack.png" /></td><td>Racetrack</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/ranch.png" /></td><td>Ranch</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/resort.png" /></td><td>Resort</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/retreat.png" /></td><td>Retreat</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/ruins.png" /></td><td>Ruins</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/site.png" /></td><td>Site</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/speedway.png" /></td><td>Speedway</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/stadium.png" /></td><td>Stadium</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/winery.png" /></td><td>Winery</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/yacht.png" /></td><td>yacht</td></tr></table></div>', true, "legendData");
                break;

            case 'reportManMadePublic':
                $("#tableManmadePublic").show();
                manmade_public_spaces.setVisible(true);
                addLegendContent('<div id="publicLegend"><table><tr><td><a id="publicImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="public" onchange="handleLegend($(this));" checked/></td><td colspan="2">Public Places</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/bay.png" /></td><td>Bay</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/court.png" /></td><td>Court</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/forest.png" /></td><td>Forest</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/harbor.png" /></td><td>Harbor</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/island.png" /></td><td>Island</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/lake.png" /></td><td>Lake</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/landing.png" /></td><td>Landing</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/lookout.png" /></td><td>Lookout</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/marina.png" /></td><td>Marina</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/meadow.png" /></td><td>Meadow</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/mountain.png" /></td><td>Mountain</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/park.png" /></td><td>Park</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/pier.png" /></td><td>Pier</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/plaza.png" /></td><td>Plaza</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/pond.png" /></td><td>Pond</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/reservation.png" /></td><td>Reservation</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/shelter.png" /></td><td>Manmade Public</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/square.png" /></td><td>Square</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/trail.png" /></td><td>Trail</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/valley.png" /></td><td>Valley</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/view.png" /></td><td>View</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/wharf.png" /></td><td>Wharf</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/woods.png" /></td><td>Woods</td></tr></table></div>', true, "legendData");
                break;

            case 'reportManMadeRetail':
                $("#tableManmadeRetail").show();
                manmade_retail_prices.setVisible(true);
                addLegendContent('<div id="retailLegend"><table><tr><td><a id="retailImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="retail" onchange="handleLegend($(this));" checked/></td><td colspan="2">Retail Places</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/emporium.png" /></td><td>Emporium</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/mall.png" /></td><td>Mall</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/market.png" /></td><td>Market</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/mart.png" /></td><td>Mart</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/shop.png" /></td><td>Shop</td></tr><tr><td colspan="2"></td><td><img height="25px" width="25px" src="images/Icons/names/manmade/store.png" /></td><td>Store</td></tr></table></div>', true, "legendData");
                break;

            case 'reportAirports':
                $("#tableAirports").show();
                airport.setVisible(true);
                addLegendContent('<div id="airportLegend"><table><tr><td><a id="airportImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="airport" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/Airports/medium.png" /></td><td>Airfields</td></tr></table></div>', true, "legendData");
                $('#tptData').selectpicker('val', 'airports');
                break;

            case 'reportFreightInt':
                $("#tableFreight").show();
                freightIntersects.setVisible(true);
                addLegendContent('<div id="freightIntLegend"><table><tr><td><a id="freightIntImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="freightInt" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/freight.png" /></td><td>Freight Intersections</td></tr></table></div>', true, "legendData");
                $('#tptData').selectpicker('val', 'flag');
                break;

            case 'reportInterchanges':
                $("#tableCrossing").show();
                interchange.setVisible(true);
                addLegendContent('<div id="interchangeLegend"><table><tr><td><a id="interchangeImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="interchange" onchange="handleLegend($(this));" checked/></td><td><img src="images/Icons/crossing.png" /></td><td>Interchanges</td></tr></table></div>', true, "legendData");
                $('#tptData').selectpicker('val', 'interchange');
                break;

            case 'reportIana':
                $("#tableIana").show();
                iana.setVisible(true);
                addLegendContent('<div id="ianaLegend"><table><tr><td><a id="ianaImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="iana" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/iana.png" /></td><td>IANA</td></tr></table></div>', true, "legendData");
                $('#tptData').selectpicker('val', 'iana');
                break;

            case 'reportTransitStop':
                $("#tableTransit").show();
                transStop.setVisible(true);
                addLegendContent('<div id="transStopLegend"><table><tr><td><a id="transStopsImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="transStops" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/transit.png" /></td><td>Transit Stops</td></tr></table></div>', true, "legendData");
                $('#tptData').selectpicker('val', 'transStops');
                break;

            case 'reportPortFacility':
                $("#tablePort").show();
                portFacility.setVisible(true);
                addLegendContent('<div id="portFacLegend"><table><tr><td><a id="portfacilityImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="portfacility" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/port.png" /></td><td>Port Facility</td></tr></table></div>', true, "legendData");
                $('#tptData').selectpicker('val', 'portFacility');
                break;

            case 'reportMclane':
                $("#tableMclane").show();
                mclane.setVisible(true);
                addLegendContent('<div id="mclaneLegend"><table><tr><td><a id="mclaneImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="mclane" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="75px" src="images/Icons/distributions/mclane.png" /></td><td>McLanes DCs</td></tr></table></div>', true, "legendData");
                $('#dcData').selectpicker('val', 'mclane');
                break;

            case 'reportAmazon':
                $("#tableAmazon").show();
                amazon.setVisible(true);
                addLegendContent('<div id="amazonLegend"><table><tr><td><a id="amazonImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="amazon" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/distributions/amazon.png" /></td><td>Amazon DCs</td></tr></table></div>', true, "legendData");
                $('#dcData').selectpicker('val', 'amazon');
                break;

            case 'reportSysco':
                $("#tableSysco").show();
                sysco.setVisible(true);
                addLegendContent('<div id="syscoLegend"><table><tr><td><a id="syscoImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="sysco" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="65px" src="images/Icons/distributions/sysco.png" /></td><td>Sysco DCs</td></tr></table></div>', true, "legendData");
                $('#dcData').selectpicker('val', 'sysco');
                break;

            case 'reportUsf':
                $("#tableUsf").show();
                usf.setVisible(true);
                addLegendContent('<div id="usfLegend"><table><tr><td><a id="usfImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="usf" onchange="handleLegend($(this));" checked/></td><td><img height="30px" width="40px" src="images/Icons/distributions/usf.png" /></td><td>US Foods</td></tr></table></div>', true, "legendData");
                $('#dcData').selectpicker('val', 'usfoods');
                break;

            case 'reportFedex':
                $("#tableFedex").show();
                fedex.setVisible(true);
                addLegendContent('<div id="fedexLegend"><table><tr><td><a id="fedexImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="fedex" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="50px" src="images/Icons/distributions/fedex.png" /></td><td>Fedex</td></tr></table></div>', true, "legendData");
                $('#dcData').selectpicker('val', 'fedex');
                break;

            case 'reportDhl':
                $("#tableDhl").show();
                dhl.setVisible(true);
                addLegendContent('<div id="dhlLegend"><table><tr><td><a id="dhlImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="dhl" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="50px" src="images/Icons/distributions/dhl.png" /></td><td>DHL</td></tr></table></div>', true, "legendData");
                $('#dcData').selectpicker('val', 'dhl');
                break;

            case 'reportUps':
                $("#tableUps").show();
                ups.setVisible(true);
                addLegendContent('<div id="upsLegend"><table><tr><td><a id="upsImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="ups" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/distributions/ups.png" /></td><td>UPS</td></tr></table></div>', true, "legendData");
                $('#dcData').selectpicker('val', 'usps');
                break;

            case 'reportAlbertsons':
                $("#tableAlbertsons").show();
                albertsons.setVisible(true);
                addLegendContent('<div id="albertsonsLegend"><table><tr><td><a id="albertsonsImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="albertsons" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/retail/Albertsons/2.png" /></td><td>Albertsons</td></tr></table></div>', true, "legendData");
                $('#retailData').selectpicker('val', 'albertsons');
                break;

            case 'reportCulver':
                $("#tableCulver").show();
                culver.setVisible(true);
                addLegendContent('<div id="culverLegend"><table><tr><td><a id="culverImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="culver" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="75px" src="images/Icons/retail/culver.png" /></td><td>Culver\'s Restaurants</td></tr></table></div>', true, "legendData");
                $('#retailData').selectpicker('val', 'culver');
                break;

            case 'reportDicks':
                $("#tableDicks").show();
                dicks.setVisible(true);
                addLegendContent('<div id="dicksLegend"><table><tr><td><a id="dicksImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="dicks" onchange="handleLegend($(this));" checked/></td><td><img height="35px" width="80px" src="images/Icons/retail/dicks.png" /></td><td>Dicks Sporting Goods</td></tr></table></div>', true, "legendData");
                $('#retailData').selectpicker('val', 'dicks');
                break;

            case 'reportPublix':
                $("#tablePublix").show();
                publix.setVisible(true);
                addLegendContent('<div id="publixLegend"><table><tr><td><a id="publixImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="publix" onchange="handleLegend($(this));" checked/></td><td><img height="20px" width="75px" src="images/Icons/retail/publix.png" /></td><td>Publix Stores</td></tr></table></div>', true, "legendData");
                $('#retailData').selectpicker('val', 'publix');
                break;

            case 'reportGiantEagle':
                $("#tableGiantEagle").show();
                gianteagle.setVisible(true);
                addLegendContent('<div id="gianteagleLegend"><table><tr><td><a id="gianteagleImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="gianteagle" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/retail/GiantEagle/gianteagle.png" /></td><td>Giant Eagle</td></tr></table></div>', true, "legendData");
                $('#retailData').selectpicker('val', 'gianteagle');
                break;

            case 'reportKroger':
                $("#tableKroger").show();
                kroger.setVisible(true);
                addLegendContent('<div id="krogerLegend"><table><tr><td><a id="krogerImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="kroger" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/retail/Kroger/Kroger.png" /></td><td>Kroger</td></tr></table></div>', true, "legendData");
                $('#retailData').selectpicker('val', 'kroger');
                break;

            case 'reportShopping':
                $("#tableShopping").show();
                shoppingcenter.setVisible(true);
                addLegendContent('<div id="shoppingLegend"><table><tr><td><a id="shoppingImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="shopping" onchange="handleLegend($(this));" checked/></td><td><img height="30px" width="30px" src="images/Icons/retail/shoppingcenter.png" /></td><td>Shopping Centers</td></tr></table></div>', true, "legendData");
                $('#retailData').selectpicker('val', 'shopping');
                break;

            case 'reportFoodPlants':
                $("#tableTyson").show();
                foodplants.setVisible(true);
                addLegendContent('<div id="foodplantsLegend"><table><tr><td><a id="foodplantsImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="foodplants" onchange="handleLegend($(this));" checked/></td><td><img height="40px" width="45px" src="images/Icons/retail/tyson.png" /></td><td>Food Plants & Offices</td></tr></table></div>', true, "legendData");
                $('#retailData').selectpicker('val', 'foodplants');
                break;

            case 'reportFarmRanches':
                $("#tableRanches").show();
                ranchesandfarms.setVisible(true);
                addLegendContent('<div id="ranchesLegend"><table><tr><td><a id="ranchesImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="ranches" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="25px" src="images/Icons/ranches.png" /></td><td>Food Plants & Offices</td></tr></table></div>', true, "legendData");
                break;

            case 'reportTraderJoes':
                $("#tableTraderJoes").show();
                traderjoes.setVisible(true);
				addLegendContent('<div id="traderjoesLegend"><table><tr><td><a id="traderjoesImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="traderjoes" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="50px" src="images/Icons/retail/traderjoes.png" /></td><td>Trader Joe\'s</td></tr></table></div>', true, "legendData");
				break;

            case 'reportWholeFoods':
                $("#tableWholeFoods").show();
                wholefoods.setVisible(true);
                addLegendContent('<div id="wholefoodsLegend"><table><tr><td><a id="wholefoodsImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="wholefoods" onchange="handleLegend($(this));" checked/></td><td><img height="25px" width="50px" src="images/Icons/retail/wholefoods.png" /></td><td>Whole Foods</td></tr></table></div>', true, "legendData");
                break;

            default:
                break;
        }
    }
    $('.selectpicker').selectpicker('render');
    reportDialog.dialog("close");

    if (showedOutput == false) {
        $('#mainDivOutput').animate({
            width: 'toggle'
        });
    }
    $("#marketOverviewTableBig").hide();
    $("#marketOverviewTableSmall").show();
    $('#showOutput').css('margin-right', '475px');
    showedOutput = true;
    if (showedInput) {
        $('#mainDivInput').animate({
            width: 'toggle'
        });
    }
    $('#showInput').css('margin-right', '-150px');
    $('#showConditions').css('margin-right', '-150px');
    $('#showDeterminants').css('margin-right', '-150px');
    $('#showFood').css('margin-right', '-150px');
    $('#showHousing').css('margin-right', '-150px');
    $('#showHealth').css('margin-right', '-150px');
    showedInput = false;
    showedConditions = false;
    showedDeterminants = false;
    showedFood = false;
    showedHousing = false;
    showedHealth = false;

    $('#dataForReport').selectpicker('val', selectedOpts);
    $("#dataForReport").bind("change", updateReportDivs);
}

function updateLayers(extent) {    
	updateResourceOnGS(airport, "airports", extent);
    updateResourceOnGS(albertsons, "albertsons", extent);
    updateResourceOnGS(kroger, "kroger", extent);
    updateResourceOnGS(amazon, "amazon", extent);
    updateResourceOnGS(banks_2012, "banks_2012", extent);
    updateResourceOnGS(banks_2016, "banks_2016", extent);
    updateResourceOnGS(banks_2017, "banks_2017", extent);
    updateResourceOnGS(edwardjones, "edwardjones", extent);
    updateResourceOnGS(agencies, "agencies", extent);
    updateResourceOnGS(agent_ca, "agent_ca", extent);
    updateResourceOnGS(agent_za, "agent_za", extent);
    updateResourceOnGS(creditunions, "creditunions", extent);
    updateResourceOnGS(brownfields, "brownfields", extent);
    updateResourceOnGS(interchange, "interchanges", extent);
	updateResourceOnGS(hot_springs, "hot_springs", extent);
	updateResourceOnGS(landbanks, "landbanks", extent);
    updateResourceOnGS(culver, "culver", extent);
    updateResourceOnGS(potbelly, "potbelly", extent);
    updateResourceOnGS(starbucks, "starbucks", extent);
    updateResourceOnGS(fiveguys, "fiveguys", extent);
    updateResourceOnGS(raisingcanes, "raisingcanes", extent);
    updateResourceOnGS(dhl, "dhl", extent);
    updateResourceOnGS(dicks, "dicks", extent);
    updateResourceOnGS(keef, "keef", extent);
    updateResourceOnGS(dma, "dma", extent);
    updateResourceOnGS(farmer, "farmers", extent);
    updateResourceOnGS(fedex, "fedex", extent);
    updateResourceOnGS(freightIntersects, "freightintersects", extent);
    updateResourceOnGS(garden, "gardens", extent);
    updateResourceOnGS(stores, "stores", extent);
    updateResourceOnGS(iana, "iana", extent);
    updateResourceOnGS(mclane, "mclane", extent);
    updateResourceOnGS(manmade_destinations, "manmade_destinations", extent);
    updateResourceOnGS(manmade_faith, "manmade_faith", extent);
    updateResourceOnGS(manmade_govt_places, "manmade_govt_places", extent);
    updateResourceOnGS(manmade_infrastructure, "manmade_infrastructure", extent);
    updateResourceOnGS(manmade_public_spaces, "manmade_public_spaces", extent);
    updateResourceOnGS(manmade_retail_prices, "manmade_retail_prices", extent);
    updateResourceOnGS(natural, "names_natural", extent);
    updateResourceOnGS(portFacility, "port_facility", extent);
    updateResourceOnGS(publix, "publix", extent);
    updateResourceOnGS(gianteagle, "gianteagle", extent);
    updateResourceOnGS(traderjoes, "traderjoes", extent);
    updateResourceOnGS(wholefoods, "wholefoods", extent);
    updateResourceOnGS(ranchesandfarms, "ranchesandfarms", extent);
    updateResourceOnGS(shoppingcenter, "shoppingcenter", extent);
    updateResourceOnGS(logo, "logos", extent);
    updateResourceOnGS(sysco, "sysco", extent);
    updateResourceOnGS(robinsonfresh, "robinsonfresh", extent);
    updateResourceOnGS(kehe, "kehe", extent);
    updateResourceOnGS(pfgpfs, "pfgpfs", extent);
    updateResourceOnGS(sygma, "sygma", extent);
    updateResourceOnGS(dmadcs, "dmadcs", extent);
    updateResourceOnGS(vistar, "vistar", extent);
    updateResourceOnGS(thornton, "thornton", extent);
    updateResourceOnGS(transStop, "transitstations", extent);
    updateResourceOnGS(foodplants, "foodplants", extent);
    updateResourceOnGS(hydroponics, "hydroponics", extent);
    updateResourceOnGS(ngpoperators, "ngpoperators", extent);
    updateResourceOnGS(ups, "ups", extent);
    updateResourceOnGS(usf, "usfoods", extent);
    // updateResourceOnGS(manmade_destinations, "manmade_destinations", extent);
    // updateResourceOnGS(manmade_faith, "manmade_faith", extent);
    // updateResourceOnGS(manmade_govt_places, "manmade_govt_places", extent);
    // updateResourceOnGS(manmade_infrastructure, "manmade_infrastructure", extent);
    // updateResourceOnGS(manmade_public_spaces, "manmade_public_spaces", extent);
    // updateResourceOnGS(manmade_retail_prices, "manmade_retail_prices", extent);
	
    updateResourceOnGS(ports, "ports", extent);
    updateResourceOnGS(aldiSixteen, "aldi_2016", extent);
    updateResourceOnGS(aldiSixteenClosed, "aldi_2016_closed", extent);
    updateResourceOnGS(aldiEighteen, "aldi_2018", extent);
    updateResourceOnGS(aldiEighteenNew, "aldi_2018_new", extent);
    updateResourceOnGS(parkway, "parkway", extent);
    updateResourceOnGS(tartan, "tartan", extent);
    updateResourceOnGS(uhaul, "uhaul", extent);
    updateResourceOnGS(fairgrounds, "fairgrounds", extent);
    updateResourceOnGS(paca, "paca", extent);
    updateResourceOnGS(poultryfacilities, "poultryfacilities", extent);
    updateResourceOnGS(fortune, "fortune", extent);
    updateResourceOnGS(biodieselplants, "biodiesel_plants", extent);
    updateResourceOnGS(oilrefineries, "oil_refineries", extent);
    updateResourceOnGS(tapetro, "tapetro", extent);
    updateResourceOnGS(ethanol, "ethanol_plants", extent);
    updateResourceOnGS(grainger, "grainger", extent);
    updateResourceOnGS(closings, "closings", extent);
    updateResourceOnGS(toysrus, "toysrus", extent);
    updateResourceOnGS(gymboree, "gymboree", extent);
    updateResourceOnGS(distributor, "distributor", extent);
    updateResourceOnGS(primary, "schools_ccd_primary", extent);
    updateResourceOnGS(pssprivate, "schools_pss_private", extent);
    updateResourceOnGS(refrigeratedlocations, "refrigeratedlocations", extent);
    updateResourceOnGS(traffic, "traffic", extent);
    updateResourceOnGS(mentalHealth, "mentalfacilities", extent);
    updateResourceOnGS(dentalHealth, "dentalfacilities", extent);
    updateResourceOnGS(primaryHealth, "primaryfacilities", extent);
    updateResourceOnGS(ascHealth, "asc", extent);
    updateResourceOnGS(providersHealth, "providers", extent);
    updateResourceOnGS(dermagroupHealth, "dermagroup", extent);
    updateResourceOnGS(dermasoloHealth, "dermasolo", extent);
    updateResourceOnGS(plasticsurgerygroupHealth, "plasticsurgerygroup", extent);
    updateResourceOnGS(plasticsurgerysoloHealth, "plasticsurgerysolo", extent);
    // try {
        // updateResourceOnGS(voronoiHospitals, "Hospitals_Speciality", extent);
    // } catch (ex) {}
}

function turnLayersAndLegendOff() {
    brownfields.setVisible(false);
    farmer.setVisible(false);
    stores.setVisible(false);
    logo.setVisible(false);
    garden.setVisible(false);
    natural.setVisible(false);
    manmade_destinations.setVisible(false);
    manmade_faith.setVisible(false);
    manmade_govt_places.setVisible(false);
    manmade_infrastructure.setVisible(false);
    manmade_public_spaces.setVisible(false);
    manmade_retail_prices.setVisible(false);
    airport.setVisible(false);
    freightIntersects.setVisible(false);
    interchange.setVisible(false);
    ports.setVisible(false);
    iana.setVisible(false);
    transStop.setVisible(false);
    portFacility.setVisible(false);
    mclane.setVisible(false);
    amazon.setVisible(false);
    robinsonfresh.setVisible(false);
    kehe.setVisible(false);
    vistar.setVisible(false);
    sygma.setVisible(false);
    dmadcs.setVisible(false);
    pfgpfs.setVisible(false);
    sysco.setVisible(false);
    usf.setVisible(false);
    fedex.setVisible(false);
    dhl.setVisible(false);
    ups.setVisible(false);
    albertsons.setVisible(false);
    kroger.setVisible(false);
    culver.setVisible(false);
    potbelly.setVisible(false);
    starbucks.setVisible(false);
    fiveguys.setVisible(false);
    raisingcanes.setVisible(false);
    dicks.setVisible(false);
    ethanol.setVisible(false);
    publix.setVisible(false);
    gianteagle.setVisible(false);
    traderjoes.setVisible(false);
    wholefoods.setVisible(false);
    shoppingcenter.setVisible(false);
    foodplants.setVisible(false);
    hydroponics.setVisible(false);
    ngpoperators.setVisible(false);
    ranchesandfarms.setVisible(false);

    $('#farmerLegend').remove();
    $('#storesLegend').remove();
    $('#logosLegend').remove();
    $("#gardenLegend").remove();
    $("#naturalLegend").remove();
    $("#destinationsLegend").remove();
    $("#faithLegend").remove();
    $("#govtLegend").remove();
    $("#infrastructureLegend").remove();
    $("#publicLegend").remove();
    $("#retailLegend").remove();
    $('#airportLegend').remove();
    $('#freightLegend').remove();
    $('#railwayLegend').remove();
    $('#highwayLegend').remove();
    $('#freightIntLegend').remove();
    $('#ianaLegend').remove();
    $('#portsLegend').remove();
    $('#transStopLegend').remove();
    $('#transNetLegend').remove();
    $('#portFacLegend').remove();
    $('#portBoundaryLegend').remove();
    $("#mclaneLegend").remove();
    $("#amazonLegend").remove();
    $("#syscoLegend").remove();
    $("#robinsonfreshLegend").remove();
    $("#keheLegend").remove();
    $("#pfgpfsLegend").remove();
    $("#sygmaLegend").remove();
    $("#dmadcsLegend").remove();
    $("#vistarLegend").remove();
    $("#usfLegend").remove();
    $("#fedexLegend").remove();
    $("#dhlLegend").remove();
    $("#upsLegend").remove();
    $('#albertsonsLegend').remove();
    $('#krogerLegend').remove();
    $('#culverLegend').remove();
    $('#potbellyLegend').remove();
    $('#starbucksLegend').remove();
    $('#fiveguysLegend').remove();
    $('#raisingcanesLegend').remove();
    $('#dicksLegend').remove();
    $('#ethanolPlantsLegend').remove();
    $('#graingerLegend').remove();
    $('#publixLegend').remove();
    $('#gianteagleLegend').remove();
    $('#traderjoesLegend').remove();
    $('#wholefoodsLegend').remove();
    $('#shoppingLegend').remove();
    $('#distributorLegend').remove();
    $('#foodplantsLegend').remove();
    $('#hydroponicsLegend').remove();
    $('#ngpoperatorsLegend').remove();
    $("#interchangeLegend").remove();
    $("#brownLegend").remove();
    $("#manmadeLegend").remove();
    $("#ranchesLegend").remove();

    $("#dataForReport").unbind("change");
    $('#chartContainer').remove();
    $('#wholeData').append('<canvas id="chartContainer" style="height: 250px; width: 300px;"><canvas>');

    $('#dataForReport').selectpicker('selectAll');
    $('#dataForReportModal').selectpicker('selectAll');


    if (showedOutput) {
        $('#mainDivOutput').animate({
            width: 'toggle'
        });
        $('#showOutput').css('margin-right', '0px');
        $('#showInput').css('margin-right', '0px');
        $('#showConditions').css('margin-right', '0px');
        $('#showDeterminants').css('margin-right', '0px');
        showedOutput = false;
    }
}

function showReportModal() {
    dialogTwo.dialog("close");
    reportDialog = $("#modal").dialog({
        autoOpen: false,
        height: 500,
        width: 450,
        modal: true,
        buttons: {
            "Cancel": function() {
                reportDialog.dialog("close");
            },
            "Submit": showDrawOpts,
        },
        close: function() {}
    });
    reportDialog.dialog("open");
}

function changeTimeDist(value) {
	if (value == "active") {
		$("#headingTimeDist").html("Distance");
        $("#timeInterval").hide();
        $("#distInterval").show();
		$("#driveProfile").hide();

        $("#firstInterval").attr('max', 10);
        $("#secondInterval").attr('max', 20);
        $("#thirdInterval").attr('max', 30);
        $("#fourthInterval").attr('max', 40);
        $("#fifthInterval").attr('max', 50);
		$("#sixthInterval").attr('max', 60);
	} else if (value == "dull") {
		$("#headingTimeDist").html("Time");
        $("#timeInterval").show();
        $("#distInterval").hide();
		$("#driveProfile").show();
		$("#firstInterval").attr('max', 10);
		$("#secondInterval").attr('max', 20);
		$("#thirdInterval").attr('max', 30);
		$("#fourthInterval").attr('max', 40);
		$("#fifthInterval").attr('max', 50);
		$("#sixthInterval").attr('max', 60);
	}
    $("#intervalValues").show();
}

function handleIcons(icon){
	try{
		voronoiPointsSource.clear();
		voronoiPolygonsSource.clear();

		voronoiPoints.set('displayInLayerSwitcher', false);
		voronoiPolygons.set('displayInLayerSwitcher', false);

		voronoiPoints.setVisible(false);
		voronoiPolygons.setVisible(false);

		$("#voronoiPolygonsLegend").remove();
		$("#voronoiPointsLegend").remove();
	}catch(ex){}
	$("#logosHospitals").hide();
	$("#logosPrimary").hide();
	$("#logosEnergy").hide();
    $("#radiusPrimary").hide();
    $("#radiusEnergy").hide();
    $("#logosOwn").hide();
    $("#radiusOwn").hide();
    $("#logosTpt").hide();
    $("#radiusTpt").hide();
    $("#logosFood").hide();
    $("#radiusFood").hide();
    $("#logosDC").hide();
    $("#radiusDC").hide();
    $("#logosRefri").hide();
    $("#logosShipping").hide();
    $("#radiusRefri").hide();
    $("#logosFoodHome").hide();
    $("#radiusFoodHome").hide();
    $("#logosFoodAway").hide();
    $("#radiusFoodAway").hide();
    $("#logosFoodSuperMarket").hide();
    $("#radiusFoodSuperMarket").hide();
    $("#logosFin").hide();
    $("#radiusFin").hide();
    $("#schoolsTrans").hide();
    $("#divLabelsAD").hide();
    $("#divLabelsEC").hide();
	$("#divLabelsEV").hide();
    $("#divLabelsPG").hide();
    $("#divLabelsSO").hide();

    // $("#voronoiControlsDC").hide();
    // $("#voronoiControlsHospital").hide();
    $("#divVorPrimary").hide();
    $("#divVorHealth").hide();
    $("#divVorEnergy").hide();
    $("#divVorOwn").hide();
    $("#divVorTpt").hide();
    $("#divVorSchools").hide();
    $("#divVorBanks").hide();
    $("#divVorFood").hide();
    $("#divVorBeverages").hide();
    $("#divVorDC").hide();
    $("#divVorRef").hide();
    $("#divVorFoodHome").hide();
    $("#divVorFoodAway").hide();
    $("#divVorFoodSuperMarket").hide();
    $("#divVorHealthFacilities").hide();
    $("#divVorHospitals").hide();
    $("#divVorFin").hide();

	voronoiHospitals.setStyle(getVoronoiStyle);
	primaryHealth.setStyle(getStyleMulti);
    dentalHealth.setStyle(getStyleMulti);
    mentalHealth.setStyle(getStyleMulti);
    ascHealth.setStyle(getStyleMulti);
    plasticsurgerysoloHealth.setStyle(getStyleMulti);
    plasticsurgerygroupHealth.setStyle(getStyleMulti);
    dermasoloHealth.setStyle(getStyleMulti);
    dermagroupHealth.setStyle(getStyleMulti);
    providersHealth.setStyle(getStyleMulti);
    toysrus.setStyle(getStyleMulti);
    gymboree.setStyle(getStyleMulti);
    closings.setStyle(getStyleMulti);
    shoppingcenter.setStyle(getStyleMulti);
    parkway.setStyle(getStyleMulti);
    tartan.setStyle(getStyleMulti);
    uhaul.setStyle(getStyleMulti);
    fortune.setStyle(getStyleMulti);
    poultryfacilities.setStyle(getStyleMulti);
    paca.setStyle(getStyleMulti);
    fairgrounds.setStyle(getStyleMulti);
    tapetro.setStyle(getStyleMulti);
    biodieselplants.setStyle(getStyleMulti);
    oilrefineries.setStyle(getStyleMulti);
    dicks.setStyle(getStyleMulti);
    grainger.setStyle(getStyleMulti);
    keef.setStyle(getStyleMulti);
    ethanol.setStyle(getStyleMulti);
    brownfields.setStyle(getStyleMulti);
    albertsons.setStyle(getStyleMulti);
    kroger.setStyle(getStyleMulti);
    stores.setStyle(getStyleMulti);
    publix.setStyle(getStyleMulti);
    gianteagle.setStyle(getStyleMulti);
    traderjoes.setStyle(getStyleMulti);
    wholefoods.setStyle(getStyleMulti);
    dma.setStyle(getStyleMulti);
    farmer.setStyle(getStyleMulti);
    refrigeratedlocations.setStyle(getStyleMulti);
    primary.setStyle(getStyleMulti);
    pssprivate.setStyle(getStyleMulti);
    mclane.setStyle(getStyleMulti);
    amazon.setStyle(getStyleMulti);
    sysco.setStyle(getStyleMulti);
    robinsonfresh.setStyle(getStyleMulti);
    kehe.setStyle(getStyleMulti);
    pfgpfs.setStyle(getStyleMulti);
    sygma.setStyle(getStyleMulti);
    dmadcs.setStyle(getStyleMulti);
    vistar.setStyle(getStyleMulti);
    usf.setStyle(getStyleMulti);
    dma.setStyle(getStyleMulti);
    hot_springs.setStyle(getStyleMulti);
    landbanks.setStyle(getStyleMulti);
    creditunions.setStyle(getStyleMulti);
    edwardjones.setStyle(getStyleMulti);
    agencies.setStyle(getStyleMulti);
    agent_za.setStyle(getStyleMulti);
    agent_ca.setStyle(getStyleMulti);
    garden.setStyle(getStyleMulti);
    shelter.setStyle(getStyleMulti);
    unitsa.setStyle(getStyleMulti);
    unitsb.setStyle(getStyleMulti);
    natural.setStyle(getStyleMulti);
    manmade_destinations.setStyle(getStyleMulti);
    manmade_faith.setStyle(getStyleMulti);
    manmade_govt_places.setStyle(getStyleMulti);
    manmade_infrastructure.setStyle(getStyleMulti);
    manmade_public_spaces.setStyle(getStyleMulti);
    manmade_retail_prices.setStyle(getStyleMulti);
    ranchesandfarms.setStyle(getStyleMulti);
    foodplants.setStyle(getStyleMulti);
    hydroponics.setStyle(getStyleMulti);
    ngpoperators.setStyle(getStyleMulti);
    culver.setStyle(getStyleMulti);
    potbelly.setStyle(getStyleMulti);
    starbucks.setStyle(getStyleMulti);
    raisingcanes.setStyle(getStyleMulti);
    fiveguys.setStyle(getStyleMulti);
    thornton.setStyle(getStyleMulti);
    aldiSixteen.setStyle(getStyleMulti);
    aldiSixteenClosed.setStyle(getStyleMulti);
    aldiSixteen.setStyle(getStyleMulti);
    aldiEighteenNew.setStyle(getStyleMulti);
    airport.setStyle(getStyleMulti);
    enterprisebuildings.setStyle(getStyleMulti);
    networkbuildings.setStyle(getStyleMulti);
    interchange.setStyle(getStyleMulti);
    freightIntersects.setStyle(getStyleMulti);
    iana.setStyle(getStyleMulti);
    ports.setStyle(getStyleMulti);
    transStop.setStyle(getStyleMulti);
    portFacility.setStyle(getStyleMulti);
    try {
        chicagoFood.setStyle(getStyleMulti);
    } catch (ex) {}
    if (icon == "logo" || icon == "icon") {
		try {
			if ($("#primaryData").val().length !== 0) {
				$("#logosPrimary").show();
                $("#radiusPrimary").show();
            }
        } catch (ex) {}
		try {
			if ($("#energyData").val().length !== 0) {
				$("#logosEnergy").show();
                $("#radiusEnergy").show();
            }
        } catch (ex) {}
        try {
            if ($("#ownData").val().length !== 0) {
                $("#logosOwn").show();
                $("#radiusOwn").show();
            }
        } catch (ex) {}
        try {
            if ($("#tptData").val().length !== 0) {
                $("#logosTpt").show();
                $("#radiusTpt").show();
            }
        } catch (ex) {}
        try {
            if ($("#foodProd").val().length !== 0) {
                $("#logosFood").show();
                $("#radiusFood").show();
            }
        } catch (ex) {}
        try {
            if ($("#dcData").val().length !== 0) {
                $("#logosDC").show();
                $("#radiusDC").show();
            }
        } catch (ex) {}
        try {
			if ($("#selFoodSuperMarket").val().length !== 0) {
                $("#logosFoodSuperMarket").show();
                $("#radiusFoodSuperMarket").show();
            }
        } catch (ex) {}
        try {
			if ($("#selRefrigerated").val().length !== 0) {
                $("#logosRefri").show();
                $("#radiusRefri").show();
                $("#logosShipping").show();
            }
        } catch (ex) {}
        try {
            if ($("#selFoodHome").val().length !== 0) {
                $("#logosFoodHome").show();
                $("#radiusFoodHome").show();
            }
        } catch (ex) {}
        try {
            if ($("#selFoodaway").val().length !== 0) {
                $("#logosFoodAway").show();
                $("#radiusFoodAway").show();
            }
        } catch (ex) {}
        try {
            if ($("#finData").val().length !== 0) {
                $("#logosFin").show();
                $("#radiusFin").show();
            }
        } catch (ex) {}
        try {
            if ($("#selHospitals").val() !== "none") {
                $("#logosHospitals").show();
            }
        } catch (ex) {}
        try {
            if ($("#selADBoundaries").val() !== "none") {
                $("#schoolsTrans").show();
                $("#divLabelsAD").show();
            }
        } catch (ex) {}
        try {
            if ($("#selECBoundaries").val() !== "none") {
                $("#divLabelsEC").show();
            }
        } catch (ex) {}
        try {
            if ($("#selEVboundaries").val() !== "none") {
                $("#divLabelsEV").show();
            }
        } catch (ex) {}
        try {
            if ($("#selPGBoundaries").val() !== "none") {
                $("#divLabelsPG").show();
            }
        } catch (ex) {}
        try {
            if ($("#selSOboundaries").val() !== "none") {
                $("#divLabelsSO").show();
            }
        } catch (ex) {}
	}
    if (icon == "voronoi") {
		try {
			if ($("#primaryData").val().length !== 0) $("#divVorPrimary").show();
        } catch (ex) {}
		try {
			if ($("#energyData").val().length !== 0) $("#divVorEnergy").show();
        } catch (ex) {}
        try {
            if ($("#ownData").val().length !== 0) $("#divVorOwn").show();
        } catch (ex) {}
        try {
            if ($("#tptData").val().length !== 0) $("#divVorTpt").show();
        } catch (ex) {}
        try {
            if ($("#schoolData").val().length !== 0) $("#divVorSchools").show();
        } catch (ex) {}
        try {
            if ($("#bankData").val().length !== 0) $("#divVorBanks").show();
        } catch (ex) {}
        try {
            if ($("#selHospitals").val().length !== 0) $("#voronoiControls").show();
        } catch (ex) {}
        try {
            if ($("#foodProd").val().length !== 0) $("#divVorFood").show();
        } catch (ex) {}
        try {
            if ($("#beveragesSelect").val().length !== 0) $("#divVorBeverages").show();
        } catch (ex) {}
        try {
            if ($("#dcData").val().length !== 0) $("#divVorDC").show();
        } catch (ex) {}
        try {
            if ($("#selRefrigerated").val().length !== 0) $("#divVorRef").show();
        } catch (ex) {}
        try {
            if ($("#selFoodHome").val().length !== 0) $("#divVorFoodHome").show();
        } catch (ex) {}
        try {
            if ($("#selFoodaway").val().length !== 0) $("#divVorFoodAway").show();
        } catch (ex) {}
        try {
            if ($("#selFoodSuperMarket").val().length !== 0) $("#divVorFoodSuperMarket").show();
        } catch (ex) {}
		try {
			if ($("#healthFacilitiesSel").val().length !== 0) $("#divVorHealthFacilities").show();
        } catch (ex) {}
		try {
			if ($("#selHospitals").val() !== "none") $("#divVorHealth").show();
        } catch (ex) {}
		try {
			if ($("#finData").val().length !== 0) $("#divVorFin").show();
        } catch (ex) {}
	}
    if (icon == "cluster") {
		//Already style attached, no need to do anything here.
    }
	// if (icon == "icon") {
		
    // }
}

function pgboundaries(){
    $('#stateLegend').remove();
    $('#districtLegend').remove();
    $('#countiesLegend').remove();
    $('#citiesLegend').remove();
    try {
        $("#popup-closer").click();
    } catch (ex) {}

    wfsStates.setVisible(false);
    wmsStates.setVisible(false);
    wmsDistricts.setVisible(false);
    wfsDistricts.setVisible(false);
    wfsCounties.setVisible(false);
    wmsCounties.setVisible(false);
    wfsCities.setVisible(false);
    wmsCities.setVisible(false);
	
	wmsStates.set('displayInLayerSwitcher', false);
	wmsDistricts.set('displayInLayerSwitcher', false);
	wmsCounties.set('displayInLayerSwitcher', false);
	wmsCities.set('displayInLayerSwitcher', false);

    var len = 0;
    $("#divLabelsPG").hide();
    try {
        len = $("#selPGBoundaries").val().length;
    } catch (ex) {}
    if (len > 0) {
        for (i = 0; i < len; i++) {
            switch ($("#selPGBoundaries").val()[i]) {
                case 'states':
                    wfsStates.setVisible(true);
					wmsStates.set('displayInLayerSwitcher', true);
                    wmsStates.setVisible(true);
                    addLegendContent('<div id="stateLegend"><table><tr><td><a id="statesImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="states" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/states.png" /></td><td>States</td></tr></table></div>', true, "legendDisplayBoundaries");
                    break;

                case 'districts':
                    wmsDistricts.setVisible(true);
					wmsDistricts.set('displayInLayerSwitcher', true);
                    wfsDistricts.setVisible(true);
                    addLegendContent('<div id="districtLegend"><table><tr><td><a id="districtsImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="districts" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/district.png" /></td><td>Districts</td></tr></table></div>', true, "legendDisplayBoundaries");
                    break;

                case 'counties':
                    wfsCounties.setVisible(true);
                    wmsCounties.setVisible(true);
					wmsCounties.set('displayInLayerSwitcher', true);
                    addLegendContent('<div id="countiesLegend"><table><tr><td><a id="countiesImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="counties" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/counties.png" /></td><td>Counties</td></tr></table></div>', true, "legendDisplayBoundaries");
                    break;

                case 'cities':
                    wfsCities.setVisible(true);
                    wmsCities.setVisible(true);
					wmsCities.set('displayInLayerSwitcher', true);
                    addLegendContent('<div id="citiesLegend"><table><tr><td><a id="citiesImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="cities" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cities.png" /></td><td>Cities</td></tr></table></div>', true, "legendDisplayBoundaries");
                    break;
            }
        }
        $("#divLabelsPG").show();
    }
}

function ecboundaries(){
	$("#boundaryRegions").hide();
    $('#msasLegend').remove();
    $('#megaregionsLegend').remove();
    $('#commuters_regionsLegend').remove();
    $('#active_coverageLegend').remove();
    $('#reduced_coverageLegend').remove();
    $('#total_coverageLegend').remove();
    $('#bea10Legend').remove();
    $('#cbsa10Legend').remove();
    $('#consumermarketboundariesLegend').remove();
    $('#ers10Legend').remove();
    $('#ers10repLegend').remove();
    $('#pea10Legend').remove();
    $('#tp10Legend').remove();
    $('#tp10metroLegend').remove();
    $('#tp10microLegend').remove();
    $('#cfs_areaLegend').remove();
	$("#divMSASFilter").hide();
    try {
        $("#popup-closer").click();
    } catch (ex) {}

    wfsMsas.setVisible(false);
    wmsMsas.setVisible(false);
    wfsMegaregion.setVisible(false);
    wmsMegaregion.setVisible(false);
    wfsCommuterRegions.setVisible(false);
    wmsCommuterRegions.setVisible(false);
	wmsCMB.setVisible(false);
	wfsCMB.setVisible(false);
	wmsActiveCoverage.setVisible(false);
	wfsActiveCoverage.setVisible(false);
	wmsReducedCoverage.setVisible(false);
	wfsReducedCoverage.setVisible(false);
	wmsTotalCoverage.setVisible(false);
	wfsTotalCoverage.setVisible(false);
	wmsBEA10.setVisible(false);
	wfsBEA10.setVisible(false);
    wmsCBSA10.setVisible(false);
    wfsCBSA10.setVisible(false);
    wmsERS10.setVisible(false);
    wfsERS10.setVisible(false);
    wmsERS10Rep.setVisible(false);
    wfsERS10Rep.setVisible(false);
    wmsPEA10.setVisible(false);
    wfsPEA10.setVisible(false);
	wmsTP10.setVisible(false);
	wfsTP10.setVisible(false);
    wmsTP10Metro.setVisible(false);
    wfsTP10Metro.setVisible(false);
    wmsTP10Micro.setVisible(false);
    wfsTP10Micro.setVisible(false);
    wmsCFS.setVisible(false);
    wfsCFS.setVisible(false);

	wmsMsas.set('displayInLayerSwitcher', false);
	wmsMegaregion.set('displayInLayerSwitcher', false);
	wmsCommuterRegions.set('displayInLayerSwitcher', false);
	wmsCMB.set('displayInLayerSwitcher', false);
    wmsActiveCoverage.set('displayInLayerSwitcher', false);
    wmsReducedCoverage.set('displayInLayerSwitcher', false);
    wmsTotalCoverage.set('displayInLayerSwitcher', false);
    wmsBEA10.set('displayInLayerSwitcher', false);
    wmsCBSA10.set('displayInLayerSwitcher', false);
    wmsERS10.set('displayInLayerSwitcher', false);
    wmsERS10Rep.set('displayInLayerSwitcher', false);
    wmsPEA10.set('displayInLayerSwitcher', false);
	wmsTP10.set('displayInLayerSwitcher', false);
    wmsTP10Metro.set('displayInLayerSwitcher', false);
    wmsTP10Micro.set('displayInLayerSwitcher', false);
    wmsCFS.set('displayInLayerSwitcher', false);

	resetSelectionsBoundary();

    var len = 0;
    $("#divLabelsEC").hide();
    try {
        len = $("#selECBoundaries").val().length;
    } catch (ex) {}
    if (len > 0) {
        for (i = 0; i < len; i++) {
            switch ($("#selECBoundaries").val()[i]) {
                case 'regions':
					$("#boundaryRegions").show();
                    break;
					
                case 'active_coverage':
                    wmsActiveCoverage.setVisible(true);
					wfsActiveCoverage.setVisible(true);
                    addLegendContent('<div id="active_coverageLegend"><table><tr><td><a id="active_coverageImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="active_coverage" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/br.png" /></td><td>Active Coverage</td></tr></table></div>', true, "legendDisplayBoundaries");
					wmsActiveCoverage.set('displayInLayerSwitcher', true);
                    break;
					
                case 'reduced_coverage':
                    wmsReducedCoverage.setVisible(true);
					wfsReducedCoverage.setVisible(true);
                    addLegendContent('<div id="reduced_coverageLegend"><table><tr><td><a id="reduced_coverageImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="reduced_coverage" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/br.png" /></td><td>Reduced Coverage</td></tr></table></div>', true, "legendDisplayBoundaries");
					wmsReducedCoverage.set('displayInLayerSwitcher', true);
                    break;
					
                case 'total_coverage':
                    wmsTotalCoverage.setVisible(true);
					wfsTotalCoverage.setVisible(true);
                    addLegendContent('<div id="total_coverageLegend"><table><tr><td><a id="total_coverageImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="total_coverage" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/br.png" /></td><td>Total Coverage</td></tr></table></div>', true, "legendDisplayBoundaries");
					wmsTotalCoverage.set('displayInLayerSwitcher', true);
                    break;
					
                case 'bea10':
                    wmsBEA10.setVisible(true);
					wfsBEA10.setVisible(true);
                    addLegendContent('<div id="bea10Legend"><table><tr><td><a id="bea10Img" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="bea10" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/bea10.png" /></td><td>BEA10</td></tr></table></div>', true, "legendDisplayBoundaries");
					wmsBEA10.set('displayInLayerSwitcher', true);
                    break;

                case 'cbsa10':
                    wmsCBSA10.setVisible(true);
					wfsCBSA10.setVisible(true);
                    addLegendContent('<div id="cbsa10Legend"><table><tr><td><a id="cbsa10Img" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="cbsa10" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/cbsa10.png" /></td><td>CBSA10</td></tr></table></div>', true, "legendDisplayBoundaries");
					wmsCBSA10.set('displayInLayerSwitcher', true);
                    break;
                case 'consumermarketboundaries':
                    wmsCMB.setVisible(true);
					wfsCMB.setVisible(true);
                    addLegendContent('<div id="consumermarketboundariesLegend"><table><tr><td><a id="consumermarketboundariesImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="consumermarketboundaries" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/states.png" /></td><td>Consumer Market</td></tr></table></div>', true, "legendDisplayBoundaries");
					wmsCMB.set('displayInLayerSwitcher', true);
                    break;

                case 'ers10':
                    wmsERS10.setVisible(true);
					wmsERS10.set('displayInLayerSwitcher', true);
                    addLegendContent('<div id="ers10Legend"><table><tr><td><a id="ers10Img" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="ers10" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/ers10.png" /></td><td>ERS10</td></tr></table></div>', true, "legendDisplayBoundaries");
					wfsERS10.setVisible(true);
                    break;

                case 'ers10rep':
                    wmsERS10Rep.setVisible(true);
					wmsERS10Rep.set('displayInLayerSwitcher', true);
                    addLegendContent('<div id="ers10repLegend"><table><tr><td><a id="ers10repImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="ers10rep" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/ers10rep.png" /></td><td>ERS10REP</td></tr></table></div>', true, "legendDisplayBoundaries");
					wfsERS10Rep.setVisible(true);
                    break;

                case 'pea10':
                    wmsPEA10.setVisible(true);
					wmsPEA10.set('displayInLayerSwitcher', true);
                    addLegendContent('<div id="pea10Legend"><table><tr><td><a id="pea10Img" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="pea10" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/pea10.png" /></td><td>PEA10</td></tr></table></div>', true, "legendDisplayBoundaries");
					wfsPEA10.setVisible(true);
                    break;
					
                case 'tp10':
                    wmsTP10.setVisible(true);
					wmsTP10.set('displayInLayerSwitcher', true);
                    addLegendContent('<div id="tp10Legend"><table><tr><td><a id="tp10Img" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="tp10" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/tp10.png" /></td><td>TP10</td></tr></table></div>', true, "legendDisplayBoundaries");
					wfsTP10.setVisible(true);
                    break;

                case 'tp10metro':
                    wmsTP10Metro.setVisible(true);
					wmsTP10Metro.set('displayInLayerSwitcher', true);
                    addLegendContent('<div id="tp10metroLegend"><table><tr><td><a id="tp10metroImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="tp10metro" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/tp10metro.png" /></td><td>TP10METRO</td></tr></table></div>', true, "legendDisplayBoundaries");
					wfsTP10Metro.setVisible(true);
                    break;

                case 'tp10micro':
                    wmsTP10Micro.setVisible(true);
					wmsTP10Micro.set('displayInLayerSwitcher', true);
                    addLegendContent('<div id="tp10microLegend"><table><tr><td><a id="tp10microImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="tp10micro" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/tp10micro.png" /></td><td>TP10MICRO</td></tr></table></div>', true, "legendDisplayBoundaries");
					wfsTP10Micro.setVisible(true);
                    break;

                case 'cfs_area':
                    wmsCFS.setVisible(true);
					wmsCFS.set('displayInLayerSwitcher', true);
                    addLegendContent('<div id="cfs_areaLegend"><table><tr><td><a id="cfs_areaImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="cfs_area" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/br.png" /></td><td>Shipments (FAF)</td></tr></table></div>', true, "legendDisplayBoundaries");
					wfsCFS.setVisible(true);
                    break;
                case 'msas':
					$("#divMSASFilter").show();
					wfsMsas.setVisible(true);
                    wmsMsas.setVisible(true);
					wmsMsas.set('displayInLayerSwitcher', true);
                    addLegendContent('<div id="msasLegend"><table><tr><td><a id="msasImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="msas" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/msa.png" /></td><td>MSAs</td></tr></table></div>', true, "legendDisplayBoundaries");
                    break;
                case 'commuters_regions':
					wfsCommuterRegions.setVisible(true);
                    wmsCommuterRegions.setVisible(true);
					wmsCommuterRegions.set('displayInLayerSwitcher', true);
                    addLegendContent('<div id="commuters_regionsLegend"><table><tr><td><a id="commuters_regionsImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="commuters_regions" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/msa.png" /></td><td>Commuter Regions</td></tr></table></div>', true, "legendDisplayBoundaries");
                    break;
                case 'megaregions':
					wfsMegaregion.setVisible(true);
                    wmsMegaregion.setVisible(true);
					wmsMegaregion.set('displayInLayerSwitcher', true);
                    addLegendContent('<div id="megaregionsLegend"><table><tr><td><a id="megaregionsImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="megaregions" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/msa.png" /></td><td>Megaregion</td></tr></table></div>', true, "legendDisplayBoundaries");
                    break;
            }
        }
        $("#divLabelsEC").show();
    }
}

function adboundaries(){
	$("#schoolsTrans").hide();
    $('#hrrLegend').remove();
    $('#hsaLegend').remove();
    $('#pcsaLegend').remove();
    $("#ccdPrimaryLegend").remove();
    $("#ccdLegend").remove();
    $('#zipLegend').remove();
    $("#mpoLegend").remove();
    $("#asbLegend").remove();
    $("#agLegend").remove();
    try {
        $("#popup-closer").click();
    } catch (ex) {}

    wmsASB.setVisible(false);
    wfsASB.setVisible(false);
    wmsAG.setVisible(false);
    wfsAG.setVisible(false);
    wmsMPO.setVisible(false);
    wfsMPO.setVisible(false);
    wfsHrr.setVisible(false);
    wmsHrr.setVisible(false);
    wfsHsa.setVisible(false);
    wmsHsa.setVisible(false);
    wmsPcsa.setVisible(false);
    wfsPcsa.setVisible(false);
	wmsCCD.setVisible(false);
	wfsCCD.setVisible(false);
    wmsSCSD.setVisible(false);
    wfsSCSD.setVisible(false);
    wmsZips.setVisible(false);
    wfsZips.setVisible(false);
    wmsSTRCoverage.setVisible(false);
    wfsSTRCoverage.setVisible(false);
	
    wmsASB.set('displayInLayerSwitcher', false);
    wmsAG.set('displayInLayerSwitcher', false);
    wmsMPO.set('displayInLayerSwitcher', false);
    wmsHrr.set('displayInLayerSwitcher', false);
    wmsHsa.set('displayInLayerSwitcher', false);
    wmsPcsa.set('displayInLayerSwitcher', false);
    wmsCCD.set('displayInLayerSwitcher', false);
    wmsSCSD.set('displayInLayerSwitcher', false);
	wmsZips.set('displayInLayerSwitcher', false);
	wmsSTRCoverage.set('displayInLayerSwitcher', false);
    
	var len = 0;
    $("#divLabelsAD").hide();
    try {
        len = $("#selADBoundaries").val().length;
    } catch (ex) {}
    if (len > 0) {
		if($("#selADBoundaries").val().indexOf("ccd") !== -1 || $("#selADBoundaries").val().indexOf("scsd") !== -1){
			$("#schoolsTrans").show();
		}
		for (i = 0; i < len; i++) {
            switch ($("#selADBoundaries").val()[i]) {
                case 'asb':
                    wmsASB.setVisible(true);
					wmsASB.set('displayInLayerSwitcher', true);
					wfsASB.setVisible(true);
                    addLegendContent('<div id="asbLegend"><table><tr><td><a id="asbImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="asb" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/asb.png" /></td><td>Agency Service Bounds</td></tr></table></div>', true, "legendDisplayBoundaries");
                    break;
                case 'ag':
                    wmsAG.setVisible(true);
					wmsAG.set('displayInLayerSwitcher', true);
					wfsAG.setVisible(true);
                    addLegendContent('<div id="agLegend"><table><tr><td><a id="agImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="ag" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/ag.png" /></td><td>AG Districts</td></tr></table></div>', true, "legendDisplayBoundaries");
                    break;
                case 'hrr':
                    wfsHrr.setVisible(true);
                    wmsHrr.setVisible(true);
					wmsHrr.set('displayInLayerSwitcher', true);
                    addLegendContent('<div id="hrrLegend"><table><tr><td><a id="hrrImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="hrr" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/hrr.png" /></td><td>HRR</td></tr></table></div>', true, "legendDisplayBoundaries");
                    break;

                case 'hsa':
                    wfsHsa.setVisible(true);
                    wmsHsa.setVisible(true);
					wmsHsa.set('displayInLayerSwitcher', true);
                    addLegendContent('<div id="hsaLegend"><table><tr><td><a id="hsaImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="hsa" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/hsa.png" /></td><td>HSA</td></tr></table></div>', true, "legendDisplayBoundaries");
                    break;
                case 'mpo':
					wmsMPO.setVisible(true);
					wmsMPO.set('displayInLayerSwitcher', true);
					wfsMPO.setVisible(true);
                    addLegendContent('<div id="mpoLegend"><table><tr><td><a id="mpoImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="mpo" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/mpo.png" /></td><td>Metropolitan Planning Organization</td></tr></table></div>', true, "legendDisplayBoundaries");
                    break;
                case 'pcsa':
                    wfsPcsa.setVisible(true);
                    wmsPcsa.setVisible(true);
					wmsPcsa.set('displayInLayerSwitcher', true);
                    addLegendContent('<div id="pcsaLegend"><table><tr><td><a id="pcsaImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="pcsa" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/pcsa.png" /></td><td>PCSA</td></tr></table></div>', true, "legendDisplayBoundaries");
                    break;
                case 'ccd':
                    wfsCCD.setVisible(true);
                    wmsCCD.setVisible(true);
					wmsCCD.set('displayInLayerSwitcher', true);
                    addLegendContent('<div id="ccdLegend"><table><tr><td><a id="ccdImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="ccd" onchange="handleLegend($(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#AAAAAA;"></div></td><td>Primary School Districts</td></tr></table></div>', true, "legendDisplayBoundaries");
                    break;
                case 'scsd':
                    wfsSCSD.setVisible(true);
                    wmsSCSD.setVisible(true);
					wmsSCSD.set('displayInLayerSwitcher', true);
                    addLegendContent('<div id="scsdLegend"><table><tr><td><a id="scsdImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="scsd" onchange="handleLegend($(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#AAAAAA;"></div></td><td>School Districts</td></tr></table></div>', true, "legendDisplayBoundaries");
                    break;
                case 'zips':
                    wmsZips.setVisible(true);
					wmsZips.set('displayInLayerSwitcher', true);
                    wfsZips.setVisible(true);
                    addLegendContent('<div id="zipLegend"><table><tr><td><a id="zipsImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="zips" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px"  src="images/Legend/zip.png" /></td><td>Zips</td></tr></table></div>', true, "legendDisplayBoundaries");
                    break;
                case 'str_coverage':
                    wmsSTRCoverage.setVisible(true);
					wmsSTRCoverage.set('displayInLayerSwitcher', true);
                    wfsSTRCoverage.setVisible(true);
                    addLegendContent('<div id="str_coverageLegend"><table><tr><td><a id="str_coverageImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="str_coverage" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px"  src="images/Legend/msa.png" /></td><td>STR Coverage</td></tr></table></div>', true, "legendDisplayBoundaries");
                    break;
            }
        }
        $("#divLabelsAD").show();
    }
}

function soboundaries(){
    $('#neighbourLegend').remove();
    $('#cultural_regionsLegend').remove();
    $('#rffLegend').remove();
    $('#std5Legend').remove();
    $('#std10Legend').remove();
    try {
        $("#popup-closer").click();
    } catch (ex) {}

    wmsNeighbors.setVisible(false);
    wfsNeighbors.setVisible(false);
	wmsTriballand.setVisible(false);
    wfsTriballand.setVisible(false);
	padus.setVisible(false);
    wmsCulturalRegions.setVisible(false);
    wfsCulturalRegions.setVisible(false);
    wmsRFF.setVisible(false);
    wfsRFF.setVisible(false);
    wmsSTD5.setVisible(false);
    wfsSTD5.setVisible(false);
    wmsSTD10.setVisible(false);
    wfsSTD10.setVisible(false);

	padus.set('displayInLayerSwitcher', false);
	wmsNeighbors.set('displayInLayerSwitcher', false);
    wmsTriballand.set('displayInLayerSwitcher', false);
    wmsCulturalRegions.set('displayInLayerSwitcher', false);
    wmsRFF.set('displayInLayerSwitcher', false);
    wmsSTD5.set('displayInLayerSwitcher', false);
    wmsSTD10.set('displayInLayerSwitcher', false);
    
	var len = 0;
    $("#divLabelsSO").hide();
    $("#divTextureSO").hide();
    try {
        len = $("#selSOboundaries").val().length;
    } catch (ex) {}
    if (len > 0) {
		if($("#selSOboundaries").val().indexOf("padus") !== -1){
			$("#divTextureSO").show();
		}
		for (i = 0; i < len; i++) {
            switch ($("#selSOboundaries").val()[i]) {
                case 'neighborhoods':
                    wmsNeighbors.setVisible(true);
					wmsNeighbors.set('displayInLayerSwitcher', true);
                    wfsNeighbors.setVisible(true);
                    addLegendContent('<div id="neighbourLegend"><table><tr><td><a id="neighborsImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="neighbors" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/neighbor.png" /></td><td>Neighors</td></tr></table></div>', true, "legendDisplayBoundaries");
                    break;
                case 'triballand':
                    wfsTriballand.setVisible(true);
					wmsTriballand.setVisible(true);
					wmsTriballand.set('displayInLayerSwitcher', true);
                    break;
				case 'padus':
					padus.setVisible(true);
					padus.set('displayInLayerSwitcher', true);
					changeTextureSO('dull');
					break;
                case 'rff':
                    wmsRFF.setVisible(true);
					wmsRFF.set('displayInLayerSwitcher', true);
                    wfsRFF.setVisible(true);
                    addLegendContent('<div id="rffLegend"><table><tr><td><a id="rffImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="rff" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/msa.png" /></td><td>Refrigerated</td></tr></table></div>', true, "legendDisplayBoundaries");
                    break;
                case 'cultural_regions':
                    wmsCulturalRegions.setVisible(true);
					wmsCulturalRegions.set('displayInLayerSwitcher', true);
                    wfsCulturalRegions.setVisible(true);
					addLegendContent('<div id="cultural_regionsLegend"><table><tr><td><a id="cultural_regionsImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="cultural_regions" onchange="handleLegend($(this));" checked/></td><td>Cultural Regions</td><td>&nbsp;</td></tr></table><table id="tableInsideTable"><tr><td><input type="checkbox" id="1" onchange="handlecohort(\'cultural_regions\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#DD8F83;"></div></td><td>Cajun</td></tr><tr><td><input type="checkbox" id="2" onchange="handlecohort(\'cultural_regions\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#C9A9A9;"></div></td><td>Central Florida</td></tr><tr><td><input type="checkbox" id="3" onchange="handlecohort(\'cultural_regions\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#DA95C1;"></div></td><td>Chesapeake</td></tr><tr><td><input type="checkbox" id="4" onchange="handlecohort(\'cultural_regions\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#DBBD9C;"></div></td><td>Columbia Plateau</td></tr><tr><td><input type="checkbox" id="5" onchange="handlecohort(\'cultural_regions\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#996B45;"></div></td><td>Great Basin</td></tr><tr><td><input type="checkbox" id="6" onchange="handlecohort(\'cultural_regions\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#DFC78C;"></div></td><td>Great Lakes</td></tr><tr><td><input type="checkbox" id="7" onchange="handlecohort(\'cultural_regions\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#A85E5E;"></div></td><td>Gulf Coast</td></tr><tr><td><input type="checkbox" id="8" onchange="handlecohort(\'cultural_regions\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#C9A54A;"></div></td><td>Heartland</td></tr><tr><td><input type="checkbox" id="9" onchange="handlecohort(\'cultural_regions\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#F7E03A;"></div></td><td>Lower Midwest</td></tr><tr><td><input type="checkbox" id="10" onchange="handlecohort(\'cultural_regions\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#6367AF;"></div></td><td>Mid Atlantic</td></tr><tr><td><input type="checkbox" id="11" onchange="handlecohort(\'cultural_regions\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#696DB2;"></div></td><td>Midsouth</td></tr><tr><td><input type="checkbox" id="12" onchange="handlecohort(\'cultural_regions\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#E98095;"></div></td><td>Midsouth</td></tr><tr><td><input type="checkbox" id="13" onchange="handlecohort(\'cultural_regions\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#B7B4DA;"></div></td><td>Northern Appalachia</td></tr><tr><td><input type="checkbox" id="14" onchange="handlecohort(\'cultural_regions\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#80C480;"></div></td><td>Northern California</td></tr><tr><td><input type="checkbox" id="15" onchange="handlecohort(\'cultural_regions\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#F49F64;"></div></td><td>Northern Great Plains</td></tr><tr><td><input type="checkbox" id="16" onchange="handlecohort(\'cultural_regions\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#E5B549;"></div></td><td>Northwoods</td></tr><tr><td><input type="checkbox" id="17" onchange="handlecohort(\'cultural_regions\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#705399;"></div></td><td>NYC Metro</td></tr><tr><td><input type="checkbox" id="18" onchange="handlecohort(\'cultural_regions\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#709B70;"></div></td><td>Pacific Northwest</td></tr><tr><td><input type="checkbox" id="19" onchange="handlecohort(\'cultural_regions\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#D79C93;"></div></td><td>Rio Grande</td></tr><tr><td><input type="checkbox" id="20" onchange="handlecohort(\'cultural_regions\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#C1A796;"></div></td><td>Rocky Mountains</td></tr><tr><td><input type="checkbox" id="21" onchange="handlecohort(\'cultural_regions\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#EF4242;"></div></td><td>South</td></tr><tr><td><input type="checkbox" id="22" onchange="handlecohort(\'cultural_regions\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#EF7165;"></div></td><td>South Atlantic</td></tr><tr><td><input type="checkbox" id="23" onchange="handlecohort(\'cultural_regions\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#CC519D;"></div></td><td>South Florida</td></tr><tr><td><input type="checkbox" id="24" onchange="handlecohort(\'cultural_regions\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#D4A2A1;"></div></td><td>Southern Appalachia</td></tr><tr><td><input type="checkbox" id="25" onchange="handlecohort(\'cultural_regions\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#BDDFB9;"></div></td><td>Southern California</td></tr><tr><td><input type="checkbox" id="26" onchange="handlecohort(\'cultural_regions\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#D0976A;"></div></td><td>Southern Great Plains</td></tr><tr><td><input type="checkbox" id="27" onchange="handlecohort(\'cultural_regions\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#B1874E;"></div></td><td>Southwest</td></tr><tr><td><input type="checkbox" id="Texas Heartland" onchange="handlecohort(\'cultural_regions\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#E57F6B;"></div></td><td>Texas Heartland</td></tr><tr><td><input type="checkbox" id="28" onchange="handlecohort(\'cultural_regions\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#F4ACA9;"></div></td><td>The Ozarks</td></tr><tr><td><input type="checkbox" id="29" onchange="handlecohort(\'cultural_regions\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#EDD469;"></div></td><td>Upper Midwest</td></tr><tr><td><input type="checkbox" id="30" onchange="handlecohort(\'cultural_regions\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#E98095;"></div></td><td>Upper South</td></tr><tr><td><input type="checkbox" id="31" onchange="handlecohort(\'cultural_regions\',$(this));" checked/></td><td><div style="height: 20px; width: 20px; margin-left: 3px; margin-right: 10px; float: left; border:1px solid black; background-color:#9493C8;"></div></td><td>Upstate NY</td></tr></table></div>', true, "legendDisplayBoundaries");
                    break;
                case 'std5':
                    wmsSTD5.setVisible(true);
					wmsSTD5.set('displayInLayerSwitcher', true);
                    wfsSTD5.setVisible(true);
                    addLegendContent('<div id="std5Legend"><table><tr><td><a id="std5Img" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="std5" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/msa.png" /></td><td>Food Regions (5)</td></tr></table></div>', true, "legendDisplayBoundaries");
                    break;
                case 'std10':
                    wmsSTD10.setVisible(true);
					wmsSTD10.set('displayInLayerSwitcher', true);
                    wfsSTD10.setVisible(true);
                    addLegendContent('<div id="std10Legend"><table><tr><td><a id="std10Img" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="std10" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/msa.png" /></td><td>Food Regions (10)</td></tr></table></div>', true, "legendDisplayBoundaries");
                    break;
            }
        }
        $("#divLabelsSO").show();
    }
}

function evboundaries(){
    $('#coastallineLegend').remove();
    $('#subwatershedLegend').remove();
    $('#watershedsubbasinLegend').remove();
    $('#watershedsubregionsLegend').remove();
    $('#watershedregionsLegend').remove();
    try {
        $("#popup-closer").click();
    } catch (ex) {}

	coastalline.setVisible(false);
	watershedregions.setVisible(false);
	wfsRegions.setVisible(false);
	watershedsubregions.setVisible(false);
	wfsSubregions.setVisible(false);
	watershedsubbasin.setVisible(false);
	wfsSubbasin.setVisible(false);
	subwatershed.setVisible(false);
	wfsSubwatershed.setVisible(false);

    coastalline.set('displayInLayerSwitcher', false);
	wfsRegions.set('displayInLayerSwitcher', false);
	watershedsubregions.set('displayInLayerSwitcher', false);
	wfsSubregions.set('displayInLayerSwitcher', false);
	watershedsubbasin.set('displayInLayerSwitcher', false);
	wfsSubbasin.set('displayInLayerSwitcher', false);
	subwatershed.set('displayInLayerSwitcher', false);
	wfsSubwatershed.set('displayInLayerSwitcher', false);
    
	var len = 0;
    $("#divLabelsEV").hide();
    $("#divTextureEV").hide();
    try {
        len = $("#selEVboundaries").val().length;
    } catch (ex) {}
    if (len > 0) {
		if($("#selEVboundaries").val().indexOf("padus") !== -1){
			$("#divTextureEV").show();
		}
		for (i = 0; i < len; i++) {
            switch ($("#selEVboundaries").val()[i]) {
                case 'coastalline':
                    coastalline.setVisible(true);
					coastalline.set('displayInLayerSwitcher', true);
                    addLegendContent('<div id="coastallineLegend"><table><tr><td><a id="coastallineImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="coastalline" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/coastalline.png" /></td><td>Coastal Line</td></tr></table></div>', true, "legendDisplayBoundaries");
                    break;
                case 'subwatershed':
                    subwatershed.setVisible(true);
                    wfsSubwatershed.setVisible(true);
					subwatershed.set('displayInLayerSwitcher', true);
                    addLegendContent('<div id="subwatershedLegend"><table><tr><td><a id="subwatershedImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="subwatershed" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/subwatershed.png" /></td><td>Sub Watershed Boundaries - HUC12</td></tr></table></div>', true, "legendDisplayBoundaries");
                    break;
                case 'watershedsubbasin':
                    watershedsubbasin.setVisible(true);
                    wfsSubbasin.setVisible(true);
					watershedsubbasin.set('displayInLayerSwitcher', true);
                    addLegendContent('<div id="watershedsubbasinLegend"><table><tr><td><a id="watershedsubbasinImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="watershedsubbasin" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/watershedsubbasin.png" /></td><td>Sub Basin Boundaries - HUC8</td></tr></table></div>', true, "legendDisplayBoundaries");
                    break;
                case 'watershedsubregions':
                    watershedsubregions.setVisible(true);
                    wfsSubregions.setVisible(true);
					watershedsubregions.set('displayInLayerSwitcher', true);
                    addLegendContent('<div id="watershedsubregionsLegend"><table><tr><td><a id="watershedsubregionsImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="watershedsubregions" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/watershedsubregions.png" /></td><td>Watershed Sub Region Boundaries - HUC4</td></tr></table></div>', true, "legendDisplayBoundaries");
                    break;
                case 'watershedregions':
                    watershedregions.setVisible(true);
                    wfsRegions.setVisible(true);
					watershedregions.set('displayInLayerSwitcher', true);
                    addLegendContent('<div id="watershedregionsLegend"><table><tr><td><a id="watershedregionsImg" onclick="removeLayer($(this));"><img height="15px" width="15px" src="images/remove.png"></a></td><td><input type="checkbox" id="watershedregions" onchange="handleLegend($(this));" checked/></td><td><img height="5px" width="19px" src="images/Legend/watershedregions.png" /></td><td>Watershed Region Boundaries - HUC2</td></tr></table></div>', true, "legendDisplayBoundaries");
                    break;
            }
        }
        $("#divLabelsEV").show();
    }
}

function changeTextureSO(value){
	if ($("#cbTextureSO").prop('checked'))
		stripValue = "patternFlipped.png";
	else
		stripValue = "pattern.png";

	padus.getSource().updateParams({
		'SLD_Body': '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:padus</Name><UserStyle><FeatureTypeStyle><Rule><PolygonSymbolizer><Fill><GraphicFill><Graphic><ExternalGraphic><OnlineResource xlink:type="simple" xlink:href="http://52.38.47.239/geoserver/styles/Icons/'+stripValue +'" /><Format>image/png</Format></ExternalGraphic><Size>93</Size></Graphic></GraphicFill></Fill></PolygonSymbolizer></Rule></FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>'
	});
	
    map.render();
}

function selRadiusChange(){
	sqlJoinSource.clear();
	sqlJoinLayer.setVisible(false);
	$("#dvSelWithin").hide();
	$("#dvSelSQL").hide();
	switch ($("#selRadius").val()) {
		case 'none':
			// $("#dvSelWithin").hide();
			// $("#dvSelSQL").hide();
        break;
        case 'within':
			$("#dvSelWithin").show();
        break;
		case 'sql':
			$("#dvSelSQL").show();
		break;
    }
}

function changePalettePG(){
	switch ($("#cohortOptsPG").val()) {
        case 'flat':
			wmsStates.getSource().updateParams({
				'SLD_Body': null
			});
			wmsDistricts.getSource().updateParams({
				'SLD_Body': null
			});
			wmsCounties.getSource().updateParams({
				'SLD_Body': null
			});
			wmsCities.getSource().updateParams({
				'SLD_Body': null
			});
        break;
		case 'topo':
			wmsStates.getSource().updateParams({
				'SLD_Body': '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:states</Name><UserStyle><FeatureTypeStyle>' +topoSldContent + '</FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>'
			});

			wmsDistricts.getSource().updateParams({
				'SLD_Body': '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:districts</Name><UserStyle><FeatureTypeStyle>' +topoSldContent + '</FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>'
			});

			wmsCounties.getSource().updateParams({
				'SLD_Body': '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:counties</Name><UserStyle><FeatureTypeStyle>' +topoSldContent + '</FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>'
			});

			wmsCities.getSource().updateParams({
				'SLD_Body': '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:cities</Name><UserStyle><FeatureTypeStyle>' +topoSldContent + '</FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>'
			});

		break;
    }
}

function changeOCPG(val){
	if(val == "on"){
		$("#divOCPG").show();
	}
	else{
		$("#divOCPG").hide();
	}
		
	ol.style.FillPattern.addPattern ("copy (char pattern)", { char:"©" });
	ol.style.FillPattern.addPattern ("bug (fontawesome)", { char:'\uf188', size:12, font:"10px FontAwesome" });
	ol.style.FillPattern.addPattern ("smiley (width angle)", { char:'\uf118', size:20, angle:true, font:"15px FontAwesome" });

	// Popup
	$("#selectPG").click(function()
	{	$("#pselectPG").toggle();
	});

	patPG = "hatch"
	spatternPG = $("#pselectPG");
	for (var i in ol.style.FillPattern.prototype.patterns)
	{	var p = new ol.style.FillPattern({ pattern:i })
		$("<div>").attr('title',i)
				.css("background-image",'url("'+p.getImage().toDataURL()+'")')
				.click(function(){ patPG = $(this).attr("title"); refreshPG(); })
				.appendTo(spatternPG);
	}
	var p = new ol.style.FillPattern({ image: new ol.style.Icon({ src : imgFile }) });
	$("<div>").attr('title','Image (PNG)')
		.css("background-image",'url("'+imgFile+'")')
		.click(function(){ patPG = $(this).attr("title"); refreshPG(); })
		.appendTo(spatternPG);
	// Redraw map
	refreshPG = function()
	{	
		$("#pselectPG").hide();
		if ( $.inArray(patPG,["hatch","cross","dot","circle","square","tile"]) < 0 )
		{	$("#sizePG").prop("disabled",true);
			$("#spacingPG").prop("disabled",true);
			$("#anglePG").prop("disabled",true);
			$("#anglePG").next().text("");
		}
		else
		{	$("#sizePG").prop("disabled",false);
			$("#spacingPG").prop("disabled",false);
			$("#anglePG").prop("disabled",false);
			if (patPG=="hatch") $("#anglePG").next().text("(deg)");
			else $("#anglePG").next().text("(bool)");
		}
		// Calculate image to be drawn outside the map
		var p = new ol.style.FillPattern({	
			pattern: patPG,
			image: (patPG=='Image (PNG)') ? new ol.style.Icon({ src : imgFile }) : undefined,
			ratio: 2,
			color: "#000",
			size: Number($("#sizePG").val()),
			spacing: Number($("#spacingPG").val()),
			angle: Number($("#anglePG").val())
		});
		$("#selectPG").css('background-image', 'url('+p.getImage().toDataURL()+')');
		updatePGStyle();
	};
	refreshPG();
	updatePGStyle();
}
	
function getStylePG(feature)
{	var p = patPG;
	return [ new ol.style.Style(
	{	fill: new ol.style.FillPattern(
		{	pattern: (p!='Image (PNG)') ? p : undefined,
			image: (p=='Image (PNG)') ? new ol.style.Icon({ src : imgFile }) : undefined,
			ratio: 1,
			icon: p=='Image (PNG)' ? new ol.style.Icon ({src:'data/target.png'}) : undefined,
			color: $("#colorPG").val(),
			offset: Number($("#offsetPG").val()),
			scale: Number($("#scalePG").val()),
			fill: new ol.style.Fill ({ color:$("#bgPG").val() }),
			size: Number($("#sizePG").val()),
			spacing: Number($("#spacingPG").val()),
			angle: Number($("#anglePG").val())
		})
	})];
}

function updatePGStyle(){
	try{maskFilterPG.set('active', false);}catch(e){}						
	maskFilterPG = new ol.filter.Mask({ feature: usFull, inner:false, fill: new ol.style.Fill({ color:$("input#maskingFilterPG").css('backgroundColor')}) });
    var len = 0;
    try {
        len = $("#selPGBoundaries").val().length;
    } catch (ex) {}
    if (len > 0) {
        for (i = 0; i < len; i++) {
            switch ($("#selPGBoundaries").val()[i]) {
                case 'states':
					if ($("#switchOCPG").prop('checked')){
						wfsStates.setStyle(getStylePG);
						wmsStates.set('displayInLayerSwitcher', false);
						wmsStates.setVisible(false);
						wfsStates.addFilter(maskFilterPG);
						wfsStates.set('displayInLayerSwitcher', true);
					}
					else{
						wfsStates.setStyle(getBoundaryAndLabelStyle);
						wmsStates.set('displayInLayerSwitcher', true);
						wmsStates.setVisible(true);
						wmsStates.set('displayInLayerSwitcher', false);
					}
                    break;

                case 'districts':
					if ($("#switchOCPG").prop('checked')){
						wfsDistricts.setStyle(getStylePG);
						wmsDistricts.setVisible(false);
						wmsDistricts.set('displayInLayerSwitcher', false);
						wfsDistricts.addFilter(maskFilterPG);
						wfsDistricts.set('displayInLayerSwitcher', true);
					}
					else{
						wfsDistricts.setStyle(getBoundaryAndLabelStyle);
						wmsDistricts.setVisible(true);
						wmsDistricts.set('displayInLayerSwitcher', true);
						wfsDistricts.set('displayInLayerSwitcher', false);
					}
                    break;

                case 'counties':
					if ($("#switchOCPG").prop('checked')){
						wfsCounties.setStyle(getStylePG);
						wmsCounties.setVisible(false);
						wmsCounties.set('displayInLayerSwitcher', false);
						wfsCounties.addFilter(maskFilterPG);
						wfsCounties.set('displayInLayerSwitcher', true);
					}
					else{
						wfsCounties.setStyle(getBoundaryAndLabelStyle);
						wmsCounties.setVisible(true);
						wmsCounties.set('displayInLayerSwitcher', true);
						wfsCounties.set('displayInLayerSwitcher', false);
					}						
					break;

                case 'cities':
					if ($("#switchOCPG").prop('checked')){
						wfsCities.setStyle(getStylePG);
						wmsCities.setVisible(false);
						wmsCities.set('displayInLayerSwitcher', false);
						wfsCities.addFilter(maskFilterPG);
						wfsCities.set('displayInLayerSwitcher', true);
					}
					else{
						wfsCities.setStyle(getBoundaryAndLabelStyle);
						wmsCities.setVisible(true);
						wmsCities.set('displayInLayerSwitcher', true);
						wfsCities.set('displayInLayerSwitcher', false);
					}
                    break;
            }
        }
    }
}

function changePaletteEC(){
	switch ($("#cohortOptsEC").val()) {
        case 'flat':
			wmsRegion.getSource().updateParams({
				'SLD_Body': null
			});
			wmsMsas.getSource().updateParams({
				'SLD_Body': null
			});
			wmsMegaregion.getSource().updateParams({
				'SLD_Body': null
			});
			wmsCommuterRegions.getSource().updateParams({
				'SLD_Body': null
			});
			wmsCMB.getSource().updateParams({
				'SLD_Body': null
			});
			wmsActiveCoverage.getSource().updateParams({
				'SLD_Body': null
			});
			wmsReducedCoverage.getSource().updateParams({
				'SLD_Body': null
			});
			wmsTotalCoverage.getSource().updateParams({
				'SLD_Body': null
			});
			wmsBEA10.getSource().updateParams({
				'SLD_Body': null
			});
			wmsCBSA10.getSource().updateParams({
				'SLD_Body': null
			});
			wmsERS10.getSource().updateParams({
				'SLD_Body': null
			});
			wmsERS10Rep.getSource().updateParams({
				'SLD_Body': null
			});
			wmsPEA10.getSource().updateParams({
				'SLD_Body': null
			});
			wmsTP10.getSource().updateParams({
				'SLD_Body': null
			});
			wmsTP10Metro.getSource().updateParams({
				'SLD_Body': null
			});
			wmsTP10Micro.getSource().updateParams({
				'SLD_Body': null
			});
			wmsCFS.getSource().updateParams({
				'SLD_Body': null
			});
			
			txtSearchLayerRegion.setStyle(getBoundaryStyle);
        break;
		case 'topo':
			txtSearchLayerRegion.setStyle(getBoundaryStyle);
			wmsRegion.getSource().updateParams({
				'SLD_Body': '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:regions</Name><UserStyle><FeatureTypeStyle>' +topoSldContent + '</FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>'
			});
			wmsMsas.getSource().updateParams({
				'SLD_Body': '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:msas</Name><UserStyle><FeatureTypeStyle>' +topoSldContent + '</FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>'
			});
			wmsMegaregion.getSource().updateParams({
				'SLD_Body': '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:megareg</Name><UserStyle><FeatureTypeStyle>' +topoSldContent + '</FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>'
			});
			wmsCommuterRegions.getSource().updateParams({
				'SLD_Body': '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:commuters_reg</Name><UserStyle><FeatureTypeStyle>' +topoSldContent + '</FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>'
			});
			wmsCMB.getSource().updateParams({
				'SLD_Body': '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:consumermarketboundaries</Name><UserStyle><FeatureTypeStyle>' +topoSldContent + '</FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>'
			});
			wmsActiveCoverage.getSource().updateParams({
				'SLD_Body': '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:active_coverage</Name><UserStyle><FeatureTypeStyle>' +topoSldContent + '</FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>'
			});
			wmsReducedCoverage.getSource().updateParams({
				'SLD_Body': '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:reduced_coverage</Name><UserStyle><FeatureTypeStyle>' +topoSldContent + '</FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>'
			});
			wmsTotalCoverage.getSource().updateParams({
				'SLD_Body': '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:total_coverage</Name><UserStyle><FeatureTypeStyle>' +topoSldContent + '</FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>'
			});
			wmsBEA10.getSource().updateParams({
				'SLD_Body': '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:bea10</Name><UserStyle><FeatureTypeStyle>' +topoSldContent + '</FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>'
			});
			wmsCBSA10.getSource().updateParams({
				'SLD_Body': '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:cbsa10</Name><UserStyle><FeatureTypeStyle>' +topoSldContent + '</FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>'
			});
			wmsERS10.getSource().updateParams({
				'SLD_Body': '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:ers10</Name><UserStyle><FeatureTypeStyle>' +topoSldContent + '</FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>'
			});
			wmsERS10Rep.getSource().updateParams({
				'SLD_Body': '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:ers10rep</Name><UserStyle><FeatureTypeStyle>' +topoSldContent + '</FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>'
			});
			wmsPEA10.getSource().updateParams({
				'SLD_Body': '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:pea10</Name><UserStyle><FeatureTypeStyle>' +topoSldContent + '</FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>'
			});
			wmsTP10.getSource().updateParams({
				'SLD_Body': '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:tp10</Name><UserStyle><FeatureTypeStyle>' +topoSldContent + '</FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>'
			});
			wmsTP10Metro.getSource().updateParams({
				'SLD_Body': '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:tp10metro</Name><UserStyle><FeatureTypeStyle>' +topoSldContent + '</FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>'
			});
			wmsTP10Micro.getSource().updateParams({
				'SLD_Body': '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:tp10micro</Name><UserStyle><FeatureTypeStyle>' +topoSldContent + '</FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>'
			});
			wmsCFS.getSource().updateParams({
				'SLD_Body': '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:cfs_area</Name><UserStyle><FeatureTypeStyle>' +topoSldContent + '</FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>'
			});
		break;
    }
}

function changeOCEC(val){
	if(val == "on"){
		$("#divOCEC").show();
	}
	else{
		$("#divOCEC").hide();
	}
		
	ol.style.FillPattern.addPattern ("copy (char pattern)", { char:"©" });
	ol.style.FillPattern.addPattern ("bug (fontawesome)", { char:'\uf188', size:12, font:"10px FontAwesome" });
	ol.style.FillPattern.addPattern ("smiley (width angle)", { char:'\uf118', size:20, angle:true, font:"15px FontAwesome" });

	// Popup
	$("#selectEC").click(function()
	{	$("#pselectEC").toggle();
	});

	patEC = "hatch"
	spatternEC = $("#pselectEC");
	for (var i in ol.style.FillPattern.prototype.patterns)
	{	var p = new ol.style.FillPattern({ pattern:i })
		$("<div>").attr('title',i)
				.css("background-image",'url("'+p.getImage().toDataURL()+'")')
				.click(function(){ patEC = $(this).attr("title"); refreshEC(); })
				.appendTo(spatternEC);
	}
	var p = new ol.style.FillPattern({ image: new ol.style.Icon({ src : imgFile }) });
	$("<div>").attr('title','Image (PNG)')
		.css("background-image",'url("'+imgFile+'")')
		.click(function(){ patEC = $(this).attr("title"); refreshEC(); })
		.appendTo(spatternEC);
	// Redraw map
	refreshEC = function()
	{	
		$("#pselectEC").hide();
		if ( $.inArray(patEC,["hatch","cross","dot","circle","square","tile"]) < 0 )
		{	$("#sizeEC").prop("disabled",true);
			$("#spacingEC").prop("disabled",true);
			$("#angleEC").prop("disabled",true);
			$("#angleEC").next().text("");
		}
		else
		{	$("#sizeEC").prop("disabled",false);
			$("#spacingEC").prop("disabled",false);
			$("#angleEC").prop("disabled",false);
			if (patEC=="hatch") $("#angleEC").next().text("(deg)");
			else $("#angleEC").next().text("(bool)");
		}
		// Calculate image to be drawn outside the map
		var p = new ol.style.FillPattern({	
			pattern: patEC,
			image: (patEC=='Image (PNG)') ? new ol.style.Icon({ src : imgFile }) : undefined,
			ratio: 2,
			color: "#000",
			size: Number($("#sizeEC").val()),
			spacing: Number($("#spacingEC").val()),
			angle: Number($("#angleEC").val())
		});
		$("#selectEC").css('background-image', 'url('+p.getImage().toDataURL()+')');
		updateECStyle();
	};
	refreshEC();
	updateECStyle();
}
	
function getStyleEC(feature)
{	var p = patEC;
	return [ new ol.style.Style(
	{	fill: new ol.style.FillPattern(
		{	pattern: (p!='Image (PNG)') ? p : undefined,
			image: (p=='Image (PNG)') ? new ol.style.Icon({ src : imgFile }) : undefined,
			ratio: 1,
			icon: p=='Image (PNG)' ? new ol.style.Icon ({src:'data/target.png'}) : undefined,
			color: $("#colorEC").val(),
			offset: Number($("#offsetEC").val()),
			scale: Number($("#scaleEC").val()),
			fill: new ol.style.Fill ({ color:$("#bgEC").val() }),
			size: Number($("#sizeEC").val()),
			spacing: Number($("#spacingEC").val()),
			angle: Number($("#angleEC").val())
		})
	})];
}

function updateECStyle(){
	try{maskFilterEC.set('active', false);}catch(e){}
	maskFilterEC = new ol.filter.Mask({ feature: usFull, inner:false, fill: new ol.style.Fill({ color:$("input#maskingFilterEC").css('backgroundColor') }) });
    var len = 0;
    try {
        len = $("#selECBoundaries").val().length;
    } catch (ex) {}
    if (len > 0) {
        for (i = 0; i < len; i++) {
            switch ($("#selECBoundaries").val()[i]) {
                case 'active_coverage':
					if ($("#switchOCEC").prop('checked')){
						wfsActiveCoverage.setStyle(getStyleEC);
						wmsActiveCoverage.set('displayInLayerSwitcher', false);
						wmsActiveCoverage.setVisible(false);
						wfsActiveCoverage.addFilter(maskFilterEC);
						wfsActiveCoverage.set('displayInLayerSwitcher', true);
					}
					else{
						wfsActiveCoverage.setStyle(getBoundaryAndLabelStyle);
						wmsActiveCoverage.set('displayInLayerSwitcher', true);
						wmsActiveCoverage.setVisible(true);
						wfsActiveCoverage.set('displayInLayerSwitcher', false);
					}
                    break;
                case 'reduced_coverage':
					if ($("#switchOCEC").prop('checked')){
						wfsReducedCoverage.setStyle(getStyleEC);
						wmsReducedCoverage.set('displayInLayerSwitcher', false);
						wmsReducedCoverage.setVisible(false);
						wfsReducedCoverage.addFilter(maskFilterEC);
						wfsReducedCoverage.set('displayInLayerSwitcher', true);
					}
					else{
						wfsReducedCoverage.setStyle(getBoundaryAndLabelStyle);
						wmsReducedCoverage.set('displayInLayerSwitcher', true);
						wmsReducedCoverage.setVisible(true);
						wfsReducedCoverage.set('displayInLayerSwitcher', false);
					}
                    break;
                case 'total_coverage':
					if ($("#switchOCEC").prop('checked')){
						wfsTotalCoverage.setStyle(getStyleEC);
						wmsTotalCoverage.set('displayInLayerSwitcher', false);
						wmsTotalCoverage.setVisible(false);
						wfsTotalCoverage.addFilter(maskFilterEC);
						wfsTotalCoverage.set('displayInLayerSwitcher', true);
					}
					else{
						wfsTotalCoverage.setStyle(getBoundaryAndLabelStyle);
						wmsTotalCoverage.set('displayInLayerSwitcher', true);
						wmsTotalCoverage.setVisible(true);
						wfsTotalCoverage.set('displayInLayerSwitcher', false);
					}
                    break;
                case 'bea10':
					if ($("#switchOCEC").prop('checked')){
						wfsBEA10.setStyle(getStyleEC);
						wmsBEA10.set('displayInLayerSwitcher', false);
						wmsBEA10.setVisible(false);
						wfsBEA10.addFilter(maskFilterEC);
						wfsBEA10.set('displayInLayerSwitcher', true);
					}
					else{
						wfsBEA10.setStyle(getBoundaryAndLabelStyle);
						wmsBEA10.set('displayInLayerSwitcher', true);
						wmsBEA10.setVisible(true);
						wfsBEA10.set('displayInLayerSwitcher', false);
					}
                    break;
                case 'cbsa10':
					if ($("#switchOCEC").prop('checked')){
						wfsCBSA10.setStyle(getStyleEC);
						wmsCBSA10.set('displayInLayerSwitcher', false);
						wmsCBSA10.setVisible(false);
						wfsCBSA10.addFilter(maskFilterEC);
						wfsCBSA10.set('displayInLayerSwitcher', true);
					}
					else{
						wfsCBSA10.setStyle(getBoundaryAndLabelStyle);
						wmsCBSA10.set('displayInLayerSwitcher', true);
						wmsCBSA10.setVisible(true);
						wfsCBSA10.set('displayInLayerSwitcher', false);
					}
                    break;
                case 'commuters_regions':
					if ($("#switchOCEC").prop('checked')){
						wfsCommuterRegions.setStyle(getStyleEC);
						wmsCommuterRegions.set('displayInLayerSwitcher', false);
						wmsCommuterRegions.setVisible(false);
						wfsCommuterRegions.addFilter(maskFilterEC);
						wfsCommuterRegions.set('displayInLayerSwitcher', true);
					}
					else{
						wfsCommuterRegions.setStyle(getBoundaryAndLabelStyle);
						wmsCommuterRegions.set('displayInLayerSwitcher', true);
						wmsCommuterRegions.setVisible(true);
						wfsCommuterRegions.set('displayInLayerSwitcher', false);
					}
                    break;
                case 'consumermarketboundaries':
					if ($("#switchOCEC").prop('checked')){
						wfsCMB.setStyle(getStyleEC);
						wmsCMB.set('displayInLayerSwitcher', false);
						wmsCMB.setVisible(false);
						wfsCMB.addFilter(maskFilterEC);
						wfsCMB.set('displayInLayerSwitcher', true);
					}
					else{
						wfsCMB.setStyle(getBoundaryAndLabelStyle);
						wmsCMB.set('displayInLayerSwitcher', true);
						wmsCMB.setVisible(true);
						wfsCMB.set('displayInLayerSwitcher', false);
					}
                    break;
                case 'ers10':
					if ($("#switchOCEC").prop('checked')){
						wfsERS10.setStyle(getStyleEC);
						wmsERS10.set('displayInLayerSwitcher', false);
						wmsERS10.setVisible(false);
						wfsERS10.addFilter(maskFilterEC);
						wfsERS10.set('displayInLayerSwitcher', true);
					}
					else{
						wfsERS10.setStyle(getBoundaryAndLabelStyle);
						wmsERS10.set('displayInLayerSwitcher', true);
						wmsERS10.setVisible(true);
						wfsERS10.set('displayInLayerSwitcher', false);
					}
                    break;
                case 'ers10rep':
					if ($("#switchOCEC").prop('checked')){
						wfsERS10Rep.setStyle(getStyleEC);
						wmsERS10Rep.set('displayInLayerSwitcher', false);
						wmsERS10Rep.setVisible(false);
						wfsERS10Rep.addFilter(maskFilterEC);
						wfsERS10Rep.set('displayInLayerSwitcher', true);
					}
					else{
						wfsERS10Rep.setStyle(getBoundaryAndLabelStyle);
						wmsERS10Rep.set('displayInLayerSwitcher', true);
						wmsERS10Rep.setVisible(true);
						wfsERS10Rep.set('displayInLayerSwitcher', false);
					}
                    break;
                case 'regions':
					if ($("#switchOCEC").prop('checked')){
						txtSearchLayerRegion.setStyle(getStyleEC);
						wmsRegion.setVisible(false);
						wmsRegion.set('displayInLayerSwitcher', false);
						txtSearchLayerRegion.addFilter(maskFilterEC);
						txtSearchLayerRegion.set('displayInLayerSwitcher', true);
					}
					else{
						txtSearchLayerRegion.setStyle(getBoundaryAndLabelStyle);
						wmsRegion.setVisible(true);
						wmsRegion.set('displayInLayerSwitcher', true);
						txtSearchLayerRegion.set('displayInLayerSwitcher', false);
					}
                    break;
                case 'megaregions':
					if ($("#switchOCEC").prop('checked')){
						wfsMegaregion.setStyle(getStyleEC);
						wmsMegaregion.setVisible(false);
						wmsMegaregion.set('displayInLayerSwitcher', false);
						wfsMegaregion.addFilter(maskFilterEC);
						wfsMegaregion.set('displayInLayerSwitcher', true);
					}
					else{
						wfsMegaregion.setStyle(getBoundaryAndLabelStyle);
						wmsMegaregion.setVisible(true);
						wmsMegaregion.set('displayInLayerSwitcher', true);
						wfsMegaregion.set('displayInLayerSwitcher', false);
					}						
					break;
                case 'pea10':
					if ($("#switchOCEC").prop('checked')){
						wfsPEA10.setStyle(getStyleEC);
						wmsPEA10.setVisible(false);
						wmsPEA10.set('displayInLayerSwitcher', false);
						wfsPEA10.addFilter(maskFilterEC);
						wfsPEA10.set('displayInLayerSwitcher', true);
					}
					else{
						wfsPEA10.setStyle(getBoundaryAndLabelStyle);
						wmsPEA10.setVisible(true);
						wmsPEA10.set('displayInLayerSwitcher', true);
						wfsPEA10.set('displayInLayerSwitcher', false);
					}						
					break;
                case 'tp10':
					if ($("#switchOCEC").prop('checked')){
						wfsTP10.setStyle(getStyleEC);
						wmsTP10.setVisible(false);
						wmsTP10.set('displayInLayerSwitcher', false);
						wfsTP10.addFilter(maskFilterEC);
						wfsTP10.set('displayInLayerSwitcher', true);
					}
					else{
						wfsTP10.setStyle(getBoundaryAndLabelStyle);
						wmsTP10.setVisible(true);
						wmsTP10.set('displayInLayerSwitcher', true);
						wfsTP10.set('displayInLayerSwitcher', false);
					}						
					break;
                case 'tp10metro':
					if ($("#switchOCEC").prop('checked')){
						wfsTP10Metro.setStyle(getStyleEC);
						wmsTP10Metro.setVisible(false);
						wmsTP10Metro.set('displayInLayerSwitcher', false);
						wfsTP10Metro.addFilter(maskFilterEC);
						wfsTP10Metro.set('displayInLayerSwitcher', true);
					}
					else{
						wfsTP10Metro.setStyle(getBoundaryAndLabelStyle);
						wmsTP10Metro.setVisible(true);
						wmsTP10Metro.set('displayInLayerSwitcher', true);
						wfsTP10Metro.set('displayInLayerSwitcher', false);
					}						
					break;
                case 'tp10micro':
					if ($("#switchOCEC").prop('checked')){
						wfsTP10Micro.setStyle(getStyleEC);
						wmsTP10Micro.setVisible(false);
						wmsTP10Micro.set('displayInLayerSwitcher', false);
						wfsTP10Micro.addFilter(maskFilterEC);
						wfsTP10Micro.set('displayInLayerSwitcher', true);
					}
					else{
						wfsTP10Micro.setStyle(getBoundaryAndLabelStyle);
						wmsTP10Micro.setVisible(true);
						wmsTP10Micro.set('displayInLayerSwitcher', true);
						wfsTP10Micro.set('displayInLayerSwitcher', false);
					}						
					break;
                case 'cfs_area':
					if ($("#switchOCEC").prop('checked')){
						wfsCFS.setStyle(getStyleEC);
						wmsCFS.setVisible(false);
						wmsCFS.set('displayInLayerSwitcher', false);
						wfsCFS.addFilter(maskFilterEC);
						wfsCFS.set('displayInLayerSwitcher', true);
					}
					else{
						wfsCFS.setStyle(getBoundaryAndLabelStyle);
						wmsCFS.setVisible(true);
						wmsCFS.set('displayInLayerSwitcher', true);
						wfsCFS.set('displayInLayerSwitcher', false);
					}						
					break;
                case 'msas':
					if ($("#switchOCEC").prop('checked')){
						wfsMsas.setStyle(getStyleEC);
						wmsMsas.setVisible(false);
						wmsMsas.set('displayInLayerSwitcher', false);
						wfsMsas.addFilter(maskFilterEC);
						wfsMsas.set('displayInLayerSwitcher', true);
					}
					else{
						wfsMsas.setStyle(getBoundaryAndLabelStyle);
						wmsMsas.setVisible(true);
						wmsMsas.set('displayInLayerSwitcher', true);
						wfsMsas.set('displayInLayerSwitcher', false);
					}
                    break;
            }
        }
    }
}

function changePaletteAD(){
	switch ($("#cohortOptsAD").val()) {
        case 'flat':
			wmsHrr.getSource().updateParams({
				'SLD_Body': null
			});
			wmsHsa.getSource().updateParams({
				'SLD_Body': null
			});
			wmsPcsa.getSource().updateParams({
				'SLD_Body': null
			});
			wmsCCD.getSource().updateParams({
				'SLD_Body': null
			});
			wmsSCSD.getSource().updateParams({
				'SLD_Body': null
			});
			wmsZips.getSource().updateParams({
				'SLD_Body': null
			});
			wmsSTRCoverage.getSource().updateParams({
				'SLD_Body': null
			});
        break;
		case 'topo':
			wmsHrr.getSource().updateParams({
				'SLD_Body': '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:hrr</Name><UserStyle><FeatureTypeStyle>' +topoSldContent + '</FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>'
			});
			wmsHsa.getSource().updateParams({
				'SLD_Body': '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:hsa</Name><UserStyle><FeatureTypeStyle>' +topoSldContent + '</FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>'
			});
			wmsPcsa.getSource().updateParams({
				'SLD_Body': '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:pcsa</Name><UserStyle><FeatureTypeStyle>' +topoSldContent + '</FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>'
			});
			wmsCCD.getSource().updateParams({
				'SLD_Body': '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:schools_ccd</Name><UserStyle><FeatureTypeStyle>' +topoSldContent + '</FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>'
			});
			wmsSCSD.getSource().updateParams({
				'SLD_Body': '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:scsd</Name><UserStyle><FeatureTypeStyle>' +topoSldContent + '</FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>'
			});
			wmsZips.getSource().updateParams({
				'SLD_Body': '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:zip</Name><UserStyle><FeatureTypeStyle>' +topoSldContent + '</FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>'
			});
			wmsSTRCoverage.getSource().updateParams({
				'SLD_Body': '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:str_coverage</Name><UserStyle><FeatureTypeStyle>' +topoSldContent + '</FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>'
			});
		break;
    }
}

function changeOCAD(val){
	if(val == "on"){
		$("#divOCAD").show();
	}
	else{
		$("#divOCAD").hide();
	}
		
	ol.style.FillPattern.addPattern ("copy (char pattern)", { char:"©" });
	ol.style.FillPattern.addPattern ("bug (fontawesome)", { char:'\uf188', size:12, font:"10px FontAwesome" });
	ol.style.FillPattern.addPattern ("smiley (width angle)", { char:'\uf118', size:20, angle:true, font:"15px FontAwesome" });

	$("#selectAD").click(function()
	{	$("#pselectAD").toggle();
	});

	patAD = "hatch"
	spatternAD = $("#pselectAD");
	for (var i in ol.style.FillPattern.prototype.patterns)
	{	var p = new ol.style.FillPattern({ pattern:i })
		$("<div>").attr('title',i)
				.css("background-image",'url("'+p.getImage().toDataURL()+'")')
				.click(function(){ patAD = $(this).attr("title"); refreshAD(); })
				.appendTo(spatternAD);
	}
	var p = new ol.style.FillPattern({ image: new ol.style.Icon({ src : imgFile }) });
	$("<div>").attr('title','Image (PNG)')
		.css("background-image",'url("'+imgFile+'")')
		.click(function(){ patAD = $(this).attr("title"); refreshAD(); })
		.appendTo(spatternAD);
	// Redraw map
	refreshAD = function()
	{	
		$("#pselectAD").hide();
		if ( $.inArray(patAD,["hatch","cross","dot","circle","square","tile"]) < 0 )
		{	$("#sizeAD").prop("disabled",true);
			$("#spacingAD").prop("disabled",true);
			$("#angleAD").prop("disabled",true);
			$("#angleAD").next().text("");
		}
		else
		{	$("#sizeAD").prop("disabled",false);
			$("#spacingAD").prop("disabled",false);
			$("#angleAD").prop("disabled",false);
			if (patAD=="hatch") $("#angleAD").next().text("(deg)");
			else $("#angleAD").next().text("(bool)");
		}
		// Calculate image to be drawn outside the map
		var p = new ol.style.FillPattern({	
			pattern: patAD,
			image: (patAD=='Image (PNG)') ? new ol.style.Icon({ src : imgFile }) : undefined,
			ratio: 2,
			color: "#000",
			size: Number($("#sizeAD").val()),
			spacing: Number($("#spacingAD").val()),
			angle: Number($("#angleAD").val())
		});
		$("#selectAD").css('background-image', 'url('+p.getImage().toDataURL()+')');
		updateADStyle();
	};
	refreshAD();
	updateADStyle();
}
	
function getStyleAD(feature)
{	var p = patAD;
	return [ new ol.style.Style(
	{	fill: new ol.style.FillPattern(
		{	pattern: (p!='Image (PNG)') ? p : undefined,
			image: (p=='Image (PNG)') ? new ol.style.Icon({ src : imgFile }) : undefined,
			ratio: 1,
			icon: p=='Image (PNG)' ? new ol.style.Icon ({src:'data/target.png'}) : undefined,
			color: $("#colorAD").val(),
			offset: Number($("#offsetAD").val()),
			scale: Number($("#scaleAD").val()),
			fill: new ol.style.Fill ({ color:$("#bgAD").val() }),
			size: Number($("#sizeAD").val()),
			spacing: Number($("#spacingAD").val()),
			angle: Number($("#angleAD").val())
		})
	})];
}

function updateADStyle(){
	try{maskFilterAD.set('active', false);}catch(e){}
	maskFilterAD = new ol.filter.Mask({ feature: usFull, inner:false, fill: new ol.style.Fill({ color:$("input#maskingFilterAD").css('backgroundColor') }) });
    var len = 0;
    try {
        len = $("#selADBoundaries").val().length;
    } catch (ex) {}
    if (len > 0) {
        for (i = 0; i < len; i++) {
            switch ($("#selADBoundaries").val()[i]) {
                case 'hrr':
					if ($("#switchOCAD").prop('checked')){
						wfsHrr.setStyle(getStyleAD);
						wmsHrr.set('displayInLayerSwitcher', false);
						wmsHrr.setVisible(false);
						wfsHrr.addFilter(maskFilterAD);
						wfsHrr.set('displayInLayerSwitcher', true);
					}
					else{
						wfsHrr.setStyle(getBoundaryAndLabelStyle);
						wmsHrr.set('displayInLayerSwitcher', true);
						wmsHrr.setVisible(true);
						wfsHrr.set('displayInLayerSwitcher', false);
					}
                    break;

                case 'hsa':
					if ($("#switchOCAD").prop('checked')){
						wfsHsa.setStyle(getStyleAD);
						wmsHsa.setVisible(false);
						wmsHsa.set('displayInLayerSwitcher', false);
						wfsHsa.addFilter(maskFilterAD);
						wfsHsa.set('displayInLayerSwitcher', true);
					}
					else{
						wfsHsa.setStyle(getBoundaryAndLabelStyle);
						wmsHsa.setVisible(true);
						wmsHsa.set('displayInLayerSwitcher', true);
						wfsHsa.set('displayInLayerSwitcher', false);
					}
                    break;

                case 'pcsa':
					if ($("#switchOCAD").prop('checked')){
						wfsPcsa.setStyle(getStyleAD);
						wmsPcsa.setVisible(false);
						wmsPcsa.set('displayInLayerSwitcher', false);
						wfsPcsa.addFilter(maskFilterAD);
						wfsPcsa.set('displayInLayerSwitcher', true);
					}
					else{
						wfsPcsa.setStyle(getBoundaryAndLabelStyle);
						wmsPcsa.setVisible(true);
						wmsPcsa.set('displayInLayerSwitcher', true);
						wfsPcsa.set('displayInLayerSwitcher', false);
					}						
					break;

                case 'ccd':
					if ($("#switchOCAD").prop('checked')){
						wfsCCD.setStyle(getStyleAD);
						wmsCCD.setVisible(false);
						wmsCCD.set('displayInLayerSwitcher', false);
						wfsCCD.addFilter(maskFilterAD);
						wfsCCD.set('displayInLayerSwitcher', true);
					}
					else{
						wfsCCD.setStyle(getBoundaryAndLabelStyle);
						wmsCCD.setVisible(true);
						wmsCCD.set('displayInLayerSwitcher', true);
						wfsCCD.set('displayInLayerSwitcher', false);
					}
                    break;

                case 'scsd':
					if ($("#switchOCAD").prop('checked')){
						wfsSCSD.setStyle(getStyleAD);
						wmsSCSD.setVisible(false);
						wmsSCSD.set('displayInLayerSwitcher', false);
						wfsSCSD.addFilter(maskFilterAD);
						wfsSCSD.set('displayInLayerSwitcher', true);
					}
					else{
						wfsSCSD.setStyle(getBoundaryAndLabelStyle);
						wmsSCSD.setVisible(true);
						wmsSCSD.set('displayInLayerSwitcher', true);
						wfsSCSD.set('displayInLayerSwitcher', false);
					}
                    break;

                case 'zips':
					if ($("#switchOCAD").prop('checked')){
						wfsZips.setStyle(getStyleAD);
						wmsZips.setVisible(false);
						wmsZips.set('displayInLayerSwitcher', false);
						wfsZips.addFilter(maskFilterAD);
						wfsZips.set('displayInLayerSwitcher', true);
					}
					else{
						wfsZips.setStyle(getBoundaryAndLabelStyle);
						wmsZips.setVisible(true);
						wmsZips.set('displayInLayerSwitcher', true);
						wfsZips.set('displayInLayerSwitcher', false);
					}
                    break;

                case 'str_coverage':
					if ($("#switchOCAD").prop('checked')){
						wfsSTRCoverage.setStyle(getStyleAD);
						wmsSTRCoverage.setVisible(false);
						wmsSTRCoverage.set('displayInLayerSwitcher', false);
						wfsSTRCoverage.addFilter(maskFilterAD);
						wfsSTRCoverage.set('displayInLayerSwitcher', true);
					}
					else{
						wfsSTRCoverage.setStyle(getBoundaryAndLabelStyle);
						wmsSTRCoverage.setVisible(true);
						wmsSTRCoverage.set('displayInLayerSwitcher', true);
						wfsSTRCoverage.set('displayInLayerSwitcher', false);
					}
                    break;
            }
        }
    }
}

function changePaletteSO(){
	switch ($("#cohortOptsSO").val()) {
        case 'flat':
			wmsTriballand.getSource().updateParams({
				'SLD_Body': null
			});
			wmsSTD10.getSource().updateParams({
				'SLD_Body': null
			});
			wmsSTD5.getSource().updateParams({
				'SLD_Body': null
			});
			wmsRFF.getSource().updateParams({
				'SLD_Body': null
			});
			wmsCulturalRegions.getSource().updateParams({
				'SLD_Body': null
			});
			wmsNeighbors.getSource().updateParams({
				'SLD_Body': null
			});
        break;
		case 'topo':
			wmsNeighbors.getSource().updateParams({
				'SLD_Body': '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:neighbourcities</Name><UserStyle><FeatureTypeStyle>' +topoSldContent + '</FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>'
			});
			wmsRFF.getSource().updateParams({
				'SLD_Body': '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:rff</Name><UserStyle><FeatureTypeStyle>' +topoSldContent + '</FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>'
			});
			wmsCulturalRegions.getSource().updateParams({
				'SLD_Body': '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:cultural_reg</Name><UserStyle><FeatureTypeStyle>' +topoSldContent + '</FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>'
			});
			wmsSTD5.getSource().updateParams({
				'SLD_Body': '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:std5</Name><UserStyle><FeatureTypeStyle>' +topoSldContent + '</FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>'
			});
			wmsSTD10.getSource().updateParams({
				'SLD_Body': '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:std10</Name><UserStyle><FeatureTypeStyle>' +topoSldContent + '</FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>'
			});
			wmsTriballand.getSource().updateParams({
				'SLD_Body': '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:triballand</Name><UserStyle><FeatureTypeStyle>' +topoSldContent + '</FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>'
			});
			padus.getSource().updateParams({
				'SLD_Body': '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:padus</Name><UserStyle><FeatureTypeStyle>' +topoSldContent + '</FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>'
			});
		break;
    }
}

function changeOCSO(val){
	if(val == "on"){
		$("#divOCSO").show();
	}
	else{
		$("#divOCSO").hide();
	}
		
	ol.style.FillPattern.addPattern ("copy (char pattern)", { char:"©" });
	ol.style.FillPattern.addPattern ("bug (fontawesome)", { char:'\uf188', size:12, font:"10px FontAwesome" });
	ol.style.FillPattern.addPattern ("smiley (width angle)", { char:'\uf118', size:20, angle:true, font:"15px FontAwesome" });

	// Popup
	$("#selectSO").click(function()
	{	$("#pselectSO").toggle();
	});

	patSO = "hatch"
	spatternSO = $("#pselectSO");
	for (var i in ol.style.FillPattern.prototype.patterns)
	{	var p = new ol.style.FillPattern({ pattern:i })
		$("<div>").attr('title',i)
				.css("background-image",'url("'+p.getImage().toDataURL()+'")')
				.click(function(){ patSO = $(this).attr("title"); refreshSO(); })
				.appendTo(spatternSO);
	}
	var p = new ol.style.FillPattern({ image: new ol.style.Icon({ src : imgFile }) });
	$("<div>").attr('title','Image (PNG)')
		.css("background-image",'url("'+imgFile+'")')
		.click(function(){ patSO = $(this).attr("title"); refreshSO(); })
		.appendTo(spatternSO);
	// Redraw map
	refreshSO = function()
	{	
		$("#pselectSO").hide();
		if ( $.inArray(patSO,["hatch","cross","dot","circle","square","tile"]) < 0 )
		{	$("#sizeSO").prop("disabled",true);
			$("#spacingSO").prop("disabled",true);
			$("#angleSO").prop("disabled",true);
			$("#angleSO").next().text("");
		}
		else
		{	$("#sizeSO").prop("disabled",false);
			$("#spacingSO").prop("disabled",false);
			$("#angleSO").prop("disabled",false);
			if (patSO=="hatch") $("#angleSO").next().text("(deg)");
			else $("#angleSO").next().text("(bool)");
		}
		// Calculate image to be drawn outside the map
		var p = new ol.style.FillPattern({	
			pattern: patSO,
			image: (patSO=='Image (PNG)') ? new ol.style.Icon({ src : imgFile }) : undefined,
			ratio: 2,
			color: "#000",
			size: Number($("#sizeSO").val()),
			spacing: Number($("#spacingSO").val()),
			angle: Number($("#angleSO").val())
		});
		$("#selectSO").css('background-image', 'url('+p.getImage().toDataURL()+')');
		updateSOStyle();
	};
	refreshSO();
	updateSOStyle();
}
	
function getStyleSO(feature)
{
	var p = patSO;
	return [new ol.style.Style(
	{
		fill: new ol.style.FillPattern(
		{	pattern: (p!='Image (PNG)') ? p : undefined,
			image: (p=='Image (PNG)') ? new ol.style.Icon({ src : imgFile }) : undefined,
			ratio: 1,
			icon: p=='Image (PNG)' ? new ol.style.Icon ({src:'data/target.png'}) : undefined,
			color: $("#colorSO").val(),
			offset: Number($("#offsetSO").val()),
			scale: Number($("#scaleSO").val()),
			fill: new ol.style.Fill ({ color:$("#bgSO").val() }),
			size: Number($("#sizeSO").val()),
			spacing: Number($("#spacingSO").val()),
			angle: Number($("#angleSO").val())
		})
	})];
}

function updateSOStyle(){
	try{maskFilterSO.set('active', false);}catch(e){}
	maskFilterSO = new ol.filter.Mask({ feature: usFull, inner:false, fill: new ol.style.Fill({ color:$("input#maskingFilterSO").css('backgroundColor') }) });
    var len = 0;
    try {
        len = $("#selSOboundaries").val().length;
    } catch (ex) {}
    if (len > 0) {
        for (i = 0; i < len; i++) {
            switch ($("#selSOboundaries").val()[i]) {
                case 'neighborhoods':
					if ($("#switchOCSO").prop('checked')){
						wfsNeighbors.setStyle(getStyleSO);
						wmsNeighbors.set('displayInLayerSwitcher', false);
						wmsNeighbors.setVisible(false);
						wfsNeighbors.addFilter(maskFilterSO);
						wfsNeighbors.set('displayInLayerSwitcher', true);
					}
					else{
						wfsNeighbors.setStyle(getBoundaryAndLabelStyle);
						wmsNeighbors.set('displayInLayerSwitcher', true);
						wmsNeighbors.setVisible(true);
						wfsNeighbors.set('displayInLayerSwitcher', false);
					}
                    break;

                // case 'padus':
					// if ($("#switchOCSO").prop('checked')){
						// wfspa.setStyle(getStyleSO);
						// wmsDistricts.setVisible(false);
						// wmsDistricts.set('displayInLayerSwitcher', false);

						// maskFilterSO = new ol.filter.Mask({ feature: usFull, inner:false, fill: new ol.style.Fill({ color:[0,0,0,0.4] }) });
						// wfsNeighbors.addFilter(maskFilterSO);
					// }
					// else{
						// wfsDistricts.setStyle(getBoundaryAndLabelStyle);
						// wmsDistricts.setVisible(true);
						// wmsDistricts.set('displayInLayerSwitcher', true);
					// }
                    // break;

                case 'rff':
					if ($("#switchOCSO").prop('checked')){
						wfsRFF.setStyle(getStyleSO);
						wmsRFF.setVisible(false);
						wmsRFF.set('displayInLayerSwitcher', false);
						wfsRFF.addFilter(maskFilterSO);
						wfsRFF.set('displayInLayerSwitcher', true);
					}
					else{
						wfsRFF.setStyle(getBoundaryAndLabelStyle);
						wmsRFF.setVisible(true);
						wmsRFF.set('displayInLayerSwitcher', true);
						wfsRFF.set('displayInLayerSwitcher', false);
					}						
					break;

                case 'cultural_regions':
					if ($("#switchOCSO").prop('checked')){
						wfsCulturalRegions.setStyle(getStyleSO);
						wmsCulturalRegions.setVisible(false);
						wmsCulturalRegions.set('displayInLayerSwitcher', false);
						wfsCulturalRegions.addFilter(maskFilterSO);
						wfsCulturalRegions.set('displayInLayerSwitcher', true);
					}
					else{
						wfsCulturalRegions.setStyle(getBoundaryAndLabelStyle);
						wmsCulturalRegions.setVisible(true);
						wmsCulturalRegions.set('displayInLayerSwitcher', true);
						wfsCulturalRegions.set('displayInLayerSwitcher', false);
					}						
					break;

                case 'std5':
					if ($("#switchOCSO").prop('checked')){
						wfsSTD5.setStyle(getStyleSO);
						wmsSTD5.setVisible(false);
						wmsSTD5.set('displayInLayerSwitcher', false);
						wfsSTD5.addFilter(maskFilterSO);
						wfsSTD5.set('displayInLayerSwitcher', true);
					}
					else{
						wfsSTD5.setStyle(getBoundaryAndLabelStyle);
						wmsSTD5.setVisible(true);
						wmsSTD5.set('displayInLayerSwitcher', true);
						wfsSTD5.set('displayInLayerSwitcher', false);
					}
                    break;

                case 'std10':
					if ($("#switchOCSO").prop('checked')){
						wfsSTD10.setStyle(getStyleSO);
						wmsSTD10.setVisible(false);
						wmsSTD10.set('displayInLayerSwitcher', false);
						wfsSTD10.addFilter(maskFilterSO);
						wfsSTD10.set('displayInLayerSwitcher', true);
					}
					else{
						wfsSTD10.setStyle(getBoundaryAndLabelStyle);
						wmsSTD10.setVisible(true);
						wmsSTD10.set('displayInLayerSwitcher', true);
						wfsSTD10.set('displayInLayerSwitcher', false);
					}
                    break;

                case 'triballand':
					if ($("#switchOCSO").prop('checked')){
						wfsTriballand.setStyle(getStyleSO);
						wmsTriballand.setVisible(false);
						wmsTriballand.set('displayInLayerSwitcher', false);
						wfsTriballand.addFilter(maskFilterSO);
						wfsTriballand.set('displayInLayerSwitcher', true);
					}
					else{
						wfsTriballand.setStyle(getBoundaryAndLabelStyle);
						wmsTriballand.setVisible(true);
						wmsTriballand.set('displayInLayerSwitcher', true);
						wfsTriballand.set('displayInLayerSwitcher', false);
					}
                    break;
            }
        }
    }
}

function changePaletteEV(){
	switch ($("#cohortOptsEV").val()) {
        case 'flat':
			subwatershed.getSource().updateParams({
				'SLD_Body': null
			});
			watershedsubbasin.getSource().updateParams({
				'SLD_Body': null
			});
			watershedsubregions.getSource().updateParams({
				'SLD_Body': null
			});
			watershedregions.getSource().updateParams({
				'SLD_Body': null
			});
        break;
		case 'topo':
			subwatershed.getSource().updateParams({
				'SLD_Body': '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:subwatershed</Name><UserStyle><FeatureTypeStyle>' +topoSldContent + '</FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>'
			});
			watershedsubbasin.getSource().updateParams({
				'SLD_Body': '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:subbasin</Name><UserStyle><FeatureTypeStyle>' +topoSldContent + '</FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>'
			});
			watershedsubregions.getSource().updateParams({
				'SLD_Body': '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:watershedsubregions</Name><UserStyle><FeatureTypeStyle>' +topoSldContent + '</FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>'
			});
			watershedregions.getSource().updateParams({
				'SLD_Body': '<?xml version="1.0" encoding="UTF-8"?><StyledLayerDescriptor version="1.0.0" xsi:schemaLocation="http://www.opengis.net/sld StyledLayerDescriptor.xsd" xmlns="http://www.opengis.net/sld" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><NamedLayer><Name>Farmer:watershedregions</Name><UserStyle><FeatureTypeStyle>' +topoSldContent + '</FeatureTypeStyle></UserStyle></NamedLayer></StyledLayerDescriptor>'
			});
		break;
    }
}

function changeOCEV(val){
	if(val == "on"){
		$("#divOCEV").show();
	}
	else{
		$("#divOCEV").hide();
	}
		
	ol.style.FillPattern.addPattern ("copy (char pattern)", { char:"©" });
	ol.style.FillPattern.addPattern ("bug (fontawesome)", { char:'\uf188', size:12, font:"10px FontAwesome" });
	ol.style.FillPattern.addPattern ("smiley (width angle)", { char:'\uf118', size:20, angle:true, font:"15px FontAwesome" });

	// Popup
	$("#selectEV").click(function()
	{	$("#pselectEV").toggle();
	});

	patEV = "hatch"
	spatternEV = $("#pselectEV");
	for (var i in ol.style.FillPattern.prototype.patterns)
	{	var p = new ol.style.FillPattern({ pattern:i })
		$("<div>").attr('title',i)
				.css("background-image",'url("'+p.getImage().toDataURL()+'")')
				.click(function(){ patEV = $(this).attr("title"); refreshEV(); })
				.appendTo(spatternEV);
	}
	var p = new ol.style.FillPattern({ image: new ol.style.Icon({ src : imgFile }) });
	$("<div>").attr('title','Image (PNG)')
		.css("background-image",'url("'+imgFile+'")')
		.click(function(){ patEV = $(this).attr("title"); refreshEV(); })
		.appendTo(spatternEV);
	// Redraw map
	refreshEV = function()
	{	
		$("#pselectEV").hide();
		if ( $.inArray(patEV,["hatch","cross","dot","circle","square","tile"]) < 0 )
		{	$("#sizeEV").prop("disabled",true);
			$("#spacingEV").prop("disabled",true);
			$("#angleEV").prop("disabled",true);
			$("#angleEV").next().text("");
		}
		else
		{	$("#sizeEV").prop("disabled",false);
			$("#spacingEV").prop("disabled",false);
			$("#angleEV").prop("disabled",false);
			if (patEV=="hatch") $("#angleEV").next().text("(deg)");
			else $("#angleEV").next().text("(bool)");
		}
		// Calculate image to be drawn outside the map
		var p = new ol.style.FillPattern({	
			pattern: patEV,
			image: (patEV=='Image (PNG)') ? new ol.style.Icon({ src : imgFile }) : undefined,
			ratio: 2,
			color: "#000",
			size: Number($("#sizeEV").val()),
			spacing: Number($("#spacingEV").val()),
			angle: Number($("#angleEV").val())
		});
		$("#selectEV").css('background-image', 'url('+p.getImage().toDataURL()+')');
		updateEVStyle();
	};
	refreshEV();
	updateEVStyle();
}
	
function getStyleEV(feature)
{
	var p = patEV;
	return [new ol.style.Style(
	{
		fill: new ol.style.FillPattern(
		{	pattern: (p!='Image (PNG)') ? p : undefined,
			image: (p=='Image (PNG)') ? new ol.style.Icon({ src : imgFile }) : undefined,
			ratio: 1,
			icon: p=='Image (PNG)' ? new ol.style.Icon ({src:'data/target.png'}) : undefined,
			color: $("#colorEV").val(),
			offset: Number($("#offsetEV").val()),
			scale: Number($("#scaleEV").val()),
			fill: new ol.style.Fill ({ color:$("#bgEV").val() }),
			size: Number($("#sizeEV").val()),
			spacing: Number($("#spacingEV").val()),
			angle: Number($("#angleEV").val())
		})
	})];
}

function updateEVStyle(){
	try{maskFilterEV.set('active', false);}catch(e){}
	maskFilterEV = new ol.filter.Mask({ feature: usFull, inner:false, fill: new ol.style.Fill({ color:$("input#maskingFilterEV").css('backgroundColor') }) });
    var len = 0;
    try {
        len = $("#selEVboundaries").val().length;
    } catch (ex) {}
    if (len > 0) {
        for (i = 0; i < len; i++) {
            switch ($("#selEVboundaries").val()[i]) {

                case 'coastalline':
					if ($("#switchOCEV").prop('checked')){
						coastalline.setVisible(false);
						coastalline.set('displayInLayerSwitcher', false);
						coastalline.addFilter(maskFilterEV);
					}
					else{
						coastalline.setVisible(true);
						coastalline.set('displayInLayerSwitcher', true);
					}
                    break;
                case 'subwatershed':
					if ($("#switchOCEV").prop('checked')){
						wfsSubwatershed.setStyle(getStyleEV);
						subwatershed.setVisible(false);
						subwatershed.set('displayInLayerSwitcher', false);
						wfsSubwatershed.addFilter(maskFilterEV);
						wfsSubwatershed.set('displayInLayerSwitcher', true);
					}
					else{
						wfsSubwatershed.setStyle(getBoundaryAndLabelStyle);
						subwatershed.setVisible(true);
						subwatershed.set('displayInLayerSwitcher', true);
						wfsSubwatershed.set('displayInLayerSwitcher', false);
					}
                    break;
                case 'watershedsubbasin':
					if ($("#switchOCEV").prop('checked')){
						wfsSubbasin.setStyle(getStyleEV);
						watershedsubbasin.setVisible(false);
						watershedsubbasin.set('displayInLayerSwitcher', false);
						wfsSubbasin.addFilter(maskFilterEV);
						wfsSubbasin.set('displayInLayerSwitcher', true);
					}
					else{
						wfsSubbasin.setStyle(getBoundaryAndLabelStyle);
						watershedsubbasin.setVisible(true);
						watershedsubbasin.set('displayInLayerSwitcher', true);
						wfsSubbasin.set('displayInLayerSwitcher', false);
					}
                    break;
                case 'watershedsubregions':
					if ($("#switchOCEV").prop('checked')){
						wfsSubregions.setStyle(getStyleEV);
						watershedsubregions.setVisible(false);
						watershedsubregions.set('displayInLayerSwitcher', false);
						wfsSubregions.addFilter(maskFilterEV);
						wfsSubregions.set('displayInLayerSwitcher', true);
					}
					else{
						wfsSubregions.setStyle(getBoundaryAndLabelStyle);
						watershedsubregions.setVisible(true);
						watershedsubregions.set('displayInLayerSwitcher', true);
						wfsSubregions.set('displayInLayerSwitcher', false);
					}
                    break;
                case 'watershedregions':
					if ($("#switchOCEV").prop('checked')){
						wfsRegions.setStyle(getStyleEV);
						watershedregions.setVisible(false);
						watershedregions.set('displayInLayerSwitcher', false);
						wfsRegions.addFilter(maskFilterEV);
						wfsRegions.set('displayInLayerSwitcher', true);
					}
					else{
						wfsRegions.setStyle(getBoundaryAndLabelStyle);
						watershedregions.setVisible(true);
						watershedregions.set('displayInLayerSwitcher', true);
						wfsRegions.set('displayInLayerSwitcher', false);
					}
                    break;
            }
        }
    }
}